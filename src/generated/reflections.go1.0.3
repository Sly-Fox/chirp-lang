package generated

import archive_tar "archive/tar"
import archive_zip "archive/zip"
import bufio "bufio"
import bytes "bytes"
import compress_bzip2 "compress/bzip2"
import compress_flate "compress/flate"
import compress_gzip "compress/gzip"
import compress_lzw "compress/lzw"
import compress_zlib "compress/zlib"
import container_heap "container/heap"
import container_list "container/list"
import container_ring "container/ring"
import crypto "crypto"
import crypto_aes "crypto/aes"
import crypto_cipher "crypto/cipher"
import crypto_des "crypto/des"
import crypto_dsa "crypto/dsa"
import crypto_ecdsa "crypto/ecdsa"
import crypto_elliptic "crypto/elliptic"
import crypto_hmac "crypto/hmac"
import crypto_md5 "crypto/md5"
import crypto_rand "crypto/rand"
import crypto_rc4 "crypto/rc4"
import crypto_rsa "crypto/rsa"
import crypto_sha1 "crypto/sha1"
import crypto_sha256 "crypto/sha256"
import crypto_sha512 "crypto/sha512"
import crypto_subtle "crypto/subtle"
import crypto_tls "crypto/tls"
import crypto_x509 "crypto/x509"
import crypto_x509_pkix "crypto/x509/pkix"
import database_sql "database/sql"
import database_sql_driver "database/sql/driver"
import debug_dwarf "debug/dwarf"
import debug_elf "debug/elf"
import debug_gosym "debug/gosym"
import debug_macho "debug/macho"
import debug_pe "debug/pe"
import encoding_ascii85 "encoding/ascii85"
import encoding_asn1 "encoding/asn1"
import encoding_base32 "encoding/base32"
import encoding_base64 "encoding/base64"
import encoding_binary "encoding/binary"
import encoding_csv "encoding/csv"
import encoding_gob "encoding/gob"
import encoding_hex "encoding/hex"
import encoding_json "encoding/json"
import encoding_pem "encoding/pem"
import encoding_xml "encoding/xml"
import errors "errors"
import expvar "expvar"
import flag "flag"
import fmt "fmt"
import go_ast "go/ast"
import go_build "go/build"
import go_doc "go/doc"
import go_parser "go/parser"
import go_printer "go/printer"
import go_scanner "go/scanner"
import go_token "go/token"
import hash "hash"
import hash_adler32 "hash/adler32"
import hash_crc32 "hash/crc32"
import hash_crc64 "hash/crc64"
import hash_fnv "hash/fnv"
import html "html"
import html_template "html/template"
import image "image"
import image_color "image/color"
import image_draw "image/draw"
import image_gif "image/gif"
import image_jpeg "image/jpeg"
import image_png "image/png"
import index_suffixarray "index/suffixarray"
import io "io"
import io_ioutil "io/ioutil"
import log "log"
import log_syslog "log/syslog"
import math "math"
import math_big "math/big"
import math_cmplx "math/cmplx"
import math_rand "math/rand"
import mime "mime"
import mime_multipart "mime/multipart"
import net "net"
import net_http "net/http"
import net_http_cgi "net/http/cgi"
import net_http_fcgi "net/http/fcgi"
import net_http_httptest "net/http/httptest"
import net_http_httputil "net/http/httputil"
import net_http_pprof "net/http/pprof"
import net_mail "net/mail"
import net_rpc "net/rpc"
import net_rpc_jsonrpc "net/rpc/jsonrpc"
import net_smtp "net/smtp"
import net_textproto "net/textproto"
import net_url "net/url"
import os "os"
import os_exec "os/exec"
import os_signal "os/signal"
import os_user "os/user"
import path "path"
import path_filepath "path/filepath"
import reflect "reflect"
import regexp "regexp"
import regexp_syntax "regexp/syntax"
import runtime "runtime"
import runtime_debug "runtime/debug"
import runtime_pprof "runtime/pprof"
import sort "sort"
import strconv "strconv"
import strings "strings"
import sync "sync"
import sync_atomic "sync/atomic"
import syscall "syscall"
import testing "testing"
import testing_iotest "testing/iotest"
import testing_quick "testing/quick"
import text_scanner "text/scanner"
import text_tabwriter "text/tabwriter"
import text_template "text/template"
import text_template_parse "text/template/parse"
import time "time"
import unicode "unicode"
import unicode_utf16 "unicode/utf16"
import unicode_utf8 "unicode/utf8"

var Types map[string]interface{} = make(map[string]interface{}, 0)
var Funcs map[string]interface{} = make(map[string]interface{}, 0)
var Vars map[string]interface{} = make(map[string]interface{}, 0)
var Consts map[string]interface{} = make(map[string]interface{}, 0)

func init() {

//    const archive/tar.TypeLink
//    const archive/tar.TypeBlock
//    const archive/tar.TypeXHeader
//      var archive/tar.ErrFieldTooLong
//    const archive/tar.TypeRegA
//    const archive/tar.TypeDir
//      var archive/tar.ErrHeader
//     type archive/tar.Writer
//      var archive/tar.ErrWriteTooLong
//    const archive/tar.TypeChar
//      var archive/tar.ErrWriteAfterClose
//    const archive/tar.TypeReg
//     func archive/tar.NewReader
//     func archive/tar.NewWriter
//    const archive/tar.TypeSymlink
//     type archive/tar.Header
//    const archive/tar.TypeFifo
//    const archive/tar.TypeXGlobalHeader
//     type archive/tar.Reader
//    const archive/tar.TypeCont

Types["/archive/tar/Header"] = new(*archive_tar.Header)
//# OLD <{tHeader}> 0
//# NEW <{tHeader}> 1
//? Consts["/archive/tar/TypeFifo"] = archive_tar.TypeFifo
//# OLD <{tTypeFifo}> 0
//# NEW <{tTypeFifo}> 1
//? Consts["/archive/tar/TypeXGlobalHeader"] = archive_tar.TypeXGlobalHeader
//# OLD <{tTypeXGlobalHeader}> 0
//# NEW <{tTypeXGlobalHeader}> 1
Types["/archive/tar/Reader"] = new(*archive_tar.Reader)
//# OLD <{tReader}> 0
//# NEW <{tReader}> 1
//? Consts["/archive/tar/TypeCont"] = archive_tar.TypeCont
//# OLD <{tTypeCont}> 0
//# NEW <{tTypeCont}> 1
//? Consts["/archive/tar/TypeLink"] = archive_tar.TypeLink
//# OLD <{tTypeLink}> 0
//# NEW <{tTypeLink}> 1
//? Consts["/archive/tar/TypeBlock"] = archive_tar.TypeBlock
//# OLD <{tTypeBlock}> 0
//# NEW <{tTypeBlock}> 1
//? Consts["/archive/tar/TypeXHeader"] = archive_tar.TypeXHeader
//# OLD <{tTypeXHeader}> 0
//# NEW <{tTypeXHeader}> 1
Vars["/archive/tar/ErrFieldTooLong"] = &archive_tar.ErrFieldTooLong
//# OLD <{tErrFieldTooLong}> 0
//# NEW <{tErrFieldTooLong}> 1
//? Consts["/archive/tar/TypeRegA"] = archive_tar.TypeRegA
//# OLD <{tTypeRegA}> 0
//# NEW <{tTypeRegA}> 1
//? Consts["/archive/tar/TypeDir"] = archive_tar.TypeDir
//# OLD <{tTypeDir}> 0
//# NEW <{tTypeDir}> 1
Vars["/archive/tar/ErrHeader"] = &archive_tar.ErrHeader
//# OLD <{tErrHeader}> 0
//# NEW <{tErrHeader}> 1
Types["/archive/tar/Writer"] = new(*archive_tar.Writer)
//# OLD <{tWriter}> 0
//# NEW <{tWriter}> 1
Vars["/archive/tar/ErrWriteTooLong"] = &archive_tar.ErrWriteTooLong
//# OLD <{tErrWriteTooLong}> 0
//# NEW <{tErrWriteTooLong}> 1
//? Consts["/archive/tar/TypeChar"] = archive_tar.TypeChar
//# OLD <{tTypeChar}> 0
//# NEW <{tTypeChar}> 1
Vars["/archive/tar/ErrWriteAfterClose"] = &archive_tar.ErrWriteAfterClose
//# OLD <{tErrWriteAfterClose}> 0
//# NEW <{tErrWriteAfterClose}> 1
//? Consts["/archive/tar/TypeReg"] = archive_tar.TypeReg
//# OLD <{tTypeReg}> 0
//# NEW <{tTypeReg}> 1
Funcs["/archive/tar/NewReader"] = archive_tar.NewReader
//# OLD <{tNewReader}> 0
//# NEW <{tNewReader}> 1
Funcs["/archive/tar/NewWriter"] = archive_tar.NewWriter
//# OLD <{tNewWriter}> 0
//# NEW <{tNewWriter}> 1
//? Consts["/archive/tar/TypeSymlink"] = archive_tar.TypeSymlink
//# OLD <{tTypeSymlink}> 0
//# NEW <{tTypeSymlink}> 1


//      var archive/zip.ErrFormat
//     func archive/zip.FileInfoHeader
//     type archive/zip.Reader
//     func archive/zip.NewReader
//     type archive/zip.Writer
//    const archive/zip.Store
//    const archive/zip.Deflate
//     func archive/zip.OpenReader
//     type archive/zip.File
//     type archive/zip.ReadCloser
//     func archive/zip.NewWriter
//      var archive/zip.ErrChecksum
//     type archive/zip.FileHeader
//      var archive/zip.ErrAlgorithm

Types["/archive/zip/Reader"] = new(*archive_zip.Reader)
//# OLD <{zReader}> 0
//# NEW <{zReader}> 1
Funcs["/archive/zip/NewReader"] = archive_zip.NewReader
//# OLD <{zNewReader}> 0
//# NEW <{zNewReader}> 1
Types["/archive/zip/Writer"] = new(*archive_zip.Writer)
//# OLD <{zWriter}> 0
//# NEW <{zWriter}> 1
//? Consts["/archive/zip/Store"] = archive_zip.Store
//# OLD <{zStore}> 0
//# NEW <{zStore}> 1
//? Consts["/archive/zip/Deflate"] = archive_zip.Deflate
//# OLD <{zDeflate}> 0
//# NEW <{zDeflate}> 1
Funcs["/archive/zip/OpenReader"] = archive_zip.OpenReader
//# OLD <{zOpenReader}> 0
//# NEW <{zOpenReader}> 1
Types["/archive/zip/File"] = new(*archive_zip.File)
//# OLD <{zFile}> 0
//# NEW <{zFile}> 1
Types["/archive/zip/ReadCloser"] = new(*archive_zip.ReadCloser)
//# OLD <{zReadCloser}> 0
//# NEW <{zReadCloser}> 1
Funcs["/archive/zip/NewWriter"] = archive_zip.NewWriter
//# OLD <{zNewWriter}> 0
//# NEW <{zNewWriter}> 1
Vars["/archive/zip/ErrChecksum"] = &archive_zip.ErrChecksum
//# OLD <{zErrChecksum}> 0
//# NEW <{zErrChecksum}> 1
Types["/archive/zip/FileHeader"] = new(*archive_zip.FileHeader)
//# OLD <{zFileHeader}> 0
//# NEW <{zFileHeader}> 1
Vars["/archive/zip/ErrAlgorithm"] = &archive_zip.ErrAlgorithm
//# OLD <{zErrAlgorithm}> 0
//# NEW <{zErrAlgorithm}> 1
Vars["/archive/zip/ErrFormat"] = &archive_zip.ErrFormat
//# OLD <{zErrFormat}> 0
//# NEW <{zErrFormat}> 1
Funcs["/archive/zip/FileInfoHeader"] = archive_zip.FileInfoHeader
//# OLD <{zFileInfoHeader}> 0
//# NEW <{zFileInfoHeader}> 1


//     func bufio.NewReaderSize
//      var bufio.ErrInvalidUnreadRune
//     type bufio.Writer
//     type bufio.Reader
//     func bufio.NewReader
//     func bufio.NewWriter
//      var bufio.ErrNegativeCount
//     func bufio.NewWriterSize
//      var bufio.ErrBufferFull
//     func bufio.NewReadWriter
//      var bufio.ErrInvalidUnreadByte
//     type bufio.ReadWriter

Funcs["/bufio/NewReadWriter"] = bufio.NewReadWriter
//# OLD <{bNewReadWriter}> 0
//# NEW <{bNewReadWriter}> 1
Vars["/bufio/ErrInvalidUnreadByte"] = &bufio.ErrInvalidUnreadByte
//# OLD <{bErrInvalidUnreadByte}> 0
//# NEW <{bErrInvalidUnreadByte}> 1
Types["/bufio/ReadWriter"] = new(*bufio.ReadWriter)
//# OLD <{bReadWriter}> 0
//# NEW <{bReadWriter}> 1
Funcs["/bufio/NewReaderSize"] = bufio.NewReaderSize
//# OLD <{bNewReaderSize}> 0
//# NEW <{bNewReaderSize}> 1
Vars["/bufio/ErrInvalidUnreadRune"] = &bufio.ErrInvalidUnreadRune
//# OLD <{bErrInvalidUnreadRune}> 0
//# NEW <{bErrInvalidUnreadRune}> 1
Types["/bufio/Writer"] = new(*bufio.Writer)
//# OLD <{bWriter}> 0
//# NEW <{bWriter}> 1
Types["/bufio/Reader"] = new(*bufio.Reader)
//# OLD <{bReader}> 0
//# NEW <{bReader}> 1
Funcs["/bufio/NewReader"] = bufio.NewReader
//# OLD <{bNewReader}> 0
//# NEW <{bNewReader}> 1
Funcs["/bufio/NewWriter"] = bufio.NewWriter
//# OLD <{bNewWriter}> 0
//# NEW <{bNewWriter}> 1
Vars["/bufio/ErrNegativeCount"] = &bufio.ErrNegativeCount
//# OLD <{bErrNegativeCount}> 0
//# NEW <{bErrNegativeCount}> 1
Funcs["/bufio/NewWriterSize"] = bufio.NewWriterSize
//# OLD <{bNewWriterSize}> 0
//# NEW <{bNewWriterSize}> 1
Vars["/bufio/ErrBufferFull"] = &bufio.ErrBufferFull
//# OLD <{bErrBufferFull}> 0
//# NEW <{bErrBufferFull}> 1


//     func bytes.Index
//    const bytes.MinRead
//     func bytes.Repeat
//     func bytes.SplitN
//     func bytes.IndexRune
//     func bytes.TrimFunc
//     type bytes.Reader
//     func bytes.TrimRightFunc
//     func bytes.Split
//     func bytes.TrimRight
//     func bytes.IndexAny
//     func bytes.EqualFold
//     func bytes.FieldsFunc
//     func bytes.LastIndex
//     func bytes.TrimLeft
//     func bytes.ToTitleSpecial
//     func bytes.LastIndexAny
//     func bytes.Join
//     func bytes.Equal
//     func bytes.IndexByte
//     func bytes.HasPrefix
//     func bytes.NewReader
//     func bytes.Title
//     func bytes.LastIndexFunc
//     func bytes.ToUpper
//     func bytes.TrimLeftFunc
//     func bytes.SplitAfterN
//     func bytes.ToTitle
//     func bytes.Fields
//     func bytes.Compare
//     func bytes.NewBufferString
//     func bytes.Replace
//     func bytes.Count
//     func bytes.Map
//     func bytes.TrimSpace
//     func bytes.IndexFunc
//     func bytes.HasSuffix
//     func bytes.NewBuffer
//     func bytes.Trim
//      var bytes.ErrTooLarge
//     func bytes.ToLowerSpecial
//     func bytes.ToLower
//     func bytes.Contains
//     func bytes.Runes
//     func bytes.ToUpperSpecial
//     func bytes.SplitAfter
//     type bytes.Buffer

Funcs["/bytes/ToLower"] = bytes.ToLower
//# OLD <{bToLower}> 0
//# NEW <{bToLower}> 1
Funcs["/bytes/Contains"] = bytes.Contains
//# OLD <{bContains}> 0
//# NEW <{bContains}> 1
Funcs["/bytes/Runes"] = bytes.Runes
//# OLD <{bRunes}> 0
//# NEW <{bRunes}> 1
Funcs["/bytes/ToUpperSpecial"] = bytes.ToUpperSpecial
//# OLD <{bToUpperSpecial}> 0
//# NEW <{bToUpperSpecial}> 1
Funcs["/bytes/SplitAfter"] = bytes.SplitAfter
//# OLD <{bSplitAfter}> 0
//# NEW <{bSplitAfter}> 1
Types["/bytes/Buffer"] = new(*bytes.Buffer)
//# OLD <{bBuffer}> 0
//# NEW <{bBuffer}> 1
Funcs["/bytes/Index"] = bytes.Index
//# OLD <{bIndex}> 0
//# NEW <{bIndex}> 1
//? Consts["/bytes/MinRead"] = bytes.MinRead
//# OLD <{bMinRead}> 0
//# NEW <{bMinRead}> 1
Funcs["/bytes/Repeat"] = bytes.Repeat
//# OLD <{bRepeat}> 0
//# NEW <{bRepeat}> 1
Funcs["/bytes/SplitN"] = bytes.SplitN
//# OLD <{bSplitN}> 0
//# NEW <{bSplitN}> 1
Funcs["/bytes/IndexRune"] = bytes.IndexRune
//# OLD <{bIndexRune}> 0
//# NEW <{bIndexRune}> 1
Funcs["/bytes/TrimFunc"] = bytes.TrimFunc
//# OLD <{bTrimFunc}> 0
//# NEW <{bTrimFunc}> 1
Types["/bytes/Reader"] = new(*bytes.Reader)
//# OLD <{bReader}> 1
//# NEW <{bReader}> 2
Funcs["/bytes/TrimRightFunc"] = bytes.TrimRightFunc
//# OLD <{bTrimRightFunc}> 0
//# NEW <{bTrimRightFunc}> 1
Funcs["/bytes/Split"] = bytes.Split
//# OLD <{bSplit}> 0
//# NEW <{bSplit}> 1
Funcs["/bytes/TrimRight"] = bytes.TrimRight
//# OLD <{bTrimRight}> 0
//# NEW <{bTrimRight}> 1
Funcs["/bytes/IndexAny"] = bytes.IndexAny
//# OLD <{bIndexAny}> 0
//# NEW <{bIndexAny}> 1
Funcs["/bytes/EqualFold"] = bytes.EqualFold
//# OLD <{bEqualFold}> 0
//# NEW <{bEqualFold}> 1
Funcs["/bytes/FieldsFunc"] = bytes.FieldsFunc
//# OLD <{bFieldsFunc}> 0
//# NEW <{bFieldsFunc}> 1
Funcs["/bytes/LastIndex"] = bytes.LastIndex
//# OLD <{bLastIndex}> 0
//# NEW <{bLastIndex}> 1
Funcs["/bytes/TrimLeft"] = bytes.TrimLeft
//# OLD <{bTrimLeft}> 0
//# NEW <{bTrimLeft}> 1
Funcs["/bytes/ToTitleSpecial"] = bytes.ToTitleSpecial
//# OLD <{bToTitleSpecial}> 0
//# NEW <{bToTitleSpecial}> 1
Funcs["/bytes/LastIndexAny"] = bytes.LastIndexAny
//# OLD <{bLastIndexAny}> 0
//# NEW <{bLastIndexAny}> 1
Funcs["/bytes/Join"] = bytes.Join
//# OLD <{bJoin}> 0
//# NEW <{bJoin}> 1
Funcs["/bytes/Equal"] = bytes.Equal
//# OLD <{bEqual}> 0
//# NEW <{bEqual}> 1
Funcs["/bytes/IndexByte"] = bytes.IndexByte
//# OLD <{bIndexByte}> 0
//# NEW <{bIndexByte}> 1
Funcs["/bytes/HasPrefix"] = bytes.HasPrefix
//# OLD <{bHasPrefix}> 0
//# NEW <{bHasPrefix}> 1
Funcs["/bytes/NewReader"] = bytes.NewReader
//# OLD <{bNewReader}> 1
//# NEW <{bNewReader}> 2
Funcs["/bytes/Title"] = bytes.Title
//# OLD <{bTitle}> 0
//# NEW <{bTitle}> 1
Funcs["/bytes/LastIndexFunc"] = bytes.LastIndexFunc
//# OLD <{bLastIndexFunc}> 0
//# NEW <{bLastIndexFunc}> 1
Funcs["/bytes/ToUpper"] = bytes.ToUpper
//# OLD <{bToUpper}> 0
//# NEW <{bToUpper}> 1
Funcs["/bytes/TrimLeftFunc"] = bytes.TrimLeftFunc
//# OLD <{bTrimLeftFunc}> 0
//# NEW <{bTrimLeftFunc}> 1
Funcs["/bytes/SplitAfterN"] = bytes.SplitAfterN
//# OLD <{bSplitAfterN}> 0
//# NEW <{bSplitAfterN}> 1
Funcs["/bytes/ToTitle"] = bytes.ToTitle
//# OLD <{bToTitle}> 0
//# NEW <{bToTitle}> 1
Funcs["/bytes/Fields"] = bytes.Fields
//# OLD <{bFields}> 0
//# NEW <{bFields}> 1
Funcs["/bytes/Compare"] = bytes.Compare
//# OLD <{bCompare}> 0
//# NEW <{bCompare}> 1
Funcs["/bytes/NewBufferString"] = bytes.NewBufferString
//# OLD <{bNewBufferString}> 0
//# NEW <{bNewBufferString}> 1
Funcs["/bytes/Replace"] = bytes.Replace
//# OLD <{bReplace}> 0
//# NEW <{bReplace}> 1
Funcs["/bytes/Count"] = bytes.Count
//# OLD <{bCount}> 0
//# NEW <{bCount}> 1
Funcs["/bytes/Map"] = bytes.Map
//# OLD <{bMap}> 0
//# NEW <{bMap}> 1
Funcs["/bytes/TrimSpace"] = bytes.TrimSpace
//# OLD <{bTrimSpace}> 0
//# NEW <{bTrimSpace}> 1
Funcs["/bytes/IndexFunc"] = bytes.IndexFunc
//# OLD <{bIndexFunc}> 0
//# NEW <{bIndexFunc}> 1
Funcs["/bytes/HasSuffix"] = bytes.HasSuffix
//# OLD <{bHasSuffix}> 0
//# NEW <{bHasSuffix}> 1
Funcs["/bytes/NewBuffer"] = bytes.NewBuffer
//# OLD <{bNewBuffer}> 0
//# NEW <{bNewBuffer}> 1
Funcs["/bytes/Trim"] = bytes.Trim
//# OLD <{bTrim}> 0
//# NEW <{bTrim}> 1
Vars["/bytes/ErrTooLarge"] = &bytes.ErrTooLarge
//# OLD <{bErrTooLarge}> 0
//# NEW <{bErrTooLarge}> 1
Funcs["/bytes/ToLowerSpecial"] = bytes.ToLowerSpecial
//# OLD <{bToLowerSpecial}> 0
//# NEW <{bToLowerSpecial}> 1


//     func compress/bzip2.NewReader
//     type compress/bzip2.StructuralError

Types["/compress/bzip2/StructuralError"] = new(*compress_bzip2.StructuralError)
//# OLD <{bStructuralError}> 0
//# NEW <{bStructuralError}> 1
Funcs["/compress/bzip2/NewReader"] = compress_bzip2.NewReader
//# OLD <{bNewReader}> 2
//# NEW <{bNewReader}> 3


//     type compress/flate.InternalError
//     func compress/flate.NewWriter
//    const compress/flate.BestSpeed
//     type compress/flate.CorruptInputError
//    const compress/flate.BestCompression
//     func compress/flate.NewWriterDict
//     func compress/flate.NewReaderDict
//     type compress/flate.WriteError
//     type compress/flate.Reader
//     type compress/flate.Writer
//    const compress/flate.DefaultCompression
//     func compress/flate.NewReader
//    const compress/flate.NoCompression
//     type compress/flate.ReadError

//? Consts["/compress/flate/BestSpeed"] = compress_flate.BestSpeed
//# OLD <{fBestSpeed}> 0
//# NEW <{fBestSpeed}> 1
Types["/compress/flate/CorruptInputError"] = new(*compress_flate.CorruptInputError)
//# OLD <{fCorruptInputError}> 0
//# NEW <{fCorruptInputError}> 1
//? Consts["/compress/flate/BestCompression"] = compress_flate.BestCompression
//# OLD <{fBestCompression}> 0
//# NEW <{fBestCompression}> 1
Funcs["/compress/flate/NewWriterDict"] = compress_flate.NewWriterDict
//# OLD <{fNewWriterDict}> 0
//# NEW <{fNewWriterDict}> 1
Funcs["/compress/flate/NewReaderDict"] = compress_flate.NewReaderDict
//# OLD <{fNewReaderDict}> 0
//# NEW <{fNewReaderDict}> 1
Types["/compress/flate/WriteError"] = new(*compress_flate.WriteError)
//# OLD <{fWriteError}> 0
//# NEW <{fWriteError}> 1
Types["/compress/flate/Reader"] = new(*compress_flate.Reader)
//# OLD <{fReader}> 0
//# NEW <{fReader}> 1
Types["/compress/flate/Writer"] = new(*compress_flate.Writer)
//# OLD <{fWriter}> 0
//# NEW <{fWriter}> 1
//? Consts["/compress/flate/DefaultCompression"] = compress_flate.DefaultCompression
//# OLD <{fDefaultCompression}> 0
//# NEW <{fDefaultCompression}> 1
Funcs["/compress/flate/NewReader"] = compress_flate.NewReader
//# OLD <{fNewReader}> 0
//# NEW <{fNewReader}> 1
//? Consts["/compress/flate/NoCompression"] = compress_flate.NoCompression
//# OLD <{fNoCompression}> 0
//# NEW <{fNoCompression}> 1
Types["/compress/flate/ReadError"] = new(*compress_flate.ReadError)
//# OLD <{fReadError}> 0
//# NEW <{fReadError}> 1
Types["/compress/flate/InternalError"] = new(*compress_flate.InternalError)
//# OLD <{fInternalError}> 0
//# NEW <{fInternalError}> 1
Funcs["/compress/flate/NewWriter"] = compress_flate.NewWriter
//# OLD <{fNewWriter}> 0
//# NEW <{fNewWriter}> 1


//    const compress/gzip.NoCompression
//     type compress/gzip.Writer
//    const compress/gzip.BestCompression
//     type compress/gzip.Header
//     func compress/gzip.NewWriter
//     func compress/gzip.NewWriterLevel
//      var compress/gzip.ErrHeader
//    const compress/gzip.DefaultCompression
//    const compress/gzip.BestSpeed
//     func compress/gzip.NewReader
//      var compress/gzip.ErrChecksum
//     type compress/gzip.Reader

Funcs["/compress/gzip/NewWriterLevel"] = compress_gzip.NewWriterLevel
//# OLD <{gNewWriterLevel}> 0
//# NEW <{gNewWriterLevel}> 1
Vars["/compress/gzip/ErrHeader"] = &compress_gzip.ErrHeader
//# OLD <{gErrHeader}> 0
//# NEW <{gErrHeader}> 1
//? Consts["/compress/gzip/DefaultCompression"] = compress_gzip.DefaultCompression
//# OLD <{gDefaultCompression}> 0
//# NEW <{gDefaultCompression}> 1
//? Consts["/compress/gzip/BestSpeed"] = compress_gzip.BestSpeed
//# OLD <{gBestSpeed}> 0
//# NEW <{gBestSpeed}> 1
Funcs["/compress/gzip/NewReader"] = compress_gzip.NewReader
//# OLD <{gNewReader}> 0
//# NEW <{gNewReader}> 1
Vars["/compress/gzip/ErrChecksum"] = &compress_gzip.ErrChecksum
//# OLD <{gErrChecksum}> 0
//# NEW <{gErrChecksum}> 1
Types["/compress/gzip/Reader"] = new(*compress_gzip.Reader)
//# OLD <{gReader}> 0
//# NEW <{gReader}> 1
//? Consts["/compress/gzip/NoCompression"] = compress_gzip.NoCompression
//# OLD <{gNoCompression}> 0
//# NEW <{gNoCompression}> 1
Types["/compress/gzip/Writer"] = new(*compress_gzip.Writer)
//# OLD <{gWriter}> 0
//# NEW <{gWriter}> 1
//? Consts["/compress/gzip/BestCompression"] = compress_gzip.BestCompression
//# OLD <{gBestCompression}> 0
//# NEW <{gBestCompression}> 1
Types["/compress/gzip/Header"] = new(*compress_gzip.Header)
//# OLD <{gHeader}> 0
//# NEW <{gHeader}> 1
Funcs["/compress/gzip/NewWriter"] = compress_gzip.NewWriter
//# OLD <{gNewWriter}> 0
//# NEW <{gNewWriter}> 1


//     func compress/lzw.NewWriter
//     func compress/lzw.NewReader
//    const compress/lzw.LSB
//     type compress/lzw.Order
//    const compress/lzw.MSB

Types["/compress/lzw/Order"] = new(*compress_lzw.Order)
//# OLD <{lOrder}> 0
//# NEW <{lOrder}> 1
//? Consts["/compress/lzw/MSB"] = compress_lzw.MSB
//# OLD <{lMSB}> 0
//# NEW <{lMSB}> 1
Funcs["/compress/lzw/NewWriter"] = compress_lzw.NewWriter
//# OLD <{lNewWriter}> 0
//# NEW <{lNewWriter}> 1
Funcs["/compress/lzw/NewReader"] = compress_lzw.NewReader
//# OLD <{lNewReader}> 0
//# NEW <{lNewReader}> 1
//? Consts["/compress/lzw/LSB"] = compress_lzw.LSB
//# OLD <{lLSB}> 0
//# NEW <{lLSB}> 1


//      var compress/zlib.ErrHeader
//     func compress/zlib.NewWriterLevelDict
//      var compress/zlib.ErrDictionary
//     func compress/zlib.NewWriter
//     func compress/zlib.NewWriterLevel
//    const compress/zlib.NoCompression
//    const compress/zlib.BestCompression
//      var compress/zlib.ErrChecksum
//    const compress/zlib.BestSpeed
//     func compress/zlib.NewReaderDict
//     type compress/zlib.Writer
//     func compress/zlib.NewReader
//    const compress/zlib.DefaultCompression

Types["/compress/zlib/Writer"] = new(*compress_zlib.Writer)
//# OLD <{zWriter}> 1
//# NEW <{zWriter}> 2
Funcs["/compress/zlib/NewReader"] = compress_zlib.NewReader
//# OLD <{zNewReader}> 1
//# NEW <{zNewReader}> 2
//? Consts["/compress/zlib/DefaultCompression"] = compress_zlib.DefaultCompression
//# OLD <{zDefaultCompression}> 0
//# NEW <{zDefaultCompression}> 1
Vars["/compress/zlib/ErrHeader"] = &compress_zlib.ErrHeader
//# OLD <{zErrHeader}> 0
//# NEW <{zErrHeader}> 1
Funcs["/compress/zlib/NewWriterLevelDict"] = compress_zlib.NewWriterLevelDict
//# OLD <{zNewWriterLevelDict}> 0
//# NEW <{zNewWriterLevelDict}> 1
Vars["/compress/zlib/ErrDictionary"] = &compress_zlib.ErrDictionary
//# OLD <{zErrDictionary}> 0
//# NEW <{zErrDictionary}> 1
Funcs["/compress/zlib/NewWriter"] = compress_zlib.NewWriter
//# OLD <{zNewWriter}> 1
//# NEW <{zNewWriter}> 2
Funcs["/compress/zlib/NewWriterLevel"] = compress_zlib.NewWriterLevel
//# OLD <{zNewWriterLevel}> 0
//# NEW <{zNewWriterLevel}> 1
//? Consts["/compress/zlib/NoCompression"] = compress_zlib.NoCompression
//# OLD <{zNoCompression}> 0
//# NEW <{zNoCompression}> 1
//? Consts["/compress/zlib/BestCompression"] = compress_zlib.BestCompression
//# OLD <{zBestCompression}> 0
//# NEW <{zBestCompression}> 1
Vars["/compress/zlib/ErrChecksum"] = &compress_zlib.ErrChecksum
//# OLD <{zErrChecksum}> 1
//# NEW <{zErrChecksum}> 2
//? Consts["/compress/zlib/BestSpeed"] = compress_zlib.BestSpeed
//# OLD <{zBestSpeed}> 0
//# NEW <{zBestSpeed}> 1
Funcs["/compress/zlib/NewReaderDict"] = compress_zlib.NewReaderDict
//# OLD <{zNewReaderDict}> 0
//# NEW <{zNewReaderDict}> 1


//     func container/heap.Remove
//     func container/heap.Pop
//     func container/heap.Push
//     func container/heap.Init
//     type container/heap.Interface

Funcs["/container/heap/Remove"] = container_heap.Remove
//# OLD <{hRemove}> 0
//# NEW <{hRemove}> 1
Funcs["/container/heap/Pop"] = container_heap.Pop
//# OLD <{hPop}> 0
//# NEW <{hPop}> 1
Funcs["/container/heap/Push"] = container_heap.Push
//# OLD <{hPush}> 0
//# NEW <{hPush}> 1
Funcs["/container/heap/Init"] = container_heap.Init
//# OLD <{hInit}> 0
//# NEW <{hInit}> 1
Types["/container/heap/Interface"] = new(*container_heap.Interface)
//# OLD <{hInterface}> 0
//# NEW <{hInterface}> 1


//     type container/list.Element
//     func container/list.New
//     type container/list.List

Types["/container/list/List"] = new(*container_list.List)
//# OLD <{lList}> 0
//# NEW <{lList}> 1
Types["/container/list/Element"] = new(*container_list.Element)
//# OLD <{lElement}> 0
//# NEW <{lElement}> 1
Funcs["/container/list/New"] = container_list.New
//# OLD <{lNew}> 0
//# NEW <{lNew}> 1


//     func container/ring.New
//     type container/ring.Ring

Funcs["/container/ring/New"] = container_ring.New
//# OLD <{rNew}> 0
//# NEW <{rNew}> 1
Types["/container/ring/Ring"] = new(*container_ring.Ring)
//# OLD <{rRing}> 0
//# NEW <{rRing}> 1


//    const crypto.RIPEMD160
//     func crypto.RegisterHash
//    const crypto.MD4
//    const crypto.SHA256
//    const crypto.MD5
//    const crypto.MD5SHA1
//    const crypto.SHA384
//     type crypto.PrivateKey
//    const crypto.SHA224
//    const crypto.SHA512
//    const crypto.SHA1
//     type crypto.Hash

Funcs["/crypto/RegisterHash"] = crypto.RegisterHash
//# OLD <{cRegisterHash}> 0
//# NEW <{cRegisterHash}> 1
//? Consts["/crypto/MD4"] = crypto.MD4
//# OLD <{cMD4}> 0
//# NEW <{cMD4}> 1
//? Consts["/crypto/SHA256"] = crypto.SHA256
//# OLD <{cSHA256}> 0
//# NEW <{cSHA256}> 1
//? Consts["/crypto/MD5"] = crypto.MD5
//# OLD <{cMD5}> 0
//# NEW <{cMD5}> 1
//? Consts["/crypto/MD5SHA1"] = crypto.MD5SHA1
//# OLD <{cMD5SHA1}> 0
//# NEW <{cMD5SHA1}> 1
//? Consts["/crypto/SHA384"] = crypto.SHA384
//# OLD <{cSHA384}> 0
//# NEW <{cSHA384}> 1
Types["/crypto/PrivateKey"] = new(*crypto.PrivateKey)
//# OLD <{cPrivateKey}> 0
//# NEW <{cPrivateKey}> 1
//? Consts["/crypto/SHA224"] = crypto.SHA224
//# OLD <{cSHA224}> 0
//# NEW <{cSHA224}> 1
//? Consts["/crypto/SHA512"] = crypto.SHA512
//# OLD <{cSHA512}> 0
//# NEW <{cSHA512}> 1
//? Consts["/crypto/SHA1"] = crypto.SHA1
//# OLD <{cSHA1}> 0
//# NEW <{cSHA1}> 1
Types["/crypto/Hash"] = new(*crypto.Hash)
//# OLD <{cHash}> 0
//# NEW <{cHash}> 1
//? Consts["/crypto/RIPEMD160"] = crypto.RIPEMD160
//# OLD <{cRIPEMD160}> 0
//# NEW <{cRIPEMD160}> 1


//    const crypto/aes.BlockSize
//     func crypto/aes.NewCipher
//     type crypto/aes.KeySizeError

//? Consts["/crypto/aes/BlockSize"] = crypto_aes.BlockSize
//# OLD <{aBlockSize}> 0
//# NEW <{aBlockSize}> 1
Funcs["/crypto/aes/NewCipher"] = crypto_aes.NewCipher
//# OLD <{aNewCipher}> 0
//# NEW <{aNewCipher}> 1
Types["/crypto/aes/KeySizeError"] = new(*crypto_aes.KeySizeError)
//# OLD <{aKeySizeError}> 0
//# NEW <{aKeySizeError}> 1


//     func crypto/cipher.NewOFB
//     type crypto/cipher.BlockMode
//     func crypto/cipher.NewCTR
//     type crypto/cipher.StreamReader
//     func crypto/cipher.NewCBCDecrypter
//     func crypto/cipher.NewCFBEncrypter
//     type crypto/cipher.StreamWriter
//     type crypto/cipher.Stream
//     func crypto/cipher.NewCFBDecrypter
//     type crypto/cipher.Block
//     func crypto/cipher.NewCBCEncrypter

Funcs["/crypto/cipher/NewOFB"] = crypto_cipher.NewOFB
//# OLD <{cNewOFB}> 0
//# NEW <{cNewOFB}> 1
Types["/crypto/cipher/BlockMode"] = new(*crypto_cipher.BlockMode)
//# OLD <{cBlockMode}> 0
//# NEW <{cBlockMode}> 1
Funcs["/crypto/cipher/NewCTR"] = crypto_cipher.NewCTR
//# OLD <{cNewCTR}> 0
//# NEW <{cNewCTR}> 1
Types["/crypto/cipher/StreamReader"] = new(*crypto_cipher.StreamReader)
//# OLD <{cStreamReader}> 0
//# NEW <{cStreamReader}> 1
Funcs["/crypto/cipher/NewCBCDecrypter"] = crypto_cipher.NewCBCDecrypter
//# OLD <{cNewCBCDecrypter}> 0
//# NEW <{cNewCBCDecrypter}> 1
Funcs["/crypto/cipher/NewCFBEncrypter"] = crypto_cipher.NewCFBEncrypter
//# OLD <{cNewCFBEncrypter}> 0
//# NEW <{cNewCFBEncrypter}> 1
Types["/crypto/cipher/StreamWriter"] = new(*crypto_cipher.StreamWriter)
//# OLD <{cStreamWriter}> 0
//# NEW <{cStreamWriter}> 1
Types["/crypto/cipher/Stream"] = new(*crypto_cipher.Stream)
//# OLD <{cStream}> 0
//# NEW <{cStream}> 1
Funcs["/crypto/cipher/NewCFBDecrypter"] = crypto_cipher.NewCFBDecrypter
//# OLD <{cNewCFBDecrypter}> 0
//# NEW <{cNewCFBDecrypter}> 1
Types["/crypto/cipher/Block"] = new(*crypto_cipher.Block)
//# OLD <{cBlock}> 0
//# NEW <{cBlock}> 1
Funcs["/crypto/cipher/NewCBCEncrypter"] = crypto_cipher.NewCBCEncrypter
//# OLD <{cNewCBCEncrypter}> 0
//# NEW <{cNewCBCEncrypter}> 1


//    const crypto/des.BlockSize
//     func crypto/des.NewCipher
//     type crypto/des.KeySizeError
//     func crypto/des.NewTripleDESCipher

Funcs["/crypto/des/NewTripleDESCipher"] = crypto_des.NewTripleDESCipher
//# OLD <{dNewTripleDESCipher}> 0
//# NEW <{dNewTripleDESCipher}> 1
//? Consts["/crypto/des/BlockSize"] = crypto_des.BlockSize
//# OLD <{dBlockSize}> 0
//# NEW <{dBlockSize}> 1
Funcs["/crypto/des/NewCipher"] = crypto_des.NewCipher
//# OLD <{dNewCipher}> 0
//# NEW <{dNewCipher}> 1
Types["/crypto/des/KeySizeError"] = new(*crypto_des.KeySizeError)
//# OLD <{dKeySizeError}> 0
//# NEW <{dKeySizeError}> 1


//    const crypto/dsa.L2048N256
//     type crypto/dsa.ParameterSizes
//     type crypto/dsa.PublicKey
//     func crypto/dsa.GenerateKey
//     func crypto/dsa.Sign
//    const crypto/dsa.L1024N160
//    const crypto/dsa.L3072N256
//     type crypto/dsa.PrivateKey
//    const crypto/dsa.L2048N224
//     func crypto/dsa.GenerateParameters
//      var crypto/dsa.ErrInvalidPublicKey
//     type crypto/dsa.Parameters
//     func crypto/dsa.Verify

Funcs["/crypto/dsa/Sign"] = crypto_dsa.Sign
//# OLD <{dSign}> 0
//# NEW <{dSign}> 1
//? Consts["/crypto/dsa/L1024N160"] = crypto_dsa.L1024N160
//# OLD <{dL1024N160}> 0
//# NEW <{dL1024N160}> 1
//? Consts["/crypto/dsa/L3072N256"] = crypto_dsa.L3072N256
//# OLD <{dL3072N256}> 0
//# NEW <{dL3072N256}> 1
Types["/crypto/dsa/PrivateKey"] = new(*crypto_dsa.PrivateKey)
//# OLD <{dPrivateKey}> 0
//# NEW <{dPrivateKey}> 1
//? Consts["/crypto/dsa/L2048N224"] = crypto_dsa.L2048N224
//# OLD <{dL2048N224}> 0
//# NEW <{dL2048N224}> 1
Funcs["/crypto/dsa/GenerateParameters"] = crypto_dsa.GenerateParameters
//# OLD <{dGenerateParameters}> 0
//# NEW <{dGenerateParameters}> 1
Vars["/crypto/dsa/ErrInvalidPublicKey"] = &crypto_dsa.ErrInvalidPublicKey
//# OLD <{dErrInvalidPublicKey}> 0
//# NEW <{dErrInvalidPublicKey}> 1
Types["/crypto/dsa/Parameters"] = new(*crypto_dsa.Parameters)
//# OLD <{dParameters}> 0
//# NEW <{dParameters}> 1
Funcs["/crypto/dsa/Verify"] = crypto_dsa.Verify
//# OLD <{dVerify}> 0
//# NEW <{dVerify}> 1
//? Consts["/crypto/dsa/L2048N256"] = crypto_dsa.L2048N256
//# OLD <{dL2048N256}> 0
//# NEW <{dL2048N256}> 1
Types["/crypto/dsa/ParameterSizes"] = new(*crypto_dsa.ParameterSizes)
//# OLD <{dParameterSizes}> 0
//# NEW <{dParameterSizes}> 1
Types["/crypto/dsa/PublicKey"] = new(*crypto_dsa.PublicKey)
//# OLD <{dPublicKey}> 0
//# NEW <{dPublicKey}> 1
Funcs["/crypto/dsa/GenerateKey"] = crypto_dsa.GenerateKey
//# OLD <{dGenerateKey}> 0
//# NEW <{dGenerateKey}> 1


//     func crypto/ecdsa.Verify
//     func crypto/ecdsa.Sign
//     type crypto/ecdsa.PrivateKey
//     func crypto/ecdsa.GenerateKey
//     type crypto/ecdsa.PublicKey

Funcs["/crypto/ecdsa/Verify"] = crypto_ecdsa.Verify
//# OLD <{eVerify}> 0
//# NEW <{eVerify}> 1
Funcs["/crypto/ecdsa/Sign"] = crypto_ecdsa.Sign
//# OLD <{eSign}> 0
//# NEW <{eSign}> 1
Types["/crypto/ecdsa/PrivateKey"] = new(*crypto_ecdsa.PrivateKey)
//# OLD <{ePrivateKey}> 0
//# NEW <{ePrivateKey}> 1
Funcs["/crypto/ecdsa/GenerateKey"] = crypto_ecdsa.GenerateKey
//# OLD <{eGenerateKey}> 0
//# NEW <{eGenerateKey}> 1
Types["/crypto/ecdsa/PublicKey"] = new(*crypto_ecdsa.PublicKey)
//# OLD <{ePublicKey}> 0
//# NEW <{ePublicKey}> 1


//     func crypto/elliptic.Marshal
//     func crypto/elliptic.GenerateKey
//     type crypto/elliptic.CurveParams
//     func crypto/elliptic.P384
//     func crypto/elliptic.P256
//     func crypto/elliptic.Unmarshal
//     type crypto/elliptic.Curve
//     func crypto/elliptic.P521
//     func crypto/elliptic.P224

Funcs["/crypto/elliptic/Unmarshal"] = crypto_elliptic.Unmarshal
//# OLD <{eUnmarshal}> 0
//# NEW <{eUnmarshal}> 1
Types["/crypto/elliptic/Curve"] = new(*crypto_elliptic.Curve)
//# OLD <{eCurve}> 0
//# NEW <{eCurve}> 1
Funcs["/crypto/elliptic/P521"] = crypto_elliptic.P521
//# OLD <{eP521}> 0
//# NEW <{eP521}> 1
Funcs["/crypto/elliptic/P224"] = crypto_elliptic.P224
//# OLD <{eP224}> 0
//# NEW <{eP224}> 1
Funcs["/crypto/elliptic/Marshal"] = crypto_elliptic.Marshal
//# OLD <{eMarshal}> 0
//# NEW <{eMarshal}> 1
Funcs["/crypto/elliptic/GenerateKey"] = crypto_elliptic.GenerateKey
//# OLD <{eGenerateKey}> 1
//# NEW <{eGenerateKey}> 2
Types["/crypto/elliptic/CurveParams"] = new(*crypto_elliptic.CurveParams)
//# OLD <{eCurveParams}> 0
//# NEW <{eCurveParams}> 1
Funcs["/crypto/elliptic/P384"] = crypto_elliptic.P384
//# OLD <{eP384}> 0
//# NEW <{eP384}> 1
Funcs["/crypto/elliptic/P256"] = crypto_elliptic.P256
//# OLD <{eP256}> 0
//# NEW <{eP256}> 1


//     func crypto/hmac.New

Funcs["/crypto/hmac/New"] = crypto_hmac.New
//# OLD <{hNew}> 0
//# NEW <{hNew}> 1


//    const crypto/md5.Size
//     func crypto/md5.New
//    const crypto/md5.BlockSize

//? Consts["/crypto/md5/Size"] = crypto_md5.Size
//# OLD <{mSize}> 0
//# NEW <{mSize}> 1
Funcs["/crypto/md5/New"] = crypto_md5.New
//# OLD <{mNew}> 0
//# NEW <{mNew}> 1
//? Consts["/crypto/md5/BlockSize"] = crypto_md5.BlockSize
//# OLD <{mBlockSize}> 0
//# NEW <{mBlockSize}> 1


//     func crypto/rand.Prime
//      var crypto/rand.Reader
//     func crypto/rand.Int
//     func crypto/rand.Read

Funcs["/crypto/rand/Prime"] = crypto_rand.Prime
//# OLD <{rPrime}> 0
//# NEW <{rPrime}> 1
Vars["/crypto/rand/Reader"] = &crypto_rand.Reader
//# OLD <{rReader}> 0
//# NEW <{rReader}> 1
Funcs["/crypto/rand/Int"] = crypto_rand.Int
//# OLD <{rInt}> 0
//# NEW <{rInt}> 1
Funcs["/crypto/rand/Read"] = crypto_rand.Read
//# OLD <{rRead}> 0
//# NEW <{rRead}> 1


//     type crypto/rc4.Cipher
//     func crypto/rc4.NewCipher
//     type crypto/rc4.KeySizeError

Types["/crypto/rc4/Cipher"] = new(*crypto_rc4.Cipher)
//# OLD <{rCipher}> 0
//# NEW <{rCipher}> 1
Funcs["/crypto/rc4/NewCipher"] = crypto_rc4.NewCipher
//# OLD <{rNewCipher}> 0
//# NEW <{rNewCipher}> 1
Types["/crypto/rc4/KeySizeError"] = new(*crypto_rc4.KeySizeError)
//# OLD <{rKeySizeError}> 0
//# NEW <{rKeySizeError}> 1


//     func crypto/rsa.SignPKCS1v15
//     func crypto/rsa.DecryptPKCS1v15
//     func crypto/rsa.GenerateKey
//     func crypto/rsa.DecryptOAEP
//     type crypto/rsa.PrecomputedValues
//     func crypto/rsa.VerifyPKCS1v15
//     func crypto/rsa.GenerateMultiPrimeKey
//     func crypto/rsa.EncryptPKCS1v15
//      var crypto/rsa.ErrVerification
//      var crypto/rsa.ErrMessageTooLong
//     type crypto/rsa.PublicKey
//     type crypto/rsa.CRTValue
//     func crypto/rsa.DecryptPKCS1v15SessionKey
//     type crypto/rsa.PrivateKey
//      var crypto/rsa.ErrDecryption
//     func crypto/rsa.EncryptOAEP

Types["/crypto/rsa/PrecomputedValues"] = new(*crypto_rsa.PrecomputedValues)
//# OLD <{rPrecomputedValues}> 0
//# NEW <{rPrecomputedValues}> 1
Funcs["/crypto/rsa/VerifyPKCS1v15"] = crypto_rsa.VerifyPKCS1v15
//# OLD <{rVerifyPKCS1v15}> 0
//# NEW <{rVerifyPKCS1v15}> 1
Funcs["/crypto/rsa/GenerateMultiPrimeKey"] = crypto_rsa.GenerateMultiPrimeKey
//# OLD <{rGenerateMultiPrimeKey}> 0
//# NEW <{rGenerateMultiPrimeKey}> 1
Funcs["/crypto/rsa/EncryptPKCS1v15"] = crypto_rsa.EncryptPKCS1v15
//# OLD <{rEncryptPKCS1v15}> 0
//# NEW <{rEncryptPKCS1v15}> 1
Vars["/crypto/rsa/ErrVerification"] = &crypto_rsa.ErrVerification
//# OLD <{rErrVerification}> 0
//# NEW <{rErrVerification}> 1
Vars["/crypto/rsa/ErrMessageTooLong"] = &crypto_rsa.ErrMessageTooLong
//# OLD <{rErrMessageTooLong}> 0
//# NEW <{rErrMessageTooLong}> 1
Types["/crypto/rsa/PublicKey"] = new(*crypto_rsa.PublicKey)
//# OLD <{rPublicKey}> 0
//# NEW <{rPublicKey}> 1
Types["/crypto/rsa/CRTValue"] = new(*crypto_rsa.CRTValue)
//# OLD <{rCRTValue}> 0
//# NEW <{rCRTValue}> 1
Funcs["/crypto/rsa/DecryptPKCS1v15SessionKey"] = crypto_rsa.DecryptPKCS1v15SessionKey
//# OLD <{rDecryptPKCS1v15SessionKey}> 0
//# NEW <{rDecryptPKCS1v15SessionKey}> 1
Types["/crypto/rsa/PrivateKey"] = new(*crypto_rsa.PrivateKey)
//# OLD <{rPrivateKey}> 0
//# NEW <{rPrivateKey}> 1
Vars["/crypto/rsa/ErrDecryption"] = &crypto_rsa.ErrDecryption
//# OLD <{rErrDecryption}> 0
//# NEW <{rErrDecryption}> 1
Funcs["/crypto/rsa/EncryptOAEP"] = crypto_rsa.EncryptOAEP
//# OLD <{rEncryptOAEP}> 0
//# NEW <{rEncryptOAEP}> 1
Funcs["/crypto/rsa/SignPKCS1v15"] = crypto_rsa.SignPKCS1v15
//# OLD <{rSignPKCS1v15}> 0
//# NEW <{rSignPKCS1v15}> 1
Funcs["/crypto/rsa/DecryptPKCS1v15"] = crypto_rsa.DecryptPKCS1v15
//# OLD <{rDecryptPKCS1v15}> 0
//# NEW <{rDecryptPKCS1v15}> 1
Funcs["/crypto/rsa/GenerateKey"] = crypto_rsa.GenerateKey
//# OLD <{rGenerateKey}> 0
//# NEW <{rGenerateKey}> 1
Funcs["/crypto/rsa/DecryptOAEP"] = crypto_rsa.DecryptOAEP
//# OLD <{rDecryptOAEP}> 0
//# NEW <{rDecryptOAEP}> 1


//     func crypto/sha1.New
//    const crypto/sha1.Size
//    const crypto/sha1.BlockSize

//? Consts["/crypto/sha1/Size"] = crypto_sha1.Size
//# OLD <{sSize}> 0
//# NEW <{sSize}> 1
//? Consts["/crypto/sha1/BlockSize"] = crypto_sha1.BlockSize
//# OLD <{sBlockSize}> 0
//# NEW <{sBlockSize}> 1
Funcs["/crypto/sha1/New"] = crypto_sha1.New
//# OLD <{sNew}> 0
//# NEW <{sNew}> 1


//     func crypto/sha256.New224
//    const crypto/sha256.BlockSize
//    const crypto/sha256.Size
//     func crypto/sha256.New
//    const crypto/sha256.Size224

//? Consts["/crypto/sha256/BlockSize"] = crypto_sha256.BlockSize
//# OLD <{sBlockSize}> 1
//# NEW <{sBlockSize}> 2
//? Consts["/crypto/sha256/Size"] = crypto_sha256.Size
//# OLD <{sSize}> 1
//# NEW <{sSize}> 2
Funcs["/crypto/sha256/New"] = crypto_sha256.New
//# OLD <{sNew}> 1
//# NEW <{sNew}> 2
//? Consts["/crypto/sha256/Size224"] = crypto_sha256.Size224
//# OLD <{sSize224}> 0
//# NEW <{sSize224}> 1
Funcs["/crypto/sha256/New224"] = crypto_sha256.New224
//# OLD <{sNew224}> 0
//# NEW <{sNew224}> 1


//    const crypto/sha512.Size
//    const crypto/sha512.Size384
//     func crypto/sha512.New
//    const crypto/sha512.BlockSize
//     func crypto/sha512.New384

//? Consts["/crypto/sha512/BlockSize"] = crypto_sha512.BlockSize
//# OLD <{sBlockSize}> 2
//# NEW <{sBlockSize}> 3
Funcs["/crypto/sha512/New384"] = crypto_sha512.New384
//# OLD <{sNew384}> 0
//# NEW <{sNew384}> 1
//? Consts["/crypto/sha512/Size"] = crypto_sha512.Size
//# OLD <{sSize}> 2
//# NEW <{sSize}> 3
//? Consts["/crypto/sha512/Size384"] = crypto_sha512.Size384
//# OLD <{sSize384}> 0
//# NEW <{sSize384}> 1
Funcs["/crypto/sha512/New"] = crypto_sha512.New
//# OLD <{sNew}> 2
//# NEW <{sNew}> 3


//     func crypto/subtle.ConstantTimeSelect
//     func crypto/subtle.ConstantTimeCopy
//     func crypto/subtle.ConstantTimeByteEq
//     func crypto/subtle.ConstantTimeCompare
//     func crypto/subtle.ConstantTimeEq

Funcs["/crypto/subtle/ConstantTimeSelect"] = crypto_subtle.ConstantTimeSelect
//# OLD <{sConstantTimeSelect}> 0
//# NEW <{sConstantTimeSelect}> 1
Funcs["/crypto/subtle/ConstantTimeCopy"] = crypto_subtle.ConstantTimeCopy
//# OLD <{sConstantTimeCopy}> 0
//# NEW <{sConstantTimeCopy}> 1
Funcs["/crypto/subtle/ConstantTimeByteEq"] = crypto_subtle.ConstantTimeByteEq
//# OLD <{sConstantTimeByteEq}> 0
//# NEW <{sConstantTimeByteEq}> 1
Funcs["/crypto/subtle/ConstantTimeCompare"] = crypto_subtle.ConstantTimeCompare
//# OLD <{sConstantTimeCompare}> 0
//# NEW <{sConstantTimeCompare}> 1
Funcs["/crypto/subtle/ConstantTimeEq"] = crypto_subtle.ConstantTimeEq
//# OLD <{sConstantTimeEq}> 0
//# NEW <{sConstantTimeEq}> 1


//     func crypto/tls.LoadX509KeyPair
//    const crypto/tls.TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA
//     func crypto/tls.X509KeyPair
//     func crypto/tls.Client
//    const crypto/tls.RequestClientCert
//     func crypto/tls.Dial
//     type crypto/tls.ConnectionState
//    const crypto/tls.TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
//     type crypto/tls.Config
//    const crypto/tls.RequireAndVerifyClientCert
//    const crypto/tls.TLS_RSA_WITH_3DES_EDE_CBC_SHA
//     type crypto/tls.ClientAuthType
//    const crypto/tls.RequireAnyClientCert
//     func crypto/tls.NewListener
//    const crypto/tls.TLS_RSA_WITH_AES_128_CBC_SHA
//     type crypto/tls.Certificate
//    const crypto/tls.TLS_ECDHE_RSA_WITH_RC4_128_SHA
//     func crypto/tls.Listen
//     type crypto/tls.Conn
//     func crypto/tls.Server
//    const crypto/tls.TLS_RSA_WITH_RC4_128_SHA
//    const crypto/tls.NoClientCert
//    const crypto/tls.VerifyClientCertIfGiven

//? Consts["/crypto/tls/TLS_RSA_WITH_AES_128_CBC_SHA"] = crypto_tls.TLS_RSA_WITH_AES_128_CBC_SHA
//# OLD <{tTLS_RSA_WITH_AES_128_CBC_SHA}> 0
//# NEW <{tTLS_RSA_WITH_AES_128_CBC_SHA}> 1
Types["/crypto/tls/Certificate"] = new(*crypto_tls.Certificate)
//# OLD <{tCertificate}> 0
//# NEW <{tCertificate}> 1
//? Consts["/crypto/tls/TLS_ECDHE_RSA_WITH_RC4_128_SHA"] = crypto_tls.TLS_ECDHE_RSA_WITH_RC4_128_SHA
//# OLD <{tTLS_ECDHE_RSA_WITH_RC4_128_SHA}> 0
//# NEW <{tTLS_ECDHE_RSA_WITH_RC4_128_SHA}> 1
Funcs["/crypto/tls/Listen"] = crypto_tls.Listen
//# OLD <{tListen}> 0
//# NEW <{tListen}> 1
Types["/crypto/tls/Conn"] = new(*crypto_tls.Conn)
//# OLD <{tConn}> 0
//# NEW <{tConn}> 1
Funcs["/crypto/tls/Server"] = crypto_tls.Server
//# OLD <{tServer}> 0
//# NEW <{tServer}> 1
//? Consts["/crypto/tls/TLS_RSA_WITH_RC4_128_SHA"] = crypto_tls.TLS_RSA_WITH_RC4_128_SHA
//# OLD <{tTLS_RSA_WITH_RC4_128_SHA}> 0
//# NEW <{tTLS_RSA_WITH_RC4_128_SHA}> 1
//? Consts["/crypto/tls/NoClientCert"] = crypto_tls.NoClientCert
//# OLD <{tNoClientCert}> 0
//# NEW <{tNoClientCert}> 1
//? Consts["/crypto/tls/VerifyClientCertIfGiven"] = crypto_tls.VerifyClientCertIfGiven
//# OLD <{tVerifyClientCertIfGiven}> 0
//# NEW <{tVerifyClientCertIfGiven}> 1
Funcs["/crypto/tls/LoadX509KeyPair"] = crypto_tls.LoadX509KeyPair
//# OLD <{tLoadX509KeyPair}> 0
//# NEW <{tLoadX509KeyPair}> 1
//? Consts["/crypto/tls/TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA"] = crypto_tls.TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA
//# OLD <{tTLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA}> 0
//# NEW <{tTLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA}> 1
Funcs["/crypto/tls/X509KeyPair"] = crypto_tls.X509KeyPair
//# OLD <{tX509KeyPair}> 0
//# NEW <{tX509KeyPair}> 1
Funcs["/crypto/tls/Client"] = crypto_tls.Client
//# OLD <{tClient}> 0
//# NEW <{tClient}> 1
//? Consts["/crypto/tls/RequestClientCert"] = crypto_tls.RequestClientCert
//# OLD <{tRequestClientCert}> 0
//# NEW <{tRequestClientCert}> 1
Funcs["/crypto/tls/Dial"] = crypto_tls.Dial
//# OLD <{tDial}> 0
//# NEW <{tDial}> 1
Types["/crypto/tls/ConnectionState"] = new(*crypto_tls.ConnectionState)
//# OLD <{tConnectionState}> 0
//# NEW <{tConnectionState}> 1
//? Consts["/crypto/tls/TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA"] = crypto_tls.TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
//# OLD <{tTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA}> 0
//# NEW <{tTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA}> 1
Types["/crypto/tls/Config"] = new(*crypto_tls.Config)
//# OLD <{tConfig}> 0
//# NEW <{tConfig}> 1
//? Consts["/crypto/tls/RequireAndVerifyClientCert"] = crypto_tls.RequireAndVerifyClientCert
//# OLD <{tRequireAndVerifyClientCert}> 0
//# NEW <{tRequireAndVerifyClientCert}> 1
//? Consts["/crypto/tls/TLS_RSA_WITH_3DES_EDE_CBC_SHA"] = crypto_tls.TLS_RSA_WITH_3DES_EDE_CBC_SHA
//# OLD <{tTLS_RSA_WITH_3DES_EDE_CBC_SHA}> 0
//# NEW <{tTLS_RSA_WITH_3DES_EDE_CBC_SHA}> 1
Types["/crypto/tls/ClientAuthType"] = new(*crypto_tls.ClientAuthType)
//# OLD <{tClientAuthType}> 0
//# NEW <{tClientAuthType}> 1
//? Consts["/crypto/tls/RequireAnyClientCert"] = crypto_tls.RequireAnyClientCert
//# OLD <{tRequireAnyClientCert}> 0
//# NEW <{tRequireAnyClientCert}> 1
Funcs["/crypto/tls/NewListener"] = crypto_tls.NewListener
//# OLD <{tNewListener}> 0
//# NEW <{tNewListener}> 1


//    const crypto/x509.ExtKeyUsageTimeStamping
//    const crypto/x509.KeyUsageKeyEncipherment
//    const crypto/x509.KeyUsageKeyAgreement
//     func crypto/x509.ParsePKCS8PrivateKey
//    const crypto/x509.MD5WithRSA
//     type crypto/x509.ConstraintViolationError
//    const crypto/x509.KeyUsageDecipherOnly
//     func crypto/x509.ParseCertificate
//     func crypto/x509.ParseCRL
//     type crypto/x509.ExtKeyUsage
//    const crypto/x509.KeyUsageEncipherOnly
//     type crypto/x509.KeyUsage
//    const crypto/x509.ExtKeyUsageEmailProtection
//     func crypto/x509.ParsePKCS1PrivateKey
//    const crypto/x509.SHA512WithRSA
//    const crypto/x509.DSA
//    const crypto/x509.ExtKeyUsageAny
//     type crypto/x509.InvalidReason
//    const crypto/x509.SHA256WithRSA
//     type crypto/x509.HostnameError
//    const crypto/x509.ExtKeyUsageCodeSigning
//     type crypto/x509.CertPool
//     func crypto/x509.NewCertPool
//    const crypto/x509.KeyUsageDigitalSignature
//    const crypto/x509.ExtKeyUsageOCSPSigning
//    const crypto/x509.NotAuthorizedToSign
//    const crypto/x509.SHA1WithRSA
//    const crypto/x509.ExtKeyUsageServerAuth
//    const crypto/x509.ExtKeyUsageClientAuth
//    const crypto/x509.KeyUsageContentCommitment
//     type crypto/x509.VerifyOptions
//     func crypto/x509.ParseCertificates
//     type crypto/x509.Certificate
//    const crypto/x509.KeyUsageCRLSign
//     type crypto/x509.SignatureAlgorithm
//    const crypto/x509.KeyUsageDataEncipherment
//     type crypto/x509.UnknownAuthorityError
//      var crypto/x509.ErrUnsupportedAlgorithm
//    const crypto/x509.TooManyIntermediates
//    const crypto/x509.DSAWithSHA1
//     func crypto/x509.ParseDERCRL
//     type crypto/x509.PublicKeyAlgorithm
//     type crypto/x509.CertificateInvalidError
//    const crypto/x509.UnknownSignatureAlgorithm
//     func crypto/x509.CreateCertificate
//     func crypto/x509.ParsePKIXPublicKey
//    const crypto/x509.RSA
//    const crypto/x509.KeyUsageCertSign
//    const crypto/x509.SHA384WithRSA
//     type crypto/x509.UnhandledCriticalExtension
//     func crypto/x509.MarshalPKCS1PrivateKey
//    const crypto/x509.UnknownPublicKeyAlgorithm
//    const crypto/x509.DSAWithSHA256
//    const crypto/x509.Expired
//    const crypto/x509.CANotAuthorizedForThisName
//    const crypto/x509.MD2WithRSA
//     func crypto/x509.MarshalPKIXPublicKey

//? Consts["/crypto/x509/DSAWithSHA1"] = crypto_x509.DSAWithSHA1
//# OLD <{xDSAWithSHA1}> 0
//# NEW <{xDSAWithSHA1}> 1
Funcs["/crypto/x509/ParseDERCRL"] = crypto_x509.ParseDERCRL
//# OLD <{xParseDERCRL}> 0
//# NEW <{xParseDERCRL}> 1
Types["/crypto/x509/PublicKeyAlgorithm"] = new(*crypto_x509.PublicKeyAlgorithm)
//# OLD <{xPublicKeyAlgorithm}> 0
//# NEW <{xPublicKeyAlgorithm}> 1
Types["/crypto/x509/CertificateInvalidError"] = new(*crypto_x509.CertificateInvalidError)
//# OLD <{xCertificateInvalidError}> 0
//# NEW <{xCertificateInvalidError}> 1
//? Consts["/crypto/x509/UnknownSignatureAlgorithm"] = crypto_x509.UnknownSignatureAlgorithm
//# OLD <{xUnknownSignatureAlgorithm}> 0
//# NEW <{xUnknownSignatureAlgorithm}> 1
Funcs["/crypto/x509/CreateCertificate"] = crypto_x509.CreateCertificate
//# OLD <{xCreateCertificate}> 0
//# NEW <{xCreateCertificate}> 1
Funcs["/crypto/x509/ParsePKIXPublicKey"] = crypto_x509.ParsePKIXPublicKey
//# OLD <{xParsePKIXPublicKey}> 0
//# NEW <{xParsePKIXPublicKey}> 1
//? Consts["/crypto/x509/RSA"] = crypto_x509.RSA
//# OLD <{xRSA}> 0
//# NEW <{xRSA}> 1
//? Consts["/crypto/x509/KeyUsageCertSign"] = crypto_x509.KeyUsageCertSign
//# OLD <{xKeyUsageCertSign}> 0
//# NEW <{xKeyUsageCertSign}> 1
//? Consts["/crypto/x509/SHA384WithRSA"] = crypto_x509.SHA384WithRSA
//# OLD <{xSHA384WithRSA}> 0
//# NEW <{xSHA384WithRSA}> 1
Types["/crypto/x509/UnhandledCriticalExtension"] = new(*crypto_x509.UnhandledCriticalExtension)
//# OLD <{xUnhandledCriticalExtension}> 0
//# NEW <{xUnhandledCriticalExtension}> 1
Funcs["/crypto/x509/MarshalPKCS1PrivateKey"] = crypto_x509.MarshalPKCS1PrivateKey
//# OLD <{xMarshalPKCS1PrivateKey}> 0
//# NEW <{xMarshalPKCS1PrivateKey}> 1
//? Consts["/crypto/x509/UnknownPublicKeyAlgorithm"] = crypto_x509.UnknownPublicKeyAlgorithm
//# OLD <{xUnknownPublicKeyAlgorithm}> 0
//# NEW <{xUnknownPublicKeyAlgorithm}> 1
//? Consts["/crypto/x509/DSAWithSHA256"] = crypto_x509.DSAWithSHA256
//# OLD <{xDSAWithSHA256}> 0
//# NEW <{xDSAWithSHA256}> 1
//? Consts["/crypto/x509/Expired"] = crypto_x509.Expired
//# OLD <{xExpired}> 0
//# NEW <{xExpired}> 1
//? Consts["/crypto/x509/CANotAuthorizedForThisName"] = crypto_x509.CANotAuthorizedForThisName
//# OLD <{xCANotAuthorizedForThisName}> 0
//# NEW <{xCANotAuthorizedForThisName}> 1
//? Consts["/crypto/x509/MD2WithRSA"] = crypto_x509.MD2WithRSA
//# OLD <{xMD2WithRSA}> 0
//# NEW <{xMD2WithRSA}> 1
Funcs["/crypto/x509/MarshalPKIXPublicKey"] = crypto_x509.MarshalPKIXPublicKey
//# OLD <{xMarshalPKIXPublicKey}> 0
//# NEW <{xMarshalPKIXPublicKey}> 1
//? Consts["/crypto/x509/ExtKeyUsageTimeStamping"] = crypto_x509.ExtKeyUsageTimeStamping
//# OLD <{xExtKeyUsageTimeStamping}> 0
//# NEW <{xExtKeyUsageTimeStamping}> 1
//? Consts["/crypto/x509/KeyUsageKeyEncipherment"] = crypto_x509.KeyUsageKeyEncipherment
//# OLD <{xKeyUsageKeyEncipherment}> 0
//# NEW <{xKeyUsageKeyEncipherment}> 1
//? Consts["/crypto/x509/KeyUsageKeyAgreement"] = crypto_x509.KeyUsageKeyAgreement
//# OLD <{xKeyUsageKeyAgreement}> 0
//# NEW <{xKeyUsageKeyAgreement}> 1
Funcs["/crypto/x509/ParsePKCS8PrivateKey"] = crypto_x509.ParsePKCS8PrivateKey
//# OLD <{xParsePKCS8PrivateKey}> 0
//# NEW <{xParsePKCS8PrivateKey}> 1
//? Consts["/crypto/x509/MD5WithRSA"] = crypto_x509.MD5WithRSA
//# OLD <{xMD5WithRSA}> 0
//# NEW <{xMD5WithRSA}> 1
Types["/crypto/x509/ConstraintViolationError"] = new(*crypto_x509.ConstraintViolationError)
//# OLD <{xConstraintViolationError}> 0
//# NEW <{xConstraintViolationError}> 1
//? Consts["/crypto/x509/KeyUsageDecipherOnly"] = crypto_x509.KeyUsageDecipherOnly
//# OLD <{xKeyUsageDecipherOnly}> 0
//# NEW <{xKeyUsageDecipherOnly}> 1
Funcs["/crypto/x509/ParseCertificate"] = crypto_x509.ParseCertificate
//# OLD <{xParseCertificate}> 0
//# NEW <{xParseCertificate}> 1
Funcs["/crypto/x509/ParseCRL"] = crypto_x509.ParseCRL
//# OLD <{xParseCRL}> 0
//# NEW <{xParseCRL}> 1
Types["/crypto/x509/ExtKeyUsage"] = new(*crypto_x509.ExtKeyUsage)
//# OLD <{xExtKeyUsage}> 0
//# NEW <{xExtKeyUsage}> 1
//? Consts["/crypto/x509/KeyUsageEncipherOnly"] = crypto_x509.KeyUsageEncipherOnly
//# OLD <{xKeyUsageEncipherOnly}> 0
//# NEW <{xKeyUsageEncipherOnly}> 1
Types["/crypto/x509/KeyUsage"] = new(*crypto_x509.KeyUsage)
//# OLD <{xKeyUsage}> 0
//# NEW <{xKeyUsage}> 1
//? Consts["/crypto/x509/ExtKeyUsageEmailProtection"] = crypto_x509.ExtKeyUsageEmailProtection
//# OLD <{xExtKeyUsageEmailProtection}> 0
//# NEW <{xExtKeyUsageEmailProtection}> 1
Funcs["/crypto/x509/ParsePKCS1PrivateKey"] = crypto_x509.ParsePKCS1PrivateKey
//# OLD <{xParsePKCS1PrivateKey}> 0
//# NEW <{xParsePKCS1PrivateKey}> 1
//? Consts["/crypto/x509/SHA512WithRSA"] = crypto_x509.SHA512WithRSA
//# OLD <{xSHA512WithRSA}> 0
//# NEW <{xSHA512WithRSA}> 1
//? Consts["/crypto/x509/DSA"] = crypto_x509.DSA
//# OLD <{xDSA}> 0
//# NEW <{xDSA}> 1
//? Consts["/crypto/x509/ExtKeyUsageAny"] = crypto_x509.ExtKeyUsageAny
//# OLD <{xExtKeyUsageAny}> 0
//# NEW <{xExtKeyUsageAny}> 1
Types["/crypto/x509/InvalidReason"] = new(*crypto_x509.InvalidReason)
//# OLD <{xInvalidReason}> 0
//# NEW <{xInvalidReason}> 1
//? Consts["/crypto/x509/SHA256WithRSA"] = crypto_x509.SHA256WithRSA
//# OLD <{xSHA256WithRSA}> 0
//# NEW <{xSHA256WithRSA}> 1
Types["/crypto/x509/HostnameError"] = new(*crypto_x509.HostnameError)
//# OLD <{xHostnameError}> 0
//# NEW <{xHostnameError}> 1
//? Consts["/crypto/x509/ExtKeyUsageCodeSigning"] = crypto_x509.ExtKeyUsageCodeSigning
//# OLD <{xExtKeyUsageCodeSigning}> 0
//# NEW <{xExtKeyUsageCodeSigning}> 1
Types["/crypto/x509/CertPool"] = new(*crypto_x509.CertPool)
//# OLD <{xCertPool}> 0
//# NEW <{xCertPool}> 1
Funcs["/crypto/x509/NewCertPool"] = crypto_x509.NewCertPool
//# OLD <{xNewCertPool}> 0
//# NEW <{xNewCertPool}> 1
//? Consts["/crypto/x509/KeyUsageDigitalSignature"] = crypto_x509.KeyUsageDigitalSignature
//# OLD <{xKeyUsageDigitalSignature}> 0
//# NEW <{xKeyUsageDigitalSignature}> 1
//? Consts["/crypto/x509/ExtKeyUsageOCSPSigning"] = crypto_x509.ExtKeyUsageOCSPSigning
//# OLD <{xExtKeyUsageOCSPSigning}> 0
//# NEW <{xExtKeyUsageOCSPSigning}> 1
//? Consts["/crypto/x509/NotAuthorizedToSign"] = crypto_x509.NotAuthorizedToSign
//# OLD <{xNotAuthorizedToSign}> 0
//# NEW <{xNotAuthorizedToSign}> 1
//? Consts["/crypto/x509/SHA1WithRSA"] = crypto_x509.SHA1WithRSA
//# OLD <{xSHA1WithRSA}> 0
//# NEW <{xSHA1WithRSA}> 1
//? Consts["/crypto/x509/ExtKeyUsageServerAuth"] = crypto_x509.ExtKeyUsageServerAuth
//# OLD <{xExtKeyUsageServerAuth}> 0
//# NEW <{xExtKeyUsageServerAuth}> 1
//? Consts["/crypto/x509/ExtKeyUsageClientAuth"] = crypto_x509.ExtKeyUsageClientAuth
//# OLD <{xExtKeyUsageClientAuth}> 0
//# NEW <{xExtKeyUsageClientAuth}> 1
//? Consts["/crypto/x509/KeyUsageContentCommitment"] = crypto_x509.KeyUsageContentCommitment
//# OLD <{xKeyUsageContentCommitment}> 0
//# NEW <{xKeyUsageContentCommitment}> 1
Types["/crypto/x509/VerifyOptions"] = new(*crypto_x509.VerifyOptions)
//# OLD <{xVerifyOptions}> 0
//# NEW <{xVerifyOptions}> 1
Funcs["/crypto/x509/ParseCertificates"] = crypto_x509.ParseCertificates
//# OLD <{xParseCertificates}> 0
//# NEW <{xParseCertificates}> 1
Types["/crypto/x509/Certificate"] = new(*crypto_x509.Certificate)
//# OLD <{xCertificate}> 0
//# NEW <{xCertificate}> 1
//? Consts["/crypto/x509/KeyUsageCRLSign"] = crypto_x509.KeyUsageCRLSign
//# OLD <{xKeyUsageCRLSign}> 0
//# NEW <{xKeyUsageCRLSign}> 1
Types["/crypto/x509/SignatureAlgorithm"] = new(*crypto_x509.SignatureAlgorithm)
//# OLD <{xSignatureAlgorithm}> 0
//# NEW <{xSignatureAlgorithm}> 1
//? Consts["/crypto/x509/KeyUsageDataEncipherment"] = crypto_x509.KeyUsageDataEncipherment
//# OLD <{xKeyUsageDataEncipherment}> 0
//# NEW <{xKeyUsageDataEncipherment}> 1
Types["/crypto/x509/UnknownAuthorityError"] = new(*crypto_x509.UnknownAuthorityError)
//# OLD <{xUnknownAuthorityError}> 0
//# NEW <{xUnknownAuthorityError}> 1
Vars["/crypto/x509/ErrUnsupportedAlgorithm"] = &crypto_x509.ErrUnsupportedAlgorithm
//# OLD <{xErrUnsupportedAlgorithm}> 0
//# NEW <{xErrUnsupportedAlgorithm}> 1
//? Consts["/crypto/x509/TooManyIntermediates"] = crypto_x509.TooManyIntermediates
//# OLD <{xTooManyIntermediates}> 0
//# NEW <{xTooManyIntermediates}> 1


//     type crypto/x509/pkix.AttributeTypeAndValue
//     type crypto/x509/pkix.CertificateList
//     type crypto/x509/pkix.RDNSequence
//     type crypto/x509/pkix.RevokedCertificate
//     type crypto/x509/pkix.RelativeDistinguishedNameSET
//     type crypto/x509/pkix.Name
//     type crypto/x509/pkix.AlgorithmIdentifier
//     type crypto/x509/pkix.Extension
//     type crypto/x509/pkix.TBSCertificateList

Types["/crypto/x509/pkix/Extension"] = new(*crypto_x509_pkix.Extension)
//# OLD <{pExtension}> 0
//# NEW <{pExtension}> 1
Types["/crypto/x509/pkix/TBSCertificateList"] = new(*crypto_x509_pkix.TBSCertificateList)
//# OLD <{pTBSCertificateList}> 0
//# NEW <{pTBSCertificateList}> 1
Types["/crypto/x509/pkix/AttributeTypeAndValue"] = new(*crypto_x509_pkix.AttributeTypeAndValue)
//# OLD <{pAttributeTypeAndValue}> 0
//# NEW <{pAttributeTypeAndValue}> 1
Types["/crypto/x509/pkix/CertificateList"] = new(*crypto_x509_pkix.CertificateList)
//# OLD <{pCertificateList}> 0
//# NEW <{pCertificateList}> 1
Types["/crypto/x509/pkix/RDNSequence"] = new(*crypto_x509_pkix.RDNSequence)
//# OLD <{pRDNSequence}> 0
//# NEW <{pRDNSequence}> 1
Types["/crypto/x509/pkix/RevokedCertificate"] = new(*crypto_x509_pkix.RevokedCertificate)
//# OLD <{pRevokedCertificate}> 0
//# NEW <{pRevokedCertificate}> 1
Types["/crypto/x509/pkix/RelativeDistinguishedNameSET"] = new(*crypto_x509_pkix.RelativeDistinguishedNameSET)
//# OLD <{pRelativeDistinguishedNameSET}> 0
//# NEW <{pRelativeDistinguishedNameSET}> 1
Types["/crypto/x509/pkix/Name"] = new(*crypto_x509_pkix.Name)
//# OLD <{pName}> 0
//# NEW <{pName}> 1
Types["/crypto/x509/pkix/AlgorithmIdentifier"] = new(*crypto_x509_pkix.AlgorithmIdentifier)
//# OLD <{pAlgorithmIdentifier}> 0
//# NEW <{pAlgorithmIdentifier}> 1


//      var database/sql.ErrNoRows
//     type database/sql.DB
//     type database/sql.RawBytes
//     type database/sql.Tx
//     type database/sql.NullBool
//     type database/sql.NullFloat64
//     type database/sql.Stmt
//     type database/sql.Rows
//     func database/sql.Open
//     type database/sql.Result
//     func database/sql.Register
//     type database/sql.NullInt64
//     type database/sql.Row
//     type database/sql.NullString
//      var database/sql.ErrTxDone
//     type database/sql.Scanner

Vars["/database/sql/ErrNoRows"] = &database_sql.ErrNoRows
//# OLD <{sErrNoRows}> 0
//# NEW <{sErrNoRows}> 1
Types["/database/sql/DB"] = new(*database_sql.DB)
//# OLD <{sDB}> 0
//# NEW <{sDB}> 1
Types["/database/sql/RawBytes"] = new(*database_sql.RawBytes)
//# OLD <{sRawBytes}> 0
//# NEW <{sRawBytes}> 1
Types["/database/sql/Tx"] = new(*database_sql.Tx)
//# OLD <{sTx}> 0
//# NEW <{sTx}> 1
Types["/database/sql/NullBool"] = new(*database_sql.NullBool)
//# OLD <{sNullBool}> 0
//# NEW <{sNullBool}> 1
Types["/database/sql/NullFloat64"] = new(*database_sql.NullFloat64)
//# OLD <{sNullFloat64}> 0
//# NEW <{sNullFloat64}> 1
Types["/database/sql/Stmt"] = new(*database_sql.Stmt)
//# OLD <{sStmt}> 0
//# NEW <{sStmt}> 1
Types["/database/sql/Rows"] = new(*database_sql.Rows)
//# OLD <{sRows}> 0
//# NEW <{sRows}> 1
Funcs["/database/sql/Open"] = database_sql.Open
//# OLD <{sOpen}> 0
//# NEW <{sOpen}> 1
Types["/database/sql/Result"] = new(*database_sql.Result)
//# OLD <{sResult}> 0
//# NEW <{sResult}> 1
Funcs["/database/sql/Register"] = database_sql.Register
//# OLD <{sRegister}> 0
//# NEW <{sRegister}> 1
Types["/database/sql/NullInt64"] = new(*database_sql.NullInt64)
//# OLD <{sNullInt64}> 0
//# NEW <{sNullInt64}> 1
Types["/database/sql/Row"] = new(*database_sql.Row)
//# OLD <{sRow}> 0
//# NEW <{sRow}> 1
Types["/database/sql/NullString"] = new(*database_sql.NullString)
//# OLD <{sNullString}> 0
//# NEW <{sNullString}> 1
Vars["/database/sql/ErrTxDone"] = &database_sql.ErrTxDone
//# OLD <{sErrTxDone}> 0
//# NEW <{sErrTxDone}> 1
Types["/database/sql/Scanner"] = new(*database_sql.Scanner)
//# OLD <{sScanner}> 0
//# NEW <{sScanner}> 1


//      var database/sql/driver.String
//     type database/sql/driver.NotNull
//     type database/sql/driver.Rows
//     type database/sql/driver.Execer
//      var database/sql/driver.ResultNoRows
//     type database/sql/driver.ColumnConverter
//     type database/sql/driver.Null
//     type database/sql/driver.Value
//     type database/sql/driver.Valuer
//     type database/sql/driver.ValueConverter
//      var database/sql/driver.ErrBadConn
//     type database/sql/driver.Conn
//     func database/sql/driver.IsScanValue
//      var database/sql/driver.Bool
//      var database/sql/driver.DefaultParameterConverter
//     type database/sql/driver.Stmt
//     type database/sql/driver.Driver
//     type database/sql/driver.RowsAffected
//     func database/sql/driver.IsValue
//     type database/sql/driver.Result
//      var database/sql/driver.ErrSkip
//     type database/sql/driver.Tx
//      var database/sql/driver.Int32

Types["/database/sql/driver/Driver"] = new(*database_sql_driver.Driver)
//# OLD <{dDriver}> 0
//# NEW <{dDriver}> 1
Types["/database/sql/driver/RowsAffected"] = new(*database_sql_driver.RowsAffected)
//# OLD <{dRowsAffected}> 0
//# NEW <{dRowsAffected}> 1
Funcs["/database/sql/driver/IsValue"] = database_sql_driver.IsValue
//# OLD <{dIsValue}> 0
//# NEW <{dIsValue}> 1
Types["/database/sql/driver/Result"] = new(*database_sql_driver.Result)
//# OLD <{dResult}> 0
//# NEW <{dResult}> 1
Vars["/database/sql/driver/ErrSkip"] = &database_sql_driver.ErrSkip
//# OLD <{dErrSkip}> 0
//# NEW <{dErrSkip}> 1
Types["/database/sql/driver/Tx"] = new(*database_sql_driver.Tx)
//# OLD <{dTx}> 0
//# NEW <{dTx}> 1
Vars["/database/sql/driver/Int32"] = &database_sql_driver.Int32
//# OLD <{dInt32}> 0
//# NEW <{dInt32}> 1
Vars["/database/sql/driver/String"] = &database_sql_driver.String
//# OLD <{dString}> 0
//# NEW <{dString}> 1
Types["/database/sql/driver/NotNull"] = new(*database_sql_driver.NotNull)
//# OLD <{dNotNull}> 0
//# NEW <{dNotNull}> 1
Types["/database/sql/driver/Rows"] = new(*database_sql_driver.Rows)
//# OLD <{dRows}> 0
//# NEW <{dRows}> 1
Types["/database/sql/driver/Execer"] = new(*database_sql_driver.Execer)
//# OLD <{dExecer}> 0
//# NEW <{dExecer}> 1
Vars["/database/sql/driver/ResultNoRows"] = &database_sql_driver.ResultNoRows
//# OLD <{dResultNoRows}> 0
//# NEW <{dResultNoRows}> 1
Types["/database/sql/driver/ColumnConverter"] = new(*database_sql_driver.ColumnConverter)
//# OLD <{dColumnConverter}> 0
//# NEW <{dColumnConverter}> 1
Types["/database/sql/driver/Null"] = new(*database_sql_driver.Null)
//# OLD <{dNull}> 0
//# NEW <{dNull}> 1
Types["/database/sql/driver/Value"] = new(*database_sql_driver.Value)
//# OLD <{dValue}> 0
//# NEW <{dValue}> 1
Types["/database/sql/driver/Valuer"] = new(*database_sql_driver.Valuer)
//# OLD <{dValuer}> 0
//# NEW <{dValuer}> 1
Types["/database/sql/driver/ValueConverter"] = new(*database_sql_driver.ValueConverter)
//# OLD <{dValueConverter}> 0
//# NEW <{dValueConverter}> 1
Vars["/database/sql/driver/ErrBadConn"] = &database_sql_driver.ErrBadConn
//# OLD <{dErrBadConn}> 0
//# NEW <{dErrBadConn}> 1
Types["/database/sql/driver/Conn"] = new(*database_sql_driver.Conn)
//# OLD <{dConn}> 0
//# NEW <{dConn}> 1
Funcs["/database/sql/driver/IsScanValue"] = database_sql_driver.IsScanValue
//# OLD <{dIsScanValue}> 0
//# NEW <{dIsScanValue}> 1
Vars["/database/sql/driver/Bool"] = &database_sql_driver.Bool
//# OLD <{dBool}> 0
//# NEW <{dBool}> 1
Vars["/database/sql/driver/DefaultParameterConverter"] = &database_sql_driver.DefaultParameterConverter
//# OLD <{dDefaultParameterConverter}> 0
//# NEW <{dDefaultParameterConverter}> 1
Types["/database/sql/driver/Stmt"] = new(*database_sql_driver.Stmt)
//# OLD <{dStmt}> 0
//# NEW <{dStmt}> 1


//    const debug/dwarf.AttrDataMemberLoc
//    const debug/dwarf.TagTypedef
//    const debug/dwarf.AttrCalling
//     type debug/dwarf.Attr
//    const debug/dwarf.TagWithStmt
//    const debug/dwarf.TagSubroutineType
//    const debug/dwarf.TagLexDwarfBlock
//     type debug/dwarf.CharType
//    const debug/dwarf.AttrCommonRef
//     type debug/dwarf.TypedefType
//     type debug/dwarf.Reader
//    const debug/dwarf.AttrLanguage
//    const debug/dwarf.AttrVisibility
//    const debug/dwarf.TagImportedModule
//    const debug/dwarf.AttrLocation
//     type debug/dwarf.StructType
//    const debug/dwarf.TagConstType
//    const debug/dwarf.AttrIsOptional
//    const debug/dwarf.AttrDeclColumn
//    const debug/dwarf.TagCommonInclusion
//    const debug/dwarf.AttrStrideSize
//    const debug/dwarf.AttrNamelistItem
//     type debug/dwarf.Offset
//    const debug/dwarf.AttrEncoding
//    const debug/dwarf.TagSubprogram
//    const debug/dwarf.TagInlinedSubroutine
//    const debug/dwarf.AttrByteSize
//    const debug/dwarf.AttrDefaultValue
//    const debug/dwarf.AttrEntrypc
//    const debug/dwarf.TagTemplateTypeParameter
//     type debug/dwarf.DecodeError
//    const debug/dwarf.TagInterfaceType
//    const debug/dwarf.TagClassType
//    const debug/dwarf.TagPackedType
//    const debug/dwarf.TagEnumerationType
//    const debug/dwarf.AttrConstValue
//    const debug/dwarf.AttrReturnAddr
//    const debug/dwarf.AttrStaticLink
//    const debug/dwarf.AttrStmtList
//     type debug/dwarf.FuncType
//    const debug/dwarf.TagStructType
//    const debug/dwarf.AttrLowpc
//    const debug/dwarf.AttrPriority
//    const debug/dwarf.TagUnspecifiedParameters
//    const debug/dwarf.TagRestrictType
//    const debug/dwarf.TagPointerType
//    const debug/dwarf.TagTryDwarfBlock
//    const debug/dwarf.AttrSpecification
//    const debug/dwarf.TagUnionType
//    const debug/dwarf.AttrDescription
//    const debug/dwarf.TagTemplateValueParameter
//    const debug/dwarf.TagVolatileType
//    const debug/dwarf.AttrVirtuality
//    const debug/dwarf.AttrImport
//    const debug/dwarf.AttrSegment
//    const debug/dwarf.AttrHighpc
//    const debug/dwarf.AttrCount
//     type debug/dwarf.BasicType
//    const debug/dwarf.AttrStartScope
//    const debug/dwarf.AttrAccessibility
//     type debug/dwarf.Tag
//    const debug/dwarf.TagEntryPoint
//    const debug/dwarf.AttrContainingType
//    const debug/dwarf.TagEnumerator
//    const debug/dwarf.AttrDiscrValue
//    const debug/dwarf.AttrAllocated
//    const debug/dwarf.AttrAddrClass
//    const debug/dwarf.TagFriend
//    const debug/dwarf.AttrAbstractOrigin
//    const debug/dwarf.AttrRanges
//    const debug/dwarf.TagCatchDwarfBlock
//    const debug/dwarf.TagPtrToMemberType
//    const debug/dwarf.TagNamelist
//    const debug/dwarf.AttrVtableElemLoc
//    const debug/dwarf.TagVariant
//    const debug/dwarf.TagFileType
//    const debug/dwarf.AttrBitSize
//    const debug/dwarf.TagSetType
//    const debug/dwarf.AttrDataLocation
//    const debug/dwarf.AttrDiscrList
//    const debug/dwarf.AttrDiscr
//    const debug/dwarf.TagImportedDeclaration
//    const debug/dwarf.TagNamelistItem
//     type debug/dwarf.ComplexType
//    const debug/dwarf.AttrUpperBound
//     type debug/dwarf.Field
//     type debug/dwarf.IntType
//    const debug/dwarf.TagConstant
//    const debug/dwarf.TagVariantPart
//    const debug/dwarf.AttrDeclLine
//    const debug/dwarf.AttrMacroInfo
//    const debug/dwarf.AttrType
//    const debug/dwarf.TagImportedUnit
//    const debug/dwarf.AttrUseLocation
//    const debug/dwarf.AttrCallColumn
//    const debug/dwarf.AttrSibling
//     type debug/dwarf.BoolType
//    const debug/dwarf.AttrVarParam
//    const debug/dwarf.AttrUseUTF8
//    const debug/dwarf.TagPartialUnit
//    const debug/dwarf.AttrExternal
//    const debug/dwarf.TagSubrangeType
//    const debug/dwarf.TagReferenceType
//     type debug/dwarf.AddrType
//     type debug/dwarf.UcharType
//    const debug/dwarf.TagAccessDeclaration
//     type debug/dwarf.ArrayType
//    const debug/dwarf.AttrStringLength
//    const debug/dwarf.AttrCompDir
//    const debug/dwarf.TagMember
//     type debug/dwarf.UintType
//    const debug/dwarf.TagMutableType
//    const debug/dwarf.TagStringType
//    const debug/dwarf.TagCompileUnit
//    const debug/dwarf.TagCommonDwarfBlock
//    const debug/dwarf.AttrPrototyped
//    const debug/dwarf.AttrInline
//     type debug/dwarf.VoidType
//    const debug/dwarf.AttrProducer
//     func debug/dwarf.New
//    const debug/dwarf.TagArrayType
//    const debug/dwarf.AttrBaseTypes
//    const debug/dwarf.TagDwarfProcedure
//    const debug/dwarf.AttrIdentifierCase
//    const debug/dwarf.AttrDeclFile
//    const debug/dwarf.AttrDeclaration
//    const debug/dwarf.AttrFrameBase
//    const debug/dwarf.AttrTrampoline
//    const debug/dwarf.AttrExtension
//    const debug/dwarf.TagModule
//    const debug/dwarf.AttrArtificial
//    const debug/dwarf.TagUnspecifiedType
//    const debug/dwarf.AttrAssociated
//     type debug/dwarf.StructField
//     type debug/dwarf.EnumType
//    const debug/dwarf.AttrName
//     type debug/dwarf.PtrType
//     type debug/dwarf.Type
//     type debug/dwarf.FloatType
//    const debug/dwarf.TagBaseType
//    const debug/dwarf.TagFormalParameter
//    const debug/dwarf.AttrFriend
//    const debug/dwarf.AttrCallLine
//     type debug/dwarf.Entry
//    const debug/dwarf.AttrOrdering
//    const debug/dwarf.AttrCallFile
//     type debug/dwarf.EnumValue
//    const debug/dwarf.AttrStride
//    const debug/dwarf.TagVariable
//     type debug/dwarf.Data
//    const debug/dwarf.TagNamespace
//     type debug/dwarf.CommonType
//    const debug/dwarf.TagInheritance
//     type debug/dwarf.QualType
//    const debug/dwarf.AttrBitOffset
//    const debug/dwarf.TagLabel
//    const debug/dwarf.AttrLowerBound
//     type debug/dwarf.DotDotDotType
//    const debug/dwarf.TagThrownType

//? Consts["/debug/dwarf/TagInterfaceType"] = debug_dwarf.TagInterfaceType
//# OLD <{dTagInterfaceType}> 0
//# NEW <{dTagInterfaceType}> 1
//? Consts["/debug/dwarf/TagClassType"] = debug_dwarf.TagClassType
//# OLD <{dTagClassType}> 0
//# NEW <{dTagClassType}> 1
//? Consts["/debug/dwarf/TagPackedType"] = debug_dwarf.TagPackedType
//# OLD <{dTagPackedType}> 0
//# NEW <{dTagPackedType}> 1
//? Consts["/debug/dwarf/TagEnumerationType"] = debug_dwarf.TagEnumerationType
//# OLD <{dTagEnumerationType}> 0
//# NEW <{dTagEnumerationType}> 1
//? Consts["/debug/dwarf/AttrConstValue"] = debug_dwarf.AttrConstValue
//# OLD <{dAttrConstValue}> 0
//# NEW <{dAttrConstValue}> 1
//? Consts["/debug/dwarf/AttrReturnAddr"] = debug_dwarf.AttrReturnAddr
//# OLD <{dAttrReturnAddr}> 0
//# NEW <{dAttrReturnAddr}> 1
//? Consts["/debug/dwarf/AttrStaticLink"] = debug_dwarf.AttrStaticLink
//# OLD <{dAttrStaticLink}> 0
//# NEW <{dAttrStaticLink}> 1
//? Consts["/debug/dwarf/AttrStmtList"] = debug_dwarf.AttrStmtList
//# OLD <{dAttrStmtList}> 0
//# NEW <{dAttrStmtList}> 1
Types["/debug/dwarf/FuncType"] = new(*debug_dwarf.FuncType)
//# OLD <{dFuncType}> 0
//# NEW <{dFuncType}> 1
//? Consts["/debug/dwarf/TagStructType"] = debug_dwarf.TagStructType
//# OLD <{dTagStructType}> 0
//# NEW <{dTagStructType}> 1
//? Consts["/debug/dwarf/AttrLowpc"] = debug_dwarf.AttrLowpc
//# OLD <{dAttrLowpc}> 0
//# NEW <{dAttrLowpc}> 1
//? Consts["/debug/dwarf/AttrPriority"] = debug_dwarf.AttrPriority
//# OLD <{dAttrPriority}> 0
//# NEW <{dAttrPriority}> 1
//? Consts["/debug/dwarf/TagUnspecifiedParameters"] = debug_dwarf.TagUnspecifiedParameters
//# OLD <{dTagUnspecifiedParameters}> 0
//# NEW <{dTagUnspecifiedParameters}> 1
//? Consts["/debug/dwarf/TagRestrictType"] = debug_dwarf.TagRestrictType
//# OLD <{dTagRestrictType}> 0
//# NEW <{dTagRestrictType}> 1
//? Consts["/debug/dwarf/TagPointerType"] = debug_dwarf.TagPointerType
//# OLD <{dTagPointerType}> 0
//# NEW <{dTagPointerType}> 1
//? Consts["/debug/dwarf/TagTryDwarfBlock"] = debug_dwarf.TagTryDwarfBlock
//# OLD <{dTagTryDwarfBlock}> 0
//# NEW <{dTagTryDwarfBlock}> 1
//? Consts["/debug/dwarf/AttrSpecification"] = debug_dwarf.AttrSpecification
//# OLD <{dAttrSpecification}> 0
//# NEW <{dAttrSpecification}> 1
//? Consts["/debug/dwarf/TagUnionType"] = debug_dwarf.TagUnionType
//# OLD <{dTagUnionType}> 0
//# NEW <{dTagUnionType}> 1
//? Consts["/debug/dwarf/AttrDescription"] = debug_dwarf.AttrDescription
//# OLD <{dAttrDescription}> 0
//# NEW <{dAttrDescription}> 1
//? Consts["/debug/dwarf/TagTemplateValueParameter"] = debug_dwarf.TagTemplateValueParameter
//# OLD <{dTagTemplateValueParameter}> 0
//# NEW <{dTagTemplateValueParameter}> 1
//? Consts["/debug/dwarf/TagVolatileType"] = debug_dwarf.TagVolatileType
//# OLD <{dTagVolatileType}> 0
//# NEW <{dTagVolatileType}> 1
//? Consts["/debug/dwarf/AttrVirtuality"] = debug_dwarf.AttrVirtuality
//# OLD <{dAttrVirtuality}> 0
//# NEW <{dAttrVirtuality}> 1
//? Consts["/debug/dwarf/AttrImport"] = debug_dwarf.AttrImport
//# OLD <{dAttrImport}> 0
//# NEW <{dAttrImport}> 1
//? Consts["/debug/dwarf/AttrSegment"] = debug_dwarf.AttrSegment
//# OLD <{dAttrSegment}> 0
//# NEW <{dAttrSegment}> 1
//? Consts["/debug/dwarf/AttrHighpc"] = debug_dwarf.AttrHighpc
//# OLD <{dAttrHighpc}> 0
//# NEW <{dAttrHighpc}> 1
//? Consts["/debug/dwarf/AttrCount"] = debug_dwarf.AttrCount
//# OLD <{dAttrCount}> 0
//# NEW <{dAttrCount}> 1
Types["/debug/dwarf/BasicType"] = new(*debug_dwarf.BasicType)
//# OLD <{dBasicType}> 0
//# NEW <{dBasicType}> 1
//? Consts["/debug/dwarf/AttrStartScope"] = debug_dwarf.AttrStartScope
//# OLD <{dAttrStartScope}> 0
//# NEW <{dAttrStartScope}> 1
//? Consts["/debug/dwarf/AttrAccessibility"] = debug_dwarf.AttrAccessibility
//# OLD <{dAttrAccessibility}> 0
//# NEW <{dAttrAccessibility}> 1
Types["/debug/dwarf/Tag"] = new(*debug_dwarf.Tag)
//# OLD <{dTag}> 0
//# NEW <{dTag}> 1
//? Consts["/debug/dwarf/TagEntryPoint"] = debug_dwarf.TagEntryPoint
//# OLD <{dTagEntryPoint}> 0
//# NEW <{dTagEntryPoint}> 1
//? Consts["/debug/dwarf/AttrContainingType"] = debug_dwarf.AttrContainingType
//# OLD <{dAttrContainingType}> 0
//# NEW <{dAttrContainingType}> 1
//? Consts["/debug/dwarf/TagEnumerator"] = debug_dwarf.TagEnumerator
//# OLD <{dTagEnumerator}> 0
//# NEW <{dTagEnumerator}> 1
//? Consts["/debug/dwarf/AttrDiscrValue"] = debug_dwarf.AttrDiscrValue
//# OLD <{dAttrDiscrValue}> 0
//# NEW <{dAttrDiscrValue}> 1
//? Consts["/debug/dwarf/AttrAllocated"] = debug_dwarf.AttrAllocated
//# OLD <{dAttrAllocated}> 0
//# NEW <{dAttrAllocated}> 1
//? Consts["/debug/dwarf/AttrAddrClass"] = debug_dwarf.AttrAddrClass
//# OLD <{dAttrAddrClass}> 0
//# NEW <{dAttrAddrClass}> 1
//? Consts["/debug/dwarf/TagFriend"] = debug_dwarf.TagFriend
//# OLD <{dTagFriend}> 0
//# NEW <{dTagFriend}> 1
//? Consts["/debug/dwarf/AttrAbstractOrigin"] = debug_dwarf.AttrAbstractOrigin
//# OLD <{dAttrAbstractOrigin}> 0
//# NEW <{dAttrAbstractOrigin}> 1
//? Consts["/debug/dwarf/AttrRanges"] = debug_dwarf.AttrRanges
//# OLD <{dAttrRanges}> 0
//# NEW <{dAttrRanges}> 1
//? Consts["/debug/dwarf/TagCatchDwarfBlock"] = debug_dwarf.TagCatchDwarfBlock
//# OLD <{dTagCatchDwarfBlock}> 0
//# NEW <{dTagCatchDwarfBlock}> 1
//? Consts["/debug/dwarf/TagPtrToMemberType"] = debug_dwarf.TagPtrToMemberType
//# OLD <{dTagPtrToMemberType}> 0
//# NEW <{dTagPtrToMemberType}> 1
//? Consts["/debug/dwarf/TagNamelist"] = debug_dwarf.TagNamelist
//# OLD <{dTagNamelist}> 0
//# NEW <{dTagNamelist}> 1
//? Consts["/debug/dwarf/AttrVtableElemLoc"] = debug_dwarf.AttrVtableElemLoc
//# OLD <{dAttrVtableElemLoc}> 0
//# NEW <{dAttrVtableElemLoc}> 1
//? Consts["/debug/dwarf/TagVariant"] = debug_dwarf.TagVariant
//# OLD <{dTagVariant}> 0
//# NEW <{dTagVariant}> 1
//? Consts["/debug/dwarf/TagFileType"] = debug_dwarf.TagFileType
//# OLD <{dTagFileType}> 0
//# NEW <{dTagFileType}> 1
//? Consts["/debug/dwarf/AttrBitSize"] = debug_dwarf.AttrBitSize
//# OLD <{dAttrBitSize}> 0
//# NEW <{dAttrBitSize}> 1
//? Consts["/debug/dwarf/TagSetType"] = debug_dwarf.TagSetType
//# OLD <{dTagSetType}> 0
//# NEW <{dTagSetType}> 1
//? Consts["/debug/dwarf/AttrDataLocation"] = debug_dwarf.AttrDataLocation
//# OLD <{dAttrDataLocation}> 0
//# NEW <{dAttrDataLocation}> 1
//? Consts["/debug/dwarf/AttrDiscrList"] = debug_dwarf.AttrDiscrList
//# OLD <{dAttrDiscrList}> 0
//# NEW <{dAttrDiscrList}> 1
//? Consts["/debug/dwarf/AttrDiscr"] = debug_dwarf.AttrDiscr
//# OLD <{dAttrDiscr}> 0
//# NEW <{dAttrDiscr}> 1
//? Consts["/debug/dwarf/TagImportedDeclaration"] = debug_dwarf.TagImportedDeclaration
//# OLD <{dTagImportedDeclaration}> 0
//# NEW <{dTagImportedDeclaration}> 1
//? Consts["/debug/dwarf/TagNamelistItem"] = debug_dwarf.TagNamelistItem
//# OLD <{dTagNamelistItem}> 0
//# NEW <{dTagNamelistItem}> 1
Types["/debug/dwarf/ComplexType"] = new(*debug_dwarf.ComplexType)
//# OLD <{dComplexType}> 0
//# NEW <{dComplexType}> 1
//? Consts["/debug/dwarf/AttrUpperBound"] = debug_dwarf.AttrUpperBound
//# OLD <{dAttrUpperBound}> 0
//# NEW <{dAttrUpperBound}> 1
Types["/debug/dwarf/Field"] = new(*debug_dwarf.Field)
//# OLD <{dField}> 0
//# NEW <{dField}> 1
Types["/debug/dwarf/IntType"] = new(*debug_dwarf.IntType)
//# OLD <{dIntType}> 0
//# NEW <{dIntType}> 1
//? Consts["/debug/dwarf/TagConstant"] = debug_dwarf.TagConstant
//# OLD <{dTagConstant}> 0
//# NEW <{dTagConstant}> 1
//? Consts["/debug/dwarf/TagVariantPart"] = debug_dwarf.TagVariantPart
//# OLD <{dTagVariantPart}> 0
//# NEW <{dTagVariantPart}> 1
//? Consts["/debug/dwarf/AttrDeclLine"] = debug_dwarf.AttrDeclLine
//# OLD <{dAttrDeclLine}> 0
//# NEW <{dAttrDeclLine}> 1
//? Consts["/debug/dwarf/AttrMacroInfo"] = debug_dwarf.AttrMacroInfo
//# OLD <{dAttrMacroInfo}> 0
//# NEW <{dAttrMacroInfo}> 1
//? Consts["/debug/dwarf/AttrType"] = debug_dwarf.AttrType
//# OLD <{dAttrType}> 0
//# NEW <{dAttrType}> 1
//? Consts["/debug/dwarf/TagImportedUnit"] = debug_dwarf.TagImportedUnit
//# OLD <{dTagImportedUnit}> 0
//# NEW <{dTagImportedUnit}> 1
//? Consts["/debug/dwarf/AttrUseLocation"] = debug_dwarf.AttrUseLocation
//# OLD <{dAttrUseLocation}> 0
//# NEW <{dAttrUseLocation}> 1
//? Consts["/debug/dwarf/AttrCallColumn"] = debug_dwarf.AttrCallColumn
//# OLD <{dAttrCallColumn}> 0
//# NEW <{dAttrCallColumn}> 1
//? Consts["/debug/dwarf/AttrSibling"] = debug_dwarf.AttrSibling
//# OLD <{dAttrSibling}> 0
//# NEW <{dAttrSibling}> 1
Types["/debug/dwarf/BoolType"] = new(*debug_dwarf.BoolType)
//# OLD <{dBoolType}> 0
//# NEW <{dBoolType}> 1
//? Consts["/debug/dwarf/AttrVarParam"] = debug_dwarf.AttrVarParam
//# OLD <{dAttrVarParam}> 0
//# NEW <{dAttrVarParam}> 1
//? Consts["/debug/dwarf/AttrUseUTF8"] = debug_dwarf.AttrUseUTF8
//# OLD <{dAttrUseUTF8}> 0
//# NEW <{dAttrUseUTF8}> 1
//? Consts["/debug/dwarf/TagPartialUnit"] = debug_dwarf.TagPartialUnit
//# OLD <{dTagPartialUnit}> 0
//# NEW <{dTagPartialUnit}> 1
//? Consts["/debug/dwarf/AttrExternal"] = debug_dwarf.AttrExternal
//# OLD <{dAttrExternal}> 0
//# NEW <{dAttrExternal}> 1
//? Consts["/debug/dwarf/TagSubrangeType"] = debug_dwarf.TagSubrangeType
//# OLD <{dTagSubrangeType}> 0
//# NEW <{dTagSubrangeType}> 1
//? Consts["/debug/dwarf/TagReferenceType"] = debug_dwarf.TagReferenceType
//# OLD <{dTagReferenceType}> 0
//# NEW <{dTagReferenceType}> 1
Types["/debug/dwarf/AddrType"] = new(*debug_dwarf.AddrType)
//# OLD <{dAddrType}> 0
//# NEW <{dAddrType}> 1
Types["/debug/dwarf/UcharType"] = new(*debug_dwarf.UcharType)
//# OLD <{dUcharType}> 0
//# NEW <{dUcharType}> 1
//? Consts["/debug/dwarf/TagAccessDeclaration"] = debug_dwarf.TagAccessDeclaration
//# OLD <{dTagAccessDeclaration}> 0
//# NEW <{dTagAccessDeclaration}> 1
Types["/debug/dwarf/ArrayType"] = new(*debug_dwarf.ArrayType)
//# OLD <{dArrayType}> 0
//# NEW <{dArrayType}> 1
//? Consts["/debug/dwarf/AttrStringLength"] = debug_dwarf.AttrStringLength
//# OLD <{dAttrStringLength}> 0
//# NEW <{dAttrStringLength}> 1
//? Consts["/debug/dwarf/AttrCompDir"] = debug_dwarf.AttrCompDir
//# OLD <{dAttrCompDir}> 0
//# NEW <{dAttrCompDir}> 1
//? Consts["/debug/dwarf/TagMember"] = debug_dwarf.TagMember
//# OLD <{dTagMember}> 0
//# NEW <{dTagMember}> 1
Types["/debug/dwarf/UintType"] = new(*debug_dwarf.UintType)
//# OLD <{dUintType}> 0
//# NEW <{dUintType}> 1
//? Consts["/debug/dwarf/TagMutableType"] = debug_dwarf.TagMutableType
//# OLD <{dTagMutableType}> 0
//# NEW <{dTagMutableType}> 1
//? Consts["/debug/dwarf/TagStringType"] = debug_dwarf.TagStringType
//# OLD <{dTagStringType}> 0
//# NEW <{dTagStringType}> 1
//? Consts["/debug/dwarf/TagCompileUnit"] = debug_dwarf.TagCompileUnit
//# OLD <{dTagCompileUnit}> 0
//# NEW <{dTagCompileUnit}> 1
//? Consts["/debug/dwarf/TagCommonDwarfBlock"] = debug_dwarf.TagCommonDwarfBlock
//# OLD <{dTagCommonDwarfBlock}> 0
//# NEW <{dTagCommonDwarfBlock}> 1
//? Consts["/debug/dwarf/AttrPrototyped"] = debug_dwarf.AttrPrototyped
//# OLD <{dAttrPrototyped}> 0
//# NEW <{dAttrPrototyped}> 1
//? Consts["/debug/dwarf/AttrInline"] = debug_dwarf.AttrInline
//# OLD <{dAttrInline}> 0
//# NEW <{dAttrInline}> 1
Types["/debug/dwarf/VoidType"] = new(*debug_dwarf.VoidType)
//# OLD <{dVoidType}> 0
//# NEW <{dVoidType}> 1
//? Consts["/debug/dwarf/AttrProducer"] = debug_dwarf.AttrProducer
//# OLD <{dAttrProducer}> 0
//# NEW <{dAttrProducer}> 1
Funcs["/debug/dwarf/New"] = debug_dwarf.New
//# OLD <{dNew}> 0
//# NEW <{dNew}> 1
//? Consts["/debug/dwarf/TagArrayType"] = debug_dwarf.TagArrayType
//# OLD <{dTagArrayType}> 0
//# NEW <{dTagArrayType}> 1
//? Consts["/debug/dwarf/AttrBaseTypes"] = debug_dwarf.AttrBaseTypes
//# OLD <{dAttrBaseTypes}> 0
//# NEW <{dAttrBaseTypes}> 1
//? Consts["/debug/dwarf/TagDwarfProcedure"] = debug_dwarf.TagDwarfProcedure
//# OLD <{dTagDwarfProcedure}> 0
//# NEW <{dTagDwarfProcedure}> 1
//? Consts["/debug/dwarf/AttrIdentifierCase"] = debug_dwarf.AttrIdentifierCase
//# OLD <{dAttrIdentifierCase}> 0
//# NEW <{dAttrIdentifierCase}> 1
//? Consts["/debug/dwarf/AttrDeclFile"] = debug_dwarf.AttrDeclFile
//# OLD <{dAttrDeclFile}> 0
//# NEW <{dAttrDeclFile}> 1
//? Consts["/debug/dwarf/AttrDeclaration"] = debug_dwarf.AttrDeclaration
//# OLD <{dAttrDeclaration}> 0
//# NEW <{dAttrDeclaration}> 1
//? Consts["/debug/dwarf/AttrFrameBase"] = debug_dwarf.AttrFrameBase
//# OLD <{dAttrFrameBase}> 0
//# NEW <{dAttrFrameBase}> 1
//? Consts["/debug/dwarf/AttrTrampoline"] = debug_dwarf.AttrTrampoline
//# OLD <{dAttrTrampoline}> 0
//# NEW <{dAttrTrampoline}> 1
//? Consts["/debug/dwarf/AttrExtension"] = debug_dwarf.AttrExtension
//# OLD <{dAttrExtension}> 0
//# NEW <{dAttrExtension}> 1
//? Consts["/debug/dwarf/TagModule"] = debug_dwarf.TagModule
//# OLD <{dTagModule}> 0
//# NEW <{dTagModule}> 1
//? Consts["/debug/dwarf/AttrArtificial"] = debug_dwarf.AttrArtificial
//# OLD <{dAttrArtificial}> 0
//# NEW <{dAttrArtificial}> 1
//? Consts["/debug/dwarf/TagUnspecifiedType"] = debug_dwarf.TagUnspecifiedType
//# OLD <{dTagUnspecifiedType}> 0
//# NEW <{dTagUnspecifiedType}> 1
//? Consts["/debug/dwarf/AttrAssociated"] = debug_dwarf.AttrAssociated
//# OLD <{dAttrAssociated}> 0
//# NEW <{dAttrAssociated}> 1
Types["/debug/dwarf/StructField"] = new(*debug_dwarf.StructField)
//# OLD <{dStructField}> 0
//# NEW <{dStructField}> 1
Types["/debug/dwarf/EnumType"] = new(*debug_dwarf.EnumType)
//# OLD <{dEnumType}> 0
//# NEW <{dEnumType}> 1
//? Consts["/debug/dwarf/AttrName"] = debug_dwarf.AttrName
//# OLD <{dAttrName}> 0
//# NEW <{dAttrName}> 1
Types["/debug/dwarf/PtrType"] = new(*debug_dwarf.PtrType)
//# OLD <{dPtrType}> 0
//# NEW <{dPtrType}> 1
Types["/debug/dwarf/Type"] = new(*debug_dwarf.Type)
//# OLD <{dType}> 0
//# NEW <{dType}> 1
Types["/debug/dwarf/FloatType"] = new(*debug_dwarf.FloatType)
//# OLD <{dFloatType}> 0
//# NEW <{dFloatType}> 1
//? Consts["/debug/dwarf/TagBaseType"] = debug_dwarf.TagBaseType
//# OLD <{dTagBaseType}> 0
//# NEW <{dTagBaseType}> 1
//? Consts["/debug/dwarf/TagFormalParameter"] = debug_dwarf.TagFormalParameter
//# OLD <{dTagFormalParameter}> 0
//# NEW <{dTagFormalParameter}> 1
//? Consts["/debug/dwarf/AttrFriend"] = debug_dwarf.AttrFriend
//# OLD <{dAttrFriend}> 0
//# NEW <{dAttrFriend}> 1
//? Consts["/debug/dwarf/AttrCallLine"] = debug_dwarf.AttrCallLine
//# OLD <{dAttrCallLine}> 0
//# NEW <{dAttrCallLine}> 1
Types["/debug/dwarf/Entry"] = new(*debug_dwarf.Entry)
//# OLD <{dEntry}> 0
//# NEW <{dEntry}> 1
//? Consts["/debug/dwarf/AttrOrdering"] = debug_dwarf.AttrOrdering
//# OLD <{dAttrOrdering}> 0
//# NEW <{dAttrOrdering}> 1
//? Consts["/debug/dwarf/AttrCallFile"] = debug_dwarf.AttrCallFile
//# OLD <{dAttrCallFile}> 0
//# NEW <{dAttrCallFile}> 1
Types["/debug/dwarf/EnumValue"] = new(*debug_dwarf.EnumValue)
//# OLD <{dEnumValue}> 0
//# NEW <{dEnumValue}> 1
//? Consts["/debug/dwarf/AttrStride"] = debug_dwarf.AttrStride
//# OLD <{dAttrStride}> 0
//# NEW <{dAttrStride}> 1
//? Consts["/debug/dwarf/TagVariable"] = debug_dwarf.TagVariable
//# OLD <{dTagVariable}> 0
//# NEW <{dTagVariable}> 1
Types["/debug/dwarf/Data"] = new(*debug_dwarf.Data)
//# OLD <{dData}> 0
//# NEW <{dData}> 1
//? Consts["/debug/dwarf/TagNamespace"] = debug_dwarf.TagNamespace
//# OLD <{dTagNamespace}> 0
//# NEW <{dTagNamespace}> 1
Types["/debug/dwarf/CommonType"] = new(*debug_dwarf.CommonType)
//# OLD <{dCommonType}> 0
//# NEW <{dCommonType}> 1
//? Consts["/debug/dwarf/TagInheritance"] = debug_dwarf.TagInheritance
//# OLD <{dTagInheritance}> 0
//# NEW <{dTagInheritance}> 1
Types["/debug/dwarf/QualType"] = new(*debug_dwarf.QualType)
//# OLD <{dQualType}> 0
//# NEW <{dQualType}> 1
//? Consts["/debug/dwarf/AttrBitOffset"] = debug_dwarf.AttrBitOffset
//# OLD <{dAttrBitOffset}> 0
//# NEW <{dAttrBitOffset}> 1
//? Consts["/debug/dwarf/TagLabel"] = debug_dwarf.TagLabel
//# OLD <{dTagLabel}> 0
//# NEW <{dTagLabel}> 1
//? Consts["/debug/dwarf/AttrLowerBound"] = debug_dwarf.AttrLowerBound
//# OLD <{dAttrLowerBound}> 0
//# NEW <{dAttrLowerBound}> 1
Types["/debug/dwarf/DotDotDotType"] = new(*debug_dwarf.DotDotDotType)
//# OLD <{dDotDotDotType}> 0
//# NEW <{dDotDotDotType}> 1
//? Consts["/debug/dwarf/TagThrownType"] = debug_dwarf.TagThrownType
//# OLD <{dTagThrownType}> 0
//# NEW <{dTagThrownType}> 1
//? Consts["/debug/dwarf/AttrDataMemberLoc"] = debug_dwarf.AttrDataMemberLoc
//# OLD <{dAttrDataMemberLoc}> 0
//# NEW <{dAttrDataMemberLoc}> 1
//? Consts["/debug/dwarf/TagTypedef"] = debug_dwarf.TagTypedef
//# OLD <{dTagTypedef}> 0
//# NEW <{dTagTypedef}> 1
//? Consts["/debug/dwarf/AttrCalling"] = debug_dwarf.AttrCalling
//# OLD <{dAttrCalling}> 0
//# NEW <{dAttrCalling}> 1
Types["/debug/dwarf/Attr"] = new(*debug_dwarf.Attr)
//# OLD <{dAttr}> 0
//# NEW <{dAttr}> 1
//? Consts["/debug/dwarf/TagWithStmt"] = debug_dwarf.TagWithStmt
//# OLD <{dTagWithStmt}> 0
//# NEW <{dTagWithStmt}> 1
//? Consts["/debug/dwarf/TagSubroutineType"] = debug_dwarf.TagSubroutineType
//# OLD <{dTagSubroutineType}> 0
//# NEW <{dTagSubroutineType}> 1
//? Consts["/debug/dwarf/TagLexDwarfBlock"] = debug_dwarf.TagLexDwarfBlock
//# OLD <{dTagLexDwarfBlock}> 0
//# NEW <{dTagLexDwarfBlock}> 1
Types["/debug/dwarf/CharType"] = new(*debug_dwarf.CharType)
//# OLD <{dCharType}> 0
//# NEW <{dCharType}> 1
//? Consts["/debug/dwarf/AttrCommonRef"] = debug_dwarf.AttrCommonRef
//# OLD <{dAttrCommonRef}> 0
//# NEW <{dAttrCommonRef}> 1
Types["/debug/dwarf/TypedefType"] = new(*debug_dwarf.TypedefType)
//# OLD <{dTypedefType}> 0
//# NEW <{dTypedefType}> 1
Types["/debug/dwarf/Reader"] = new(*debug_dwarf.Reader)
//# OLD <{dReader}> 0
//# NEW <{dReader}> 1
//? Consts["/debug/dwarf/AttrLanguage"] = debug_dwarf.AttrLanguage
//# OLD <{dAttrLanguage}> 0
//# NEW <{dAttrLanguage}> 1
//? Consts["/debug/dwarf/AttrVisibility"] = debug_dwarf.AttrVisibility
//# OLD <{dAttrVisibility}> 0
//# NEW <{dAttrVisibility}> 1
//? Consts["/debug/dwarf/TagImportedModule"] = debug_dwarf.TagImportedModule
//# OLD <{dTagImportedModule}> 0
//# NEW <{dTagImportedModule}> 1
//? Consts["/debug/dwarf/AttrLocation"] = debug_dwarf.AttrLocation
//# OLD <{dAttrLocation}> 0
//# NEW <{dAttrLocation}> 1
Types["/debug/dwarf/StructType"] = new(*debug_dwarf.StructType)
//# OLD <{dStructType}> 0
//# NEW <{dStructType}> 1
//? Consts["/debug/dwarf/TagConstType"] = debug_dwarf.TagConstType
//# OLD <{dTagConstType}> 0
//# NEW <{dTagConstType}> 1
//? Consts["/debug/dwarf/AttrIsOptional"] = debug_dwarf.AttrIsOptional
//# OLD <{dAttrIsOptional}> 0
//# NEW <{dAttrIsOptional}> 1
//? Consts["/debug/dwarf/AttrDeclColumn"] = debug_dwarf.AttrDeclColumn
//# OLD <{dAttrDeclColumn}> 0
//# NEW <{dAttrDeclColumn}> 1
//? Consts["/debug/dwarf/TagCommonInclusion"] = debug_dwarf.TagCommonInclusion
//# OLD <{dTagCommonInclusion}> 0
//# NEW <{dTagCommonInclusion}> 1
//? Consts["/debug/dwarf/AttrStrideSize"] = debug_dwarf.AttrStrideSize
//# OLD <{dAttrStrideSize}> 0
//# NEW <{dAttrStrideSize}> 1
//? Consts["/debug/dwarf/AttrNamelistItem"] = debug_dwarf.AttrNamelistItem
//# OLD <{dAttrNamelistItem}> 0
//# NEW <{dAttrNamelistItem}> 1
Types["/debug/dwarf/Offset"] = new(*debug_dwarf.Offset)
//# OLD <{dOffset}> 0
//# NEW <{dOffset}> 1
//? Consts["/debug/dwarf/AttrEncoding"] = debug_dwarf.AttrEncoding
//# OLD <{dAttrEncoding}> 0
//# NEW <{dAttrEncoding}> 1
//? Consts["/debug/dwarf/TagSubprogram"] = debug_dwarf.TagSubprogram
//# OLD <{dTagSubprogram}> 0
//# NEW <{dTagSubprogram}> 1
//? Consts["/debug/dwarf/TagInlinedSubroutine"] = debug_dwarf.TagInlinedSubroutine
//# OLD <{dTagInlinedSubroutine}> 0
//# NEW <{dTagInlinedSubroutine}> 1
//? Consts["/debug/dwarf/AttrByteSize"] = debug_dwarf.AttrByteSize
//# OLD <{dAttrByteSize}> 0
//# NEW <{dAttrByteSize}> 1
//? Consts["/debug/dwarf/AttrDefaultValue"] = debug_dwarf.AttrDefaultValue
//# OLD <{dAttrDefaultValue}> 0
//# NEW <{dAttrDefaultValue}> 1
//? Consts["/debug/dwarf/AttrEntrypc"] = debug_dwarf.AttrEntrypc
//# OLD <{dAttrEntrypc}> 0
//# NEW <{dAttrEntrypc}> 1
//? Consts["/debug/dwarf/TagTemplateTypeParameter"] = debug_dwarf.TagTemplateTypeParameter
//# OLD <{dTagTemplateTypeParameter}> 0
//# NEW <{dTagTemplateTypeParameter}> 1
Types["/debug/dwarf/DecodeError"] = new(*debug_dwarf.DecodeError)
//# OLD <{dDecodeError}> 0
//# NEW <{dDecodeError}> 1


//     type debug/elf.Dyn64
//    const debug/elf.NT_FPREGSET
//    const debug/elf.R_ALPHA_SREL16
//    const debug/elf.R_ARM_ABS32
//    const debug/elf.R_ARM_GOTOFF
//    const debug/elf.R_SPARC_16
//    const debug/elf.SHT_DYNSYM
//    const debug/elf.R_PPC_EMB_RELST_LO
//    const debug/elf.Sym32Size
//    const debug/elf.R_PPC_ADDR14_BRNTAKEN
//    const debug/elf.R_PPC_GOT_TLSGD16_LO
//    const debug/elf.STB_GLOBAL
//     type debug/elf.Prog
//    const debug/elf.R_386_GOTOFF
//    const debug/elf.R_SPARC_8
//    const debug/elf.ELFMAG
//    const debug/elf.SHT_RELA
//    const debug/elf.DT_LOOS
//    const debug/elf.ET_LOOS
//    const debug/elf.DT_BIND_NOW
//    const debug/elf.ELFOSABI_TRU64
//    const debug/elf.DT_RPATH
//    const debug/elf.R_PPC_DTPREL32
//    const debug/elf.SHT_HASH
//    const debug/elf.SHN_LOPROC
//    const debug/elf.R_ALPHA_IMMED_BR_HI32
//    const debug/elf.R_PPC_REL14_BRNTAKEN
//    const debug/elf.R_ALPHA_GPVALUE
//    const debug/elf.R_PPC_TPREL16_HA
//    const debug/elf.PF_W
//    const debug/elf.R_X86_64_32S
//    const debug/elf.PT_LOAD
//    const debug/elf.EM_ME16
//    const debug/elf.SHF_INFO_LINK
//    const debug/elf.SHT_GNU_VERNEED
//    const debug/elf.SHT_PROGBITS
//    const debug/elf.R_PPC_TPREL32
//    const debug/elf.ELFOSABI_NSK
//    const debug/elf.R_ALPHA_IMMED_GP_16
//    const debug/elf.R_PPC_TLS
//    const debug/elf.PT_DYNAMIC
//    const debug/elf.EM_X86_64
//    const debug/elf.EM_S390
//    const debug/elf.R_SPARC_PLT64
//     type debug/elf.Class
//    const debug/elf.SHN_HIRESERVE
//    const debug/elf.R_PPC_JMP_SLOT
//    const debug/elf.R_386_JMP_SLOT
//    const debug/elf.R_SPARC_DISP64
//    const debug/elf.SHN_HIOS
//    const debug/elf.SHT_GNU_LIBLIST
//    const debug/elf.DT_HIPROC
//    const debug/elf.R_ARM_ABS12
//     type debug/elf.FormatError
//    const debug/elf.R_PPC_GOT_TPREL16_LO
//    const debug/elf.EM_860
//    const debug/elf.R_PPC_PLTREL32
//    const debug/elf.R_ALPHA_OP_PSUB
//    const debug/elf.SHT_GNU_VERDEF
//    const debug/elf.R_ALPHA_GLOB_DAT
//     type debug/elf.File
//    const debug/elf.EM_SPARCV9
//    const debug/elf.R_386_TLS_GD
//    const debug/elf.EM_RCE
//    const debug/elf.SHT_DYNAMIC
//    const debug/elf.R_ARM_THM_RPC22
//    const debug/elf.R_ARM_SWI24
//    const debug/elf.SHT_STRTAB
//    const debug/elf.R_SPARC_UA16
//     type debug/elf.R_X86_64
//    const debug/elf.EM_MIPS_RS3_LE
//    const debug/elf.R_PPC_TPREL16
//    const debug/elf.R_PPC_EMB_MRKREF
//    const debug/elf.EM_H8_300
//    const debug/elf.DT_SYMENT
//     type debug/elf.Version
//    const debug/elf.R_PPC_EMB_NADDR16_HA
//    const debug/elf.ELFOSABI_IRIX
//    const debug/elf.ELFOSABI_OPENBSD
//    const debug/elf.SHN_LORESERVE
//    const debug/elf.EM_SPARC
//     type debug/elf.Sym32
//    const debug/elf.DT_PLTRELSZ
//    const debug/elf.R_ALPHA_JMP_SLOT
//    const debug/elf.SHT_NOBITS
//    const debug/elf.DT_DEBUG
//    const debug/elf.R_386_32
//    const debug/elf.STB_HIPROC
//    const debug/elf.R_ARM_RREL32
//    const debug/elf.R_PPC_COPY
//     type debug/elf.Rela32
//    const debug/elf.EM_NDR1
//    const debug/elf.R_SPARC_WDISP16
//    const debug/elf.R_PPC_ADDR16_LO
//    const debug/elf.R_SPARC_GLOB_DAT
//    const debug/elf.R_PPC_EMB_SDA21
//    const debug/elf.R_PPC_EMB_SDA2I16
//    const debug/elf.ELFOSABI_OPENVMS
//    const debug/elf.Sym64Size
//    const debug/elf.SHT_LOUSER
//    const debug/elf.DT_VERNEEDNUM
//     type debug/elf.Rela64
//     type debug/elf.Dyn32
//    const debug/elf.R_386_TLS_GD_PUSH
//    const debug/elf.R_ALPHA_HINT
//    const debug/elf.R_SPARC_PC_LM22
//    const debug/elf.DT_JMPREL
//    const debug/elf.DT_ENCODING
//    const debug/elf.SHT_GROUP
//    const debug/elf.ELFOSABI_ARM
//    const debug/elf.R_SPARC_PCPLT32
//    const debug/elf.R_SPARC_OLO10
//    const debug/elf.R_ALPHA_GPRELLOW
//    const debug/elf.R_386_PC32
//    const debug/elf.R_386_TLS_LDM_CALL
//    const debug/elf.R_ARM_RABS32
//    const debug/elf.R_386_TLS_DTPOFF32
//    const debug/elf.R_PPC_GOT_TLSGD16_HA
//    const debug/elf.SHF_OS_NONCONFORMING
//    const debug/elf.ELFDATA2MSB
//     func debug/elf.Open
//    const debug/elf.EM_ALPHA_STD
//    const debug/elf.EM_386
//     type debug/elf.ProgType
//    const debug/elf.DT_RELSZ
//    const debug/elf.R_PPC_GOT_TLSGD16_HI
//    const debug/elf.R_ALPHA_SREL64
//    const debug/elf.SHT_REL
//    const debug/elf.R_X86_64_PC8
//    const debug/elf.STT_LOOS
//    const debug/elf.R_X86_64_GOTPCREL
//    const debug/elf.R_ALPHA_SREL32
//     func debug/elf.R_TYPE32
//    const debug/elf.R_ARM_RPC24
//    const debug/elf.R_PPC_EMB_RELSEC16
//    const debug/elf.SHF_MASKPROC
//    const debug/elf.DT_NEEDED
//    const debug/elf.R_PPC_PLTREL24
//    const debug/elf.ET_LOPROC
//    const debug/elf.R_ARM_REL32
//    const debug/elf.EM_MMA
//    const debug/elf.DF_BIND_NOW
//    const debug/elf.R_ARM_THM_PC22
//     type debug/elf.FileHeader
//    const debug/elf.R_386_COPY
//    const debug/elf.EI_VERSION
//    const debug/elf.SHF_LINK_ORDER
//    const debug/elf.R_SPARC_PCPLT10
//    const debug/elf.R_SPARC_HM10
//     func debug/elf.ST_BIND
//    const debug/elf.DF_ORIGIN
//    const debug/elf.R_PPC_ADDR14
//     type debug/elf.Sym64
//    const debug/elf.STT_TLS
//    const debug/elf.R_SPARC_WPLT30
//    const debug/elf.STT_NOTYPE
//    const debug/elf.R_PPC_UADDR32
//    const debug/elf.EV_NONE
//    const debug/elf.EI_NIDENT
//    const debug/elf.SHN_COMMON
//    const debug/elf.ET_HIOS
//    const debug/elf.DT_RELAENT
//    const debug/elf.R_SPARC_LOX10
//    const debug/elf.R_ARM_GNU_VTINHERIT
//    const debug/elf.PT_SHLIB
//    const debug/elf.R_ALPHA_GPREL32
//     type debug/elf.SymVis
//    const debug/elf.R_PPC_DTPREL16
//    const debug/elf.R_SPARC_PCPLT22
//    const debug/elf.EM_H8S
//    const debug/elf.R_SPARC_10
//    const debug/elf.STB_LOOS
//     type debug/elf.DynFlag
//    const debug/elf.R_SPARC_NONE
//    const debug/elf.R_ALPHA_OP_PRSHIFT
//    const debug/elf.DT_INIT
//    const debug/elf.R_386_TLS_LDO_32
//     type debug/elf.Machine
//    const debug/elf.SHN_XINDEX
//     type debug/elf.Rel32
//    const debug/elf.DT_VERNEED
//    const debug/elf.R_PPC_LOCAL24PC
//    const debug/elf.EM_PCP
//    const debug/elf.R_PPC_ADDR24
//    const debug/elf.R_ARM_PC13
//    const debug/elf.R_SPARC_PC_HM10
//    const debug/elf.R_ARM_ABS8
//    const debug/elf.R_PPC_GOT16_LO
//    const debug/elf.R_386_TLS_LDM
//    const debug/elf.R_PPC_ADDR16
//    const debug/elf.DF_TEXTREL
//    const debug/elf.STV_INTERNAL
//     func debug/elf.R_SYM64
//    const debug/elf.R_PPC_REL24
//    const debug/elf.R_PPC_REL14_BRTAKEN
//    const debug/elf.R_PPC_SECTOFF_HI
//    const debug/elf.R_ARM_THM_PC8
//    const debug/elf.R_X86_64_TLSGD
//    const debug/elf.R_PPC_DTPREL16_LO
//    const debug/elf.R_PPC_PLT16_HI
//    const debug/elf.R_PPC_PLT16_HA
//    const debug/elf.ELFDATANONE
//    const debug/elf.R_SPARC_H44
//    const debug/elf.R_386_TLS_GD_CALL
//     type debug/elf.Data
//    const debug/elf.R_ALPHA_IMMED_GP_HI32
//    const debug/elf.PT_HIOS
//    const debug/elf.EM_MIPS_X
//    const debug/elf.R_PPC_UADDR16
//    const debug/elf.R_PPC_SDAREL16
//    const debug/elf.R_PPC_GOT_TLSLD16_LO
//    const debug/elf.R_X86_64_GOT32
//    const debug/elf.R_X86_64_RELATIVE
//    const debug/elf.DT_INIT_ARRAYSZ
//    const debug/elf.EM_ST100
//     type debug/elf.SectionIndex
//    const debug/elf.EI_DATA
//    const debug/elf.R_PPC_REL14
//    const debug/elf.R_SPARC_64
//    const debug/elf.SHF_MERGE
//    const debug/elf.R_PPC_GOT_TLSLD16_HI
//    const debug/elf.R_X86_64_COPY
//    const debug/elf.EM_ARC
//    const debug/elf.EM_960
//    const debug/elf.SHN_UNDEF
//    const debug/elf.EM_SH
//    const debug/elf.SHF_EXECINSTR
//    const debug/elf.DT_FINI_ARRAYSZ
//    const debug/elf.SHT_HIOS
//    const debug/elf.R_SPARC_WDISP19
//    const debug/elf.STV_PROTECTED
//    const debug/elf.R_ALPHA_RELATIVE
//    const debug/elf.DT_PREINIT_ARRAY
//     type debug/elf.Prog64
//    const debug/elf.DF_STATIC_TLS
//    const debug/elf.ET_NONE
//    const debug/elf.R_PPC_GOT_TLSLD16
//    const debug/elf.ET_HIPROC
//    const debug/elf.R_SPARC_LOPLT10
//    const debug/elf.DT_HASH
//    const debug/elf.R_X86_64_64
//    const debug/elf.SHT_LOOS
//    const debug/elf.EM_SPARC32PLUS
//    const debug/elf.ELFOSABI_FREEBSD
//     func debug/elf.R_TYPE64
//    const debug/elf.R_386_TLS_TPOFF
//    const debug/elf.R_SPARC_HIX22
//    const debug/elf.EM_H8_300H
//    const debug/elf.SHF_MASKOS
//    const debug/elf.R_SPARC_DISP32
//    const debug/elf.EM_NONE
//     type debug/elf.NType
//    const debug/elf.SHT_FINI_ARRAY
//    const debug/elf.DT_TEXTREL
//    const debug/elf.R_SPARC_M44
//    const debug/elf.R_386_RELATIVE
//    const debug/elf.R_SPARC_7
//    const debug/elf.DF_SYMBOLIC
//     func debug/elf.R_INFO
//    const debug/elf.ELFOSABI_HURD
//    const debug/elf.EM_COLDFIRE
//    const debug/elf.R_ALPHA_LITUSE
//    const debug/elf.R_ALPHA_OP_STORE
//    const debug/elf.DT_RELENT
//    const debug/elf.R_X86_64_DTPOFF32
//    const debug/elf.PF_X
//     func debug/elf.R_INFO32
//    const debug/elf.R_X86_64_GOTTPOFF
//    const debug/elf.STB_WEAK
//    const debug/elf.STT_FILE
//    const debug/elf.DT_RELASZ
//    const debug/elf.R_PPC_EMB_BIT_FLD
//    const debug/elf.EM_MIPS
//    const debug/elf.R_PPC_GOT_TLSLD16_HA
//    const debug/elf.R_SPARC_COPY
//     func debug/elf.R_SYM32
//    const debug/elf.R_SPARC_PC10
//    const debug/elf.R_PPC_TPREL16_HI
//    const debug/elf.R_SPARC_PC22
//    const debug/elf.R_SPARC_WDISP30
//    const debug/elf.R_ALPHA_COPY
//    const debug/elf.ET_EXEC
//    const debug/elf.EM_IA_64
//    const debug/elf.R_SPARC_HH22
//     type debug/elf.R_ALPHA
//     type debug/elf.Prog32
//    const debug/elf.R_386_PLT32
//    const debug/elf.ELFOSABI_SOLARIS
//    const debug/elf.R_386_TLS_LDM_POP
//    const debug/elf.R_ALPHA_NONE
//    const debug/elf.R_ARM_XPC25
//    const debug/elf.PF_MASKPROC
//    const debug/elf.R_SPARC_13
//    const debug/elf.STT_COMMON
//     type debug/elf.Type
//    const debug/elf.R_SPARC_GLOB_JMP
//    const debug/elf.SHF_GROUP
//    const debug/elf.SHT_INIT_ARRAY
//    const debug/elf.DT_INIT_ARRAY
//    const debug/elf.R_SPARC_L44
//     type debug/elf.Header64
//    const debug/elf.R_X86_64_GLOB_DAT
//    const debug/elf.R_PPC_GOT_TLSGD16
//    const debug/elf.R_ALPHA_LITERAL
//    const debug/elf.R_X86_64_16
//    const debug/elf.PT_HIPROC
//    const debug/elf.DT_FINI_ARRAY
//    const debug/elf.R_386_GOT32
//    const debug/elf.STV_HIDDEN
//    const debug/elf.R_PPC_ADDR32
//    const debug/elf.DT_SYMBOLIC
//    const debug/elf.ELFCLASSNONE
//    const debug/elf.ELFCLASS64
//    const debug/elf.ELFOSABI_NETBSD
//    const debug/elf.R_ALPHA_IMMED_LO32
//    const debug/elf.R_PPC_SECTOFF_LO
//    const debug/elf.R_PPC_EMB_NADDR16_LO
//    const debug/elf.PT_NULL
//    const debug/elf.ELFOSABI_86OPEN
//    const debug/elf.R_PPC_DTPREL16_HA
//    const debug/elf.EI_CLASS
//    const debug/elf.NT_PRPSINFO
//    const debug/elf.R_386_TLS_LE
//    const debug/elf.R_PPC_SECTOFF_HA
//    const debug/elf.R_X86_64_TLSLD
//    const debug/elf.SHT_SHLIB
//    const debug/elf.R_PPC_GOT16_HA
//    const debug/elf.ET_REL
//    const debug/elf.SHT_SYMTAB
//    const debug/elf.DT_RELA
//     type debug/elf.R_PPC
//    const debug/elf.SHN_HIPROC
//    const debug/elf.R_SPARC_11
//    const debug/elf.R_PPC_REL32
//    const debug/elf.R_SPARC_HIPLT22
//    const debug/elf.SHF_WRITE
//    const debug/elf.ELFOSABI_NONE
//    const debug/elf.R_SPARC_WDISP22
//    const debug/elf.SHT_PREINIT_ARRAY
//    const debug/elf.R_PPC_EMB_NADDR32
//    const debug/elf.STT_HIOS
//    const debug/elf.R_X86_64_PC32
//    const debug/elf.R_X86_64_PLT32
//    const debug/elf.R_SPARC_GOT13
//    const debug/elf.R_PPC_ADDR14_BRTAKEN
//    const debug/elf.R_X86_64_DTPOFF64
//    const debug/elf.SHT_GNU_HASH
//    const debug/elf.R_PPC_TPREL16_LO
//    const debug/elf.R_PPC_ADDR16_HI
//    const debug/elf.ELFOSABI_MODESTO
//    const debug/elf.R_PPC_ADDR16_HA
//    const debug/elf.EI_PAD
//    const debug/elf.R_386_NONE
//    const debug/elf.R_ALPHA_BRADDR
//    const debug/elf.STT_HIPROC
//    const debug/elf.R_ARM_NONE
//    const debug/elf.R_ARM_SBREL32
//    const debug/elf.PT_INTERP
//     func debug/elf.ST_VISIBILITY
//    const debug/elf.R_PPC_PLT32
//    const debug/elf.DT_RUNPATH
//    const debug/elf.R_ARM_AMP_VCALL9
//    const debug/elf.STT_LOPROC
//    const debug/elf.EV_CURRENT
//    const debug/elf.R_PPC_EMB_NADDR16_HI
//    const debug/elf.R_X86_64_NONE
//    const debug/elf.SHT_SYMTAB_SHNDX
//    const debug/elf.EM_RH32
//    const debug/elf.SHF_TLS
//    const debug/elf.R_386_TLS_GOTIE
//    const debug/elf.EM_TINYJ
//    const debug/elf.R_X86_64_JMP_SLOT
//     type debug/elf.Section64
//     func debug/elf.NewFile
//    const debug/elf.DT_HIOS
//    const debug/elf.EM_PPC
//    const debug/elf.EM_ALPHA
//    const debug/elf.ARM_MAGIC_TRAMP_NUMBER
//     type debug/elf.ProgFlag
//    const debug/elf.ELFCLASS32
//    const debug/elf.R_386_TLS_IE
//    const debug/elf.R_ARM_RSBREL32
//    const debug/elf.SHF_STRINGS
//    const debug/elf.DT_FINI
//    const debug/elf.R_SPARC_22
//    const debug/elf.R_ALPHA_GPRELHIGH
//    const debug/elf.ET_DYN
//    const debug/elf.R_386_TLS_DTPMOD32
//    const debug/elf.R_ARM_PLT32
//    const debug/elf.DT_STRSZ
//    const debug/elf.R_PPC_GOT16_HI
//    const debug/elf.R_SPARC_RELATIVE
//    const debug/elf.R_X86_64_8
//     type debug/elf.SymBind
//    const debug/elf.R_PPC_EMB_RELST_HA
//    const debug/elf.R_ARM_GLOB_DAT
//    const debug/elf.R_X86_64_PC16
//    const debug/elf.EM_PARISC
//     type debug/elf.OSABI
//    const debug/elf.R_ARM_COPY
//    const debug/elf.R_386_TLS_TPOFF32
//    const debug/elf.STT_FUNC
//    const debug/elf.R_386_TLS_LDM_PUSH
//    const debug/elf.R_SPARC_6
//     type debug/elf.ProgHeader
//    const debug/elf.R_X86_64_32
//     type debug/elf.SectionType
//    const debug/elf.STT_SECTION
//    const debug/elf.EM_FR20
//    const debug/elf.ELFDATA2LSB
//    const debug/elf.PT_NOTE
//    const debug/elf.R_SPARC_LO10
//    const debug/elf.SHT_GNU_ATTRIBUTES
//    const debug/elf.EM_MIPS_RS4_BE
//    const debug/elf.DT_PLTREL
//    const debug/elf.R_PPC_SECTOFF
//    const debug/elf.EM_NCPU
//     func debug/elf.ST_TYPE
//    const debug/elf.R_SPARC_PLT32
//    const debug/elf.EM_PPC64
//    const debug/elf.SHN_ABS
//    const debug/elf.SHT_GNU_VERSYM
//    const debug/elf.R_PPC_DTPREL16_HI
//    const debug/elf.R_PPC_GOT16
//    const debug/elf.R_SPARC_DISP8
//    const debug/elf.DT_LOPROC
//    const debug/elf.R_ARM_GOT32
//     type debug/elf.Symbol
//     type debug/elf.Header32
//    const debug/elf.R_ARM_JUMP_SLOT
//    const debug/elf.R_PPC_EMB_SDA2REL
//    const debug/elf.R_PPC_EMB_RELSDA
//    const debug/elf.DT_SYMTAB
//    const debug/elf.R_X86_64_DTPMOD64
//    const debug/elf.R_SPARC_HI22
//    const debug/elf.EM_M32
//     type debug/elf.DynTag
//    const debug/elf.R_PPC_EMB_RELST_HI
//    const debug/elf.EM_S370
//    const debug/elf.PT_PHDR
//    const debug/elf.PF_R
//    const debug/elf.EM_88K
//    const debug/elf.EM_68HC12
//    const debug/elf.R_SPARC_JMP_SLOT
//    const debug/elf.SHT_HIPROC
//    const debug/elf.R_PPC_GLOB_DAT
//    const debug/elf.NT_PRSTATUS
//    const debug/elf.R_SPARC_REGISTER
//    const debug/elf.STV_DEFAULT
//    const debug/elf.R_SPARC_UA32
//    const debug/elf.R_PPC_GOT_TPREL16_HI
//    const debug/elf.DT_PLTGOT
//    const debug/elf.R_ALPHA_REFQUAD
//    const debug/elf.R_386_TLS_LE_32
//    const debug/elf.R_SPARC_LM22
//    const debug/elf.R_SPARC_PC_HH22
//    const debug/elf.R_386_TLS_GD_POP
//    const debug/elf.R_SPARC_32
//    const debug/elf.R_SPARC_GOT10
//    const debug/elf.PT_LOPROC
//    const debug/elf.SHT_NOTE
//    const debug/elf.R_386_TLS_LDM_32
//     type debug/elf.Rel64
//    const debug/elf.R_PPC_GOT_TPREL16_HA
//     type debug/elf.R_SPARC
//     type debug/elf.R_386
//    const debug/elf.PF_MASKOS
//    const debug/elf.R_PPC_GOT_TPREL16
//    const debug/elf.EI_ABIVERSION
//    const debug/elf.R_ARM_GNU_VTENTRY
//    const debug/elf.DT_REL
//    const debug/elf.R_ALPHA_GPDISP
//    const debug/elf.R_ARM_PC24
//    const debug/elf.SHT_LOPROC
//     type debug/elf.R_ARM
//    const debug/elf.R_386_GLOB_DAT
//    const debug/elf.R_SPARC_5
//    const debug/elf.R_PPC_DTPMOD32
//    const debug/elf.R_ALPHA_REFLONG
//    const debug/elf.R_ARM_RELATIVE
//    const debug/elf.SHT_NULL
//    const debug/elf.STB_LOCAL
//    const debug/elf.EM_68K
//    const debug/elf.R_PPC_EMB_SDAI16
//    const debug/elf.EM_486
//    const debug/elf.EI_OSABI
//     func debug/elf.ST_INFO
//    const debug/elf.R_ARM_THM_ABS5
//    const debug/elf.EM_H8_500
//    const debug/elf.EM_TRICORE
//    const debug/elf.SHN_LOOS
//    const debug/elf.EM_STARCORE
//    const debug/elf.R_ARM_ABS16
//     type debug/elf.Section
//    const debug/elf.EM_VPP500
//    const debug/elf.R_SPARC_UA64
//    const debug/elf.R_ARM_RBASE
//    const debug/elf.R_PPC_PLT16_LO
//    const debug/elf.R_ARM_THM_SWI8
//    const debug/elf.STT_OBJECT
//    const debug/elf.R_ALPHA_IMMED_SCN_HI32
//     type debug/elf.SectionFlag
//     type debug/elf.SymType
//    const debug/elf.R_386_TLS_GD_32
//    const debug/elf.R_ARM_THM_XPC22
//    const debug/elf.STB_LOPROC
//    const debug/elf.R_X86_64_TPOFF32
//    const debug/elf.R_SPARC_DISP16
//    const debug/elf.ELFOSABI_LINUX
//    const debug/elf.DT_STRTAB
//    const debug/elf.R_ARM_GOTPC
//    const debug/elf.EM_ARM
//     type debug/elf.Section32
//    const debug/elf.R_ALPHA_OP_PUSH
//    const debug/elf.ELFOSABI_HPUX
//    const debug/elf.EM_V800
//    const debug/elf.DT_SONAME
//    const debug/elf.DT_PREINIT_ARRAYSZ
//    const debug/elf.R_386_TLS_IE_32
//    const debug/elf.ELFOSABI_AIX
//    const debug/elf.SHT_HIUSER
//    const debug/elf.R_PPC_EMB_NADDR16
//    const debug/elf.PT_LOOS
//    const debug/elf.R_386_GOTPC
//    const debug/elf.ET_CORE
//    const debug/elf.PT_TLS
//    const debug/elf.SHF_ALLOC
//     type debug/elf.ImportedSymbol
//    const debug/elf.STB_HIOS
//    const debug/elf.DT_NULL
//    const debug/elf.DT_FLAGS
//     type debug/elf.SectionHeader
//    const debug/elf.ELFOSABI_STANDALONE
//    const debug/elf.R_PPC_NONE
//    const debug/elf.R_SPARC_GOT22
//    const debug/elf.DT_VERSYM
//    const debug/elf.R_X86_64_TPOFF64
//    const debug/elf.R_PPC_RELATIVE

//? Consts["/debug/elf/ELFOSABI_AIX"] = debug_elf.ELFOSABI_AIX
//# OLD <{eELFOSABI_AIX}> 0
//# NEW <{eELFOSABI_AIX}> 1
//? Consts["/debug/elf/SHT_HIUSER"] = debug_elf.SHT_HIUSER
//# OLD <{eSHT_HIUSER}> 0
//# NEW <{eSHT_HIUSER}> 1
//? Consts["/debug/elf/R_PPC_EMB_NADDR16"] = debug_elf.R_PPC_EMB_NADDR16
//# OLD <{eR_PPC_EMB_NADDR16}> 0
//# NEW <{eR_PPC_EMB_NADDR16}> 1
//? Consts["/debug/elf/PT_LOOS"] = debug_elf.PT_LOOS
//# OLD <{ePT_LOOS}> 0
//# NEW <{ePT_LOOS}> 1
//? Consts["/debug/elf/R_386_GOTPC"] = debug_elf.R_386_GOTPC
//# OLD <{eR_386_GOTPC}> 0
//# NEW <{eR_386_GOTPC}> 1
//? Consts["/debug/elf/ET_CORE"] = debug_elf.ET_CORE
//# OLD <{eET_CORE}> 0
//# NEW <{eET_CORE}> 1
//? Consts["/debug/elf/PT_TLS"] = debug_elf.PT_TLS
//# OLD <{ePT_TLS}> 0
//# NEW <{ePT_TLS}> 1
//? Consts["/debug/elf/SHF_ALLOC"] = debug_elf.SHF_ALLOC
//# OLD <{eSHF_ALLOC}> 0
//# NEW <{eSHF_ALLOC}> 1
Types["/debug/elf/ImportedSymbol"] = new(*debug_elf.ImportedSymbol)
//# OLD <{eImportedSymbol}> 0
//# NEW <{eImportedSymbol}> 1
//? Consts["/debug/elf/STB_HIOS"] = debug_elf.STB_HIOS
//# OLD <{eSTB_HIOS}> 0
//# NEW <{eSTB_HIOS}> 1
//? Consts["/debug/elf/DT_NULL"] = debug_elf.DT_NULL
//# OLD <{eDT_NULL}> 0
//# NEW <{eDT_NULL}> 1
//? Consts["/debug/elf/DT_FLAGS"] = debug_elf.DT_FLAGS
//# OLD <{eDT_FLAGS}> 0
//# NEW <{eDT_FLAGS}> 1
Types["/debug/elf/SectionHeader"] = new(*debug_elf.SectionHeader)
//# OLD <{eSectionHeader}> 0
//# NEW <{eSectionHeader}> 1
//? Consts["/debug/elf/ELFOSABI_STANDALONE"] = debug_elf.ELFOSABI_STANDALONE
//# OLD <{eELFOSABI_STANDALONE}> 0
//# NEW <{eELFOSABI_STANDALONE}> 1
//? Consts["/debug/elf/R_PPC_NONE"] = debug_elf.R_PPC_NONE
//# OLD <{eR_PPC_NONE}> 0
//# NEW <{eR_PPC_NONE}> 1
//? Consts["/debug/elf/R_SPARC_GOT22"] = debug_elf.R_SPARC_GOT22
//# OLD <{eR_SPARC_GOT22}> 0
//# NEW <{eR_SPARC_GOT22}> 1
//? Consts["/debug/elf/DT_VERSYM"] = debug_elf.DT_VERSYM
//# OLD <{eDT_VERSYM}> 0
//# NEW <{eDT_VERSYM}> 1
//? Consts["/debug/elf/R_X86_64_TPOFF64"] = debug_elf.R_X86_64_TPOFF64
//# OLD <{eR_X86_64_TPOFF64}> 0
//# NEW <{eR_X86_64_TPOFF64}> 1
//? Consts["/debug/elf/R_PPC_RELATIVE"] = debug_elf.R_PPC_RELATIVE
//# OLD <{eR_PPC_RELATIVE}> 0
//# NEW <{eR_PPC_RELATIVE}> 1
Types["/debug/elf/Dyn64"] = new(*debug_elf.Dyn64)
//# OLD <{eDyn64}> 0
//# NEW <{eDyn64}> 1
//? Consts["/debug/elf/NT_FPREGSET"] = debug_elf.NT_FPREGSET
//# OLD <{eNT_FPREGSET}> 0
//# NEW <{eNT_FPREGSET}> 1
//? Consts["/debug/elf/R_ALPHA_SREL16"] = debug_elf.R_ALPHA_SREL16
//# OLD <{eR_ALPHA_SREL16}> 0
//# NEW <{eR_ALPHA_SREL16}> 1
//? Consts["/debug/elf/R_ARM_ABS32"] = debug_elf.R_ARM_ABS32
//# OLD <{eR_ARM_ABS32}> 0
//# NEW <{eR_ARM_ABS32}> 1
//? Consts["/debug/elf/R_ARM_GOTOFF"] = debug_elf.R_ARM_GOTOFF
//# OLD <{eR_ARM_GOTOFF}> 0
//# NEW <{eR_ARM_GOTOFF}> 1
//? Consts["/debug/elf/R_SPARC_16"] = debug_elf.R_SPARC_16
//# OLD <{eR_SPARC_16}> 0
//# NEW <{eR_SPARC_16}> 1
//? Consts["/debug/elf/SHT_DYNSYM"] = debug_elf.SHT_DYNSYM
//# OLD <{eSHT_DYNSYM}> 0
//# NEW <{eSHT_DYNSYM}> 1
//? Consts["/debug/elf/R_PPC_EMB_RELST_LO"] = debug_elf.R_PPC_EMB_RELST_LO
//# OLD <{eR_PPC_EMB_RELST_LO}> 0
//# NEW <{eR_PPC_EMB_RELST_LO}> 1
//? Consts["/debug/elf/Sym32Size"] = debug_elf.Sym32Size
//# OLD <{eSym32Size}> 0
//# NEW <{eSym32Size}> 1
//? Consts["/debug/elf/R_PPC_ADDR14_BRNTAKEN"] = debug_elf.R_PPC_ADDR14_BRNTAKEN
//# OLD <{eR_PPC_ADDR14_BRNTAKEN}> 0
//# NEW <{eR_PPC_ADDR14_BRNTAKEN}> 1
//? Consts["/debug/elf/R_PPC_GOT_TLSGD16_LO"] = debug_elf.R_PPC_GOT_TLSGD16_LO
//# OLD <{eR_PPC_GOT_TLSGD16_LO}> 0
//# NEW <{eR_PPC_GOT_TLSGD16_LO}> 1
//? Consts["/debug/elf/STB_GLOBAL"] = debug_elf.STB_GLOBAL
//# OLD <{eSTB_GLOBAL}> 0
//# NEW <{eSTB_GLOBAL}> 1
Types["/debug/elf/Prog"] = new(*debug_elf.Prog)
//# OLD <{eProg}> 0
//# NEW <{eProg}> 1
//? Consts["/debug/elf/R_386_GOTOFF"] = debug_elf.R_386_GOTOFF
//# OLD <{eR_386_GOTOFF}> 0
//# NEW <{eR_386_GOTOFF}> 1
//? Consts["/debug/elf/R_SPARC_8"] = debug_elf.R_SPARC_8
//# OLD <{eR_SPARC_8}> 0
//# NEW <{eR_SPARC_8}> 1
//? Consts["/debug/elf/ELFMAG"] = debug_elf.ELFMAG
//# OLD <{eELFMAG}> 0
//# NEW <{eELFMAG}> 1
//? Consts["/debug/elf/SHT_RELA"] = debug_elf.SHT_RELA
//# OLD <{eSHT_RELA}> 0
//# NEW <{eSHT_RELA}> 1
//? Consts["/debug/elf/DT_LOOS"] = debug_elf.DT_LOOS
//# OLD <{eDT_LOOS}> 0
//# NEW <{eDT_LOOS}> 1
//? Consts["/debug/elf/ET_LOOS"] = debug_elf.ET_LOOS
//# OLD <{eET_LOOS}> 0
//# NEW <{eET_LOOS}> 1
//? Consts["/debug/elf/DT_BIND_NOW"] = debug_elf.DT_BIND_NOW
//# OLD <{eDT_BIND_NOW}> 0
//# NEW <{eDT_BIND_NOW}> 1
//? Consts["/debug/elf/ELFOSABI_TRU64"] = debug_elf.ELFOSABI_TRU64
//# OLD <{eELFOSABI_TRU64}> 0
//# NEW <{eELFOSABI_TRU64}> 1
//? Consts["/debug/elf/DT_RPATH"] = debug_elf.DT_RPATH
//# OLD <{eDT_RPATH}> 0
//# NEW <{eDT_RPATH}> 1
//? Consts["/debug/elf/R_PPC_DTPREL32"] = debug_elf.R_PPC_DTPREL32
//# OLD <{eR_PPC_DTPREL32}> 0
//# NEW <{eR_PPC_DTPREL32}> 1
//? Consts["/debug/elf/SHT_HASH"] = debug_elf.SHT_HASH
//# OLD <{eSHT_HASH}> 0
//# NEW <{eSHT_HASH}> 1
//? Consts["/debug/elf/SHN_LOPROC"] = debug_elf.SHN_LOPROC
//# OLD <{eSHN_LOPROC}> 0
//# NEW <{eSHN_LOPROC}> 1
//? Consts["/debug/elf/R_ALPHA_IMMED_BR_HI32"] = debug_elf.R_ALPHA_IMMED_BR_HI32
//# OLD <{eR_ALPHA_IMMED_BR_HI32}> 0
//# NEW <{eR_ALPHA_IMMED_BR_HI32}> 1
//? Consts["/debug/elf/R_PPC_REL14_BRNTAKEN"] = debug_elf.R_PPC_REL14_BRNTAKEN
//# OLD <{eR_PPC_REL14_BRNTAKEN}> 0
//# NEW <{eR_PPC_REL14_BRNTAKEN}> 1
//? Consts["/debug/elf/R_ALPHA_GPVALUE"] = debug_elf.R_ALPHA_GPVALUE
//# OLD <{eR_ALPHA_GPVALUE}> 0
//# NEW <{eR_ALPHA_GPVALUE}> 1
//? Consts["/debug/elf/R_PPC_TPREL16_HA"] = debug_elf.R_PPC_TPREL16_HA
//# OLD <{eR_PPC_TPREL16_HA}> 0
//# NEW <{eR_PPC_TPREL16_HA}> 1
//? Consts["/debug/elf/PF_W"] = debug_elf.PF_W
//# OLD <{ePF_W}> 0
//# NEW <{ePF_W}> 1
//? Consts["/debug/elf/R_X86_64_32S"] = debug_elf.R_X86_64_32S
//# OLD <{eR_X86_64_32S}> 0
//# NEW <{eR_X86_64_32S}> 1
//? Consts["/debug/elf/PT_LOAD"] = debug_elf.PT_LOAD
//# OLD <{ePT_LOAD}> 0
//# NEW <{ePT_LOAD}> 1
//? Consts["/debug/elf/EM_ME16"] = debug_elf.EM_ME16
//# OLD <{eEM_ME16}> 0
//# NEW <{eEM_ME16}> 1
//? Consts["/debug/elf/SHF_INFO_LINK"] = debug_elf.SHF_INFO_LINK
//# OLD <{eSHF_INFO_LINK}> 0
//# NEW <{eSHF_INFO_LINK}> 1
//? Consts["/debug/elf/SHT_GNU_VERNEED"] = debug_elf.SHT_GNU_VERNEED
//# OLD <{eSHT_GNU_VERNEED}> 0
//# NEW <{eSHT_GNU_VERNEED}> 1
//? Consts["/debug/elf/SHT_PROGBITS"] = debug_elf.SHT_PROGBITS
//# OLD <{eSHT_PROGBITS}> 0
//# NEW <{eSHT_PROGBITS}> 1
//? Consts["/debug/elf/R_PPC_TPREL32"] = debug_elf.R_PPC_TPREL32
//# OLD <{eR_PPC_TPREL32}> 0
//# NEW <{eR_PPC_TPREL32}> 1
//? Consts["/debug/elf/ELFOSABI_NSK"] = debug_elf.ELFOSABI_NSK
//# OLD <{eELFOSABI_NSK}> 0
//# NEW <{eELFOSABI_NSK}> 1
//? Consts["/debug/elf/R_ALPHA_IMMED_GP_16"] = debug_elf.R_ALPHA_IMMED_GP_16
//# OLD <{eR_ALPHA_IMMED_GP_16}> 0
//# NEW <{eR_ALPHA_IMMED_GP_16}> 1
//? Consts["/debug/elf/R_PPC_TLS"] = debug_elf.R_PPC_TLS
//# OLD <{eR_PPC_TLS}> 0
//# NEW <{eR_PPC_TLS}> 1
//? Consts["/debug/elf/PT_DYNAMIC"] = debug_elf.PT_DYNAMIC
//# OLD <{ePT_DYNAMIC}> 0
//# NEW <{ePT_DYNAMIC}> 1
//? Consts["/debug/elf/EM_X86_64"] = debug_elf.EM_X86_64
//# OLD <{eEM_X86_64}> 0
//# NEW <{eEM_X86_64}> 1
//? Consts["/debug/elf/EM_S390"] = debug_elf.EM_S390
//# OLD <{eEM_S390}> 0
//# NEW <{eEM_S390}> 1
//? Consts["/debug/elf/R_SPARC_PLT64"] = debug_elf.R_SPARC_PLT64
//# OLD <{eR_SPARC_PLT64}> 0
//# NEW <{eR_SPARC_PLT64}> 1
Types["/debug/elf/Class"] = new(*debug_elf.Class)
//# OLD <{eClass}> 0
//# NEW <{eClass}> 1
//? Consts["/debug/elf/SHN_HIRESERVE"] = debug_elf.SHN_HIRESERVE
//# OLD <{eSHN_HIRESERVE}> 0
//# NEW <{eSHN_HIRESERVE}> 1
//? Consts["/debug/elf/R_PPC_JMP_SLOT"] = debug_elf.R_PPC_JMP_SLOT
//# OLD <{eR_PPC_JMP_SLOT}> 0
//# NEW <{eR_PPC_JMP_SLOT}> 1
//? Consts["/debug/elf/R_386_JMP_SLOT"] = debug_elf.R_386_JMP_SLOT
//# OLD <{eR_386_JMP_SLOT}> 0
//# NEW <{eR_386_JMP_SLOT}> 1
//? Consts["/debug/elf/R_SPARC_DISP64"] = debug_elf.R_SPARC_DISP64
//# OLD <{eR_SPARC_DISP64}> 0
//# NEW <{eR_SPARC_DISP64}> 1
//? Consts["/debug/elf/SHN_HIOS"] = debug_elf.SHN_HIOS
//# OLD <{eSHN_HIOS}> 0
//# NEW <{eSHN_HIOS}> 1
//? Consts["/debug/elf/SHT_GNU_LIBLIST"] = debug_elf.SHT_GNU_LIBLIST
//# OLD <{eSHT_GNU_LIBLIST}> 0
//# NEW <{eSHT_GNU_LIBLIST}> 1
//? Consts["/debug/elf/DT_HIPROC"] = debug_elf.DT_HIPROC
//# OLD <{eDT_HIPROC}> 0
//# NEW <{eDT_HIPROC}> 1
//? Consts["/debug/elf/R_ARM_ABS12"] = debug_elf.R_ARM_ABS12
//# OLD <{eR_ARM_ABS12}> 0
//# NEW <{eR_ARM_ABS12}> 1
Types["/debug/elf/FormatError"] = new(*debug_elf.FormatError)
//# OLD <{eFormatError}> 0
//# NEW <{eFormatError}> 1
//? Consts["/debug/elf/R_PPC_GOT_TPREL16_LO"] = debug_elf.R_PPC_GOT_TPREL16_LO
//# OLD <{eR_PPC_GOT_TPREL16_LO}> 0
//# NEW <{eR_PPC_GOT_TPREL16_LO}> 1
//? Consts["/debug/elf/EM_860"] = debug_elf.EM_860
//# OLD <{eEM_860}> 0
//# NEW <{eEM_860}> 1
//? Consts["/debug/elf/R_PPC_PLTREL32"] = debug_elf.R_PPC_PLTREL32
//# OLD <{eR_PPC_PLTREL32}> 0
//# NEW <{eR_PPC_PLTREL32}> 1
//? Consts["/debug/elf/R_ALPHA_OP_PSUB"] = debug_elf.R_ALPHA_OP_PSUB
//# OLD <{eR_ALPHA_OP_PSUB}> 0
//# NEW <{eR_ALPHA_OP_PSUB}> 1
//? Consts["/debug/elf/SHT_GNU_VERDEF"] = debug_elf.SHT_GNU_VERDEF
//# OLD <{eSHT_GNU_VERDEF}> 0
//# NEW <{eSHT_GNU_VERDEF}> 1
//? Consts["/debug/elf/R_ALPHA_GLOB_DAT"] = debug_elf.R_ALPHA_GLOB_DAT
//# OLD <{eR_ALPHA_GLOB_DAT}> 0
//# NEW <{eR_ALPHA_GLOB_DAT}> 1
Types["/debug/elf/File"] = new(*debug_elf.File)
//# OLD <{eFile}> 0
//# NEW <{eFile}> 1
//? Consts["/debug/elf/EM_SPARCV9"] = debug_elf.EM_SPARCV9
//# OLD <{eEM_SPARCV9}> 0
//# NEW <{eEM_SPARCV9}> 1
//? Consts["/debug/elf/R_386_TLS_GD"] = debug_elf.R_386_TLS_GD
//# OLD <{eR_386_TLS_GD}> 0
//# NEW <{eR_386_TLS_GD}> 1
//? Consts["/debug/elf/EM_RCE"] = debug_elf.EM_RCE
//# OLD <{eEM_RCE}> 0
//# NEW <{eEM_RCE}> 1
//? Consts["/debug/elf/SHT_DYNAMIC"] = debug_elf.SHT_DYNAMIC
//# OLD <{eSHT_DYNAMIC}> 0
//# NEW <{eSHT_DYNAMIC}> 1
//? Consts["/debug/elf/R_ARM_THM_RPC22"] = debug_elf.R_ARM_THM_RPC22
//# OLD <{eR_ARM_THM_RPC22}> 0
//# NEW <{eR_ARM_THM_RPC22}> 1
//? Consts["/debug/elf/R_ARM_SWI24"] = debug_elf.R_ARM_SWI24
//# OLD <{eR_ARM_SWI24}> 0
//# NEW <{eR_ARM_SWI24}> 1
//? Consts["/debug/elf/SHT_STRTAB"] = debug_elf.SHT_STRTAB
//# OLD <{eSHT_STRTAB}> 0
//# NEW <{eSHT_STRTAB}> 1
//? Consts["/debug/elf/R_SPARC_UA16"] = debug_elf.R_SPARC_UA16
//# OLD <{eR_SPARC_UA16}> 0
//# NEW <{eR_SPARC_UA16}> 1
Types["/debug/elf/R_X86_64"] = new(*debug_elf.R_X86_64)
//# OLD <{eR_X86_64}> 0
//# NEW <{eR_X86_64}> 1
//? Consts["/debug/elf/EM_MIPS_RS3_LE"] = debug_elf.EM_MIPS_RS3_LE
//# OLD <{eEM_MIPS_RS3_LE}> 0
//# NEW <{eEM_MIPS_RS3_LE}> 1
//? Consts["/debug/elf/R_PPC_TPREL16"] = debug_elf.R_PPC_TPREL16
//# OLD <{eR_PPC_TPREL16}> 0
//# NEW <{eR_PPC_TPREL16}> 1
//? Consts["/debug/elf/R_PPC_EMB_MRKREF"] = debug_elf.R_PPC_EMB_MRKREF
//# OLD <{eR_PPC_EMB_MRKREF}> 0
//# NEW <{eR_PPC_EMB_MRKREF}> 1
//? Consts["/debug/elf/EM_H8_300"] = debug_elf.EM_H8_300
//# OLD <{eEM_H8_300}> 0
//# NEW <{eEM_H8_300}> 1
//? Consts["/debug/elf/DT_SYMENT"] = debug_elf.DT_SYMENT
//# OLD <{eDT_SYMENT}> 0
//# NEW <{eDT_SYMENT}> 1
Types["/debug/elf/Version"] = new(*debug_elf.Version)
//# OLD <{eVersion}> 0
//# NEW <{eVersion}> 1
//? Consts["/debug/elf/R_PPC_EMB_NADDR16_HA"] = debug_elf.R_PPC_EMB_NADDR16_HA
//# OLD <{eR_PPC_EMB_NADDR16_HA}> 0
//# NEW <{eR_PPC_EMB_NADDR16_HA}> 1
//? Consts["/debug/elf/ELFOSABI_IRIX"] = debug_elf.ELFOSABI_IRIX
//# OLD <{eELFOSABI_IRIX}> 0
//# NEW <{eELFOSABI_IRIX}> 1
//? Consts["/debug/elf/ELFOSABI_OPENBSD"] = debug_elf.ELFOSABI_OPENBSD
//# OLD <{eELFOSABI_OPENBSD}> 0
//# NEW <{eELFOSABI_OPENBSD}> 1
//? Consts["/debug/elf/SHN_LORESERVE"] = debug_elf.SHN_LORESERVE
//# OLD <{eSHN_LORESERVE}> 0
//# NEW <{eSHN_LORESERVE}> 1
//? Consts["/debug/elf/EM_SPARC"] = debug_elf.EM_SPARC
//# OLD <{eEM_SPARC}> 0
//# NEW <{eEM_SPARC}> 1
Types["/debug/elf/Sym32"] = new(*debug_elf.Sym32)
//# OLD <{eSym32}> 0
//# NEW <{eSym32}> 1
//? Consts["/debug/elf/DT_PLTRELSZ"] = debug_elf.DT_PLTRELSZ
//# OLD <{eDT_PLTRELSZ}> 0
//# NEW <{eDT_PLTRELSZ}> 1
//? Consts["/debug/elf/R_ALPHA_JMP_SLOT"] = debug_elf.R_ALPHA_JMP_SLOT
//# OLD <{eR_ALPHA_JMP_SLOT}> 0
//# NEW <{eR_ALPHA_JMP_SLOT}> 1
//? Consts["/debug/elf/SHT_NOBITS"] = debug_elf.SHT_NOBITS
//# OLD <{eSHT_NOBITS}> 0
//# NEW <{eSHT_NOBITS}> 1
//? Consts["/debug/elf/DT_DEBUG"] = debug_elf.DT_DEBUG
//# OLD <{eDT_DEBUG}> 0
//# NEW <{eDT_DEBUG}> 1
//? Consts["/debug/elf/R_386_32"] = debug_elf.R_386_32
//# OLD <{eR_386_32}> 0
//# NEW <{eR_386_32}> 1
//? Consts["/debug/elf/STB_HIPROC"] = debug_elf.STB_HIPROC
//# OLD <{eSTB_HIPROC}> 0
//# NEW <{eSTB_HIPROC}> 1
//? Consts["/debug/elf/R_ARM_RREL32"] = debug_elf.R_ARM_RREL32
//# OLD <{eR_ARM_RREL32}> 0
//# NEW <{eR_ARM_RREL32}> 1
//? Consts["/debug/elf/R_PPC_COPY"] = debug_elf.R_PPC_COPY
//# OLD <{eR_PPC_COPY}> 0
//# NEW <{eR_PPC_COPY}> 1
Types["/debug/elf/Rela32"] = new(*debug_elf.Rela32)
//# OLD <{eRela32}> 0
//# NEW <{eRela32}> 1
//? Consts["/debug/elf/EM_NDR1"] = debug_elf.EM_NDR1
//# OLD <{eEM_NDR1}> 0
//# NEW <{eEM_NDR1}> 1
//? Consts["/debug/elf/R_SPARC_WDISP16"] = debug_elf.R_SPARC_WDISP16
//# OLD <{eR_SPARC_WDISP16}> 0
//# NEW <{eR_SPARC_WDISP16}> 1
//? Consts["/debug/elf/R_PPC_ADDR16_LO"] = debug_elf.R_PPC_ADDR16_LO
//# OLD <{eR_PPC_ADDR16_LO}> 0
//# NEW <{eR_PPC_ADDR16_LO}> 1
//? Consts["/debug/elf/R_SPARC_GLOB_DAT"] = debug_elf.R_SPARC_GLOB_DAT
//# OLD <{eR_SPARC_GLOB_DAT}> 0
//# NEW <{eR_SPARC_GLOB_DAT}> 1
//? Consts["/debug/elf/R_PPC_EMB_SDA21"] = debug_elf.R_PPC_EMB_SDA21
//# OLD <{eR_PPC_EMB_SDA21}> 0
//# NEW <{eR_PPC_EMB_SDA21}> 1
//? Consts["/debug/elf/R_PPC_EMB_SDA2I16"] = debug_elf.R_PPC_EMB_SDA2I16
//# OLD <{eR_PPC_EMB_SDA2I16}> 0
//# NEW <{eR_PPC_EMB_SDA2I16}> 1
//? Consts["/debug/elf/ELFOSABI_OPENVMS"] = debug_elf.ELFOSABI_OPENVMS
//# OLD <{eELFOSABI_OPENVMS}> 0
//# NEW <{eELFOSABI_OPENVMS}> 1
//? Consts["/debug/elf/Sym64Size"] = debug_elf.Sym64Size
//# OLD <{eSym64Size}> 0
//# NEW <{eSym64Size}> 1
//? Consts["/debug/elf/SHT_LOUSER"] = debug_elf.SHT_LOUSER
//# OLD <{eSHT_LOUSER}> 0
//# NEW <{eSHT_LOUSER}> 1
//? Consts["/debug/elf/DT_VERNEEDNUM"] = debug_elf.DT_VERNEEDNUM
//# OLD <{eDT_VERNEEDNUM}> 0
//# NEW <{eDT_VERNEEDNUM}> 1
Types["/debug/elf/Rela64"] = new(*debug_elf.Rela64)
//# OLD <{eRela64}> 0
//# NEW <{eRela64}> 1
Types["/debug/elf/Dyn32"] = new(*debug_elf.Dyn32)
//# OLD <{eDyn32}> 0
//# NEW <{eDyn32}> 1
//? Consts["/debug/elf/R_386_TLS_GD_PUSH"] = debug_elf.R_386_TLS_GD_PUSH
//# OLD <{eR_386_TLS_GD_PUSH}> 0
//# NEW <{eR_386_TLS_GD_PUSH}> 1
//? Consts["/debug/elf/R_ALPHA_HINT"] = debug_elf.R_ALPHA_HINT
//# OLD <{eR_ALPHA_HINT}> 0
//# NEW <{eR_ALPHA_HINT}> 1
//? Consts["/debug/elf/R_SPARC_PC_LM22"] = debug_elf.R_SPARC_PC_LM22
//# OLD <{eR_SPARC_PC_LM22}> 0
//# NEW <{eR_SPARC_PC_LM22}> 1
//? Consts["/debug/elf/DT_JMPREL"] = debug_elf.DT_JMPREL
//# OLD <{eDT_JMPREL}> 0
//# NEW <{eDT_JMPREL}> 1
//? Consts["/debug/elf/DT_ENCODING"] = debug_elf.DT_ENCODING
//# OLD <{eDT_ENCODING}> 0
//# NEW <{eDT_ENCODING}> 1
//? Consts["/debug/elf/SHT_GROUP"] = debug_elf.SHT_GROUP
//# OLD <{eSHT_GROUP}> 0
//# NEW <{eSHT_GROUP}> 1
//? Consts["/debug/elf/ELFOSABI_ARM"] = debug_elf.ELFOSABI_ARM
//# OLD <{eELFOSABI_ARM}> 0
//# NEW <{eELFOSABI_ARM}> 1
//? Consts["/debug/elf/R_SPARC_PCPLT32"] = debug_elf.R_SPARC_PCPLT32
//# OLD <{eR_SPARC_PCPLT32}> 0
//# NEW <{eR_SPARC_PCPLT32}> 1
//? Consts["/debug/elf/R_SPARC_OLO10"] = debug_elf.R_SPARC_OLO10
//# OLD <{eR_SPARC_OLO10}> 0
//# NEW <{eR_SPARC_OLO10}> 1
//? Consts["/debug/elf/R_ALPHA_GPRELLOW"] = debug_elf.R_ALPHA_GPRELLOW
//# OLD <{eR_ALPHA_GPRELLOW}> 0
//# NEW <{eR_ALPHA_GPRELLOW}> 1
//? Consts["/debug/elf/R_386_PC32"] = debug_elf.R_386_PC32
//# OLD <{eR_386_PC32}> 0
//# NEW <{eR_386_PC32}> 1
//? Consts["/debug/elf/R_386_TLS_LDM_CALL"] = debug_elf.R_386_TLS_LDM_CALL
//# OLD <{eR_386_TLS_LDM_CALL}> 0
//# NEW <{eR_386_TLS_LDM_CALL}> 1
//? Consts["/debug/elf/R_ARM_RABS32"] = debug_elf.R_ARM_RABS32
//# OLD <{eR_ARM_RABS32}> 0
//# NEW <{eR_ARM_RABS32}> 1
//? Consts["/debug/elf/R_386_TLS_DTPOFF32"] = debug_elf.R_386_TLS_DTPOFF32
//# OLD <{eR_386_TLS_DTPOFF32}> 0
//# NEW <{eR_386_TLS_DTPOFF32}> 1
//? Consts["/debug/elf/R_PPC_GOT_TLSGD16_HA"] = debug_elf.R_PPC_GOT_TLSGD16_HA
//# OLD <{eR_PPC_GOT_TLSGD16_HA}> 0
//# NEW <{eR_PPC_GOT_TLSGD16_HA}> 1
//? Consts["/debug/elf/SHF_OS_NONCONFORMING"] = debug_elf.SHF_OS_NONCONFORMING
//# OLD <{eSHF_OS_NONCONFORMING}> 0
//# NEW <{eSHF_OS_NONCONFORMING}> 1
//? Consts["/debug/elf/ELFDATA2MSB"] = debug_elf.ELFDATA2MSB
//# OLD <{eELFDATA2MSB}> 0
//# NEW <{eELFDATA2MSB}> 1
Funcs["/debug/elf/Open"] = debug_elf.Open
//# OLD <{eOpen}> 0
//# NEW <{eOpen}> 1
//? Consts["/debug/elf/EM_ALPHA_STD"] = debug_elf.EM_ALPHA_STD
//# OLD <{eEM_ALPHA_STD}> 0
//# NEW <{eEM_ALPHA_STD}> 1
//? Consts["/debug/elf/EM_386"] = debug_elf.EM_386
//# OLD <{eEM_386}> 0
//# NEW <{eEM_386}> 1
Types["/debug/elf/ProgType"] = new(*debug_elf.ProgType)
//# OLD <{eProgType}> 0
//# NEW <{eProgType}> 1
//? Consts["/debug/elf/DT_RELSZ"] = debug_elf.DT_RELSZ
//# OLD <{eDT_RELSZ}> 0
//# NEW <{eDT_RELSZ}> 1
//? Consts["/debug/elf/R_PPC_GOT_TLSGD16_HI"] = debug_elf.R_PPC_GOT_TLSGD16_HI
//# OLD <{eR_PPC_GOT_TLSGD16_HI}> 0
//# NEW <{eR_PPC_GOT_TLSGD16_HI}> 1
//? Consts["/debug/elf/R_ALPHA_SREL64"] = debug_elf.R_ALPHA_SREL64
//# OLD <{eR_ALPHA_SREL64}> 0
//# NEW <{eR_ALPHA_SREL64}> 1
//? Consts["/debug/elf/SHT_REL"] = debug_elf.SHT_REL
//# OLD <{eSHT_REL}> 0
//# NEW <{eSHT_REL}> 1
//? Consts["/debug/elf/R_X86_64_PC8"] = debug_elf.R_X86_64_PC8
//# OLD <{eR_X86_64_PC8}> 0
//# NEW <{eR_X86_64_PC8}> 1
//? Consts["/debug/elf/STT_LOOS"] = debug_elf.STT_LOOS
//# OLD <{eSTT_LOOS}> 0
//# NEW <{eSTT_LOOS}> 1
//? Consts["/debug/elf/R_X86_64_GOTPCREL"] = debug_elf.R_X86_64_GOTPCREL
//# OLD <{eR_X86_64_GOTPCREL}> 0
//# NEW <{eR_X86_64_GOTPCREL}> 1
//? Consts["/debug/elf/R_ALPHA_SREL32"] = debug_elf.R_ALPHA_SREL32
//# OLD <{eR_ALPHA_SREL32}> 0
//# NEW <{eR_ALPHA_SREL32}> 1
Funcs["/debug/elf/R_TYPE32"] = debug_elf.R_TYPE32
//# OLD <{eR_TYPE32}> 0
//# NEW <{eR_TYPE32}> 1
//? Consts["/debug/elf/R_ARM_RPC24"] = debug_elf.R_ARM_RPC24
//# OLD <{eR_ARM_RPC24}> 0
//# NEW <{eR_ARM_RPC24}> 1
//? Consts["/debug/elf/R_PPC_EMB_RELSEC16"] = debug_elf.R_PPC_EMB_RELSEC16
//# OLD <{eR_PPC_EMB_RELSEC16}> 0
//# NEW <{eR_PPC_EMB_RELSEC16}> 1
//? Consts["/debug/elf/SHF_MASKPROC"] = debug_elf.SHF_MASKPROC
//# OLD <{eSHF_MASKPROC}> 0
//# NEW <{eSHF_MASKPROC}> 1
//? Consts["/debug/elf/DT_NEEDED"] = debug_elf.DT_NEEDED
//# OLD <{eDT_NEEDED}> 0
//# NEW <{eDT_NEEDED}> 1
//? Consts["/debug/elf/R_PPC_PLTREL24"] = debug_elf.R_PPC_PLTREL24
//# OLD <{eR_PPC_PLTREL24}> 0
//# NEW <{eR_PPC_PLTREL24}> 1
//? Consts["/debug/elf/ET_LOPROC"] = debug_elf.ET_LOPROC
//# OLD <{eET_LOPROC}> 0
//# NEW <{eET_LOPROC}> 1
//? Consts["/debug/elf/R_ARM_REL32"] = debug_elf.R_ARM_REL32
//# OLD <{eR_ARM_REL32}> 0
//# NEW <{eR_ARM_REL32}> 1
//? Consts["/debug/elf/EM_MMA"] = debug_elf.EM_MMA
//# OLD <{eEM_MMA}> 0
//# NEW <{eEM_MMA}> 1
//? Consts["/debug/elf/DF_BIND_NOW"] = debug_elf.DF_BIND_NOW
//# OLD <{eDF_BIND_NOW}> 0
//# NEW <{eDF_BIND_NOW}> 1
//? Consts["/debug/elf/R_ARM_THM_PC22"] = debug_elf.R_ARM_THM_PC22
//# OLD <{eR_ARM_THM_PC22}> 0
//# NEW <{eR_ARM_THM_PC22}> 1
Types["/debug/elf/FileHeader"] = new(*debug_elf.FileHeader)
//# OLD <{eFileHeader}> 0
//# NEW <{eFileHeader}> 1
//? Consts["/debug/elf/R_386_COPY"] = debug_elf.R_386_COPY
//# OLD <{eR_386_COPY}> 0
//# NEW <{eR_386_COPY}> 1
//? Consts["/debug/elf/EI_VERSION"] = debug_elf.EI_VERSION
//# OLD <{eEI_VERSION}> 0
//# NEW <{eEI_VERSION}> 1
//? Consts["/debug/elf/SHF_LINK_ORDER"] = debug_elf.SHF_LINK_ORDER
//# OLD <{eSHF_LINK_ORDER}> 0
//# NEW <{eSHF_LINK_ORDER}> 1
//? Consts["/debug/elf/R_SPARC_PCPLT10"] = debug_elf.R_SPARC_PCPLT10
//# OLD <{eR_SPARC_PCPLT10}> 0
//# NEW <{eR_SPARC_PCPLT10}> 1
//? Consts["/debug/elf/R_SPARC_HM10"] = debug_elf.R_SPARC_HM10
//# OLD <{eR_SPARC_HM10}> 0
//# NEW <{eR_SPARC_HM10}> 1
Funcs["/debug/elf/ST_BIND"] = debug_elf.ST_BIND
//# OLD <{eST_BIND}> 0
//# NEW <{eST_BIND}> 1
//? Consts["/debug/elf/DF_ORIGIN"] = debug_elf.DF_ORIGIN
//# OLD <{eDF_ORIGIN}> 0
//# NEW <{eDF_ORIGIN}> 1
//? Consts["/debug/elf/R_PPC_ADDR14"] = debug_elf.R_PPC_ADDR14
//# OLD <{eR_PPC_ADDR14}> 0
//# NEW <{eR_PPC_ADDR14}> 1
Types["/debug/elf/Sym64"] = new(*debug_elf.Sym64)
//# OLD <{eSym64}> 0
//# NEW <{eSym64}> 1
//? Consts["/debug/elf/STT_TLS"] = debug_elf.STT_TLS
//# OLD <{eSTT_TLS}> 0
//# NEW <{eSTT_TLS}> 1
//? Consts["/debug/elf/R_SPARC_WPLT30"] = debug_elf.R_SPARC_WPLT30
//# OLD <{eR_SPARC_WPLT30}> 0
//# NEW <{eR_SPARC_WPLT30}> 1
//? Consts["/debug/elf/STT_NOTYPE"] = debug_elf.STT_NOTYPE
//# OLD <{eSTT_NOTYPE}> 0
//# NEW <{eSTT_NOTYPE}> 1
//? Consts["/debug/elf/R_PPC_UADDR32"] = debug_elf.R_PPC_UADDR32
//# OLD <{eR_PPC_UADDR32}> 0
//# NEW <{eR_PPC_UADDR32}> 1
//? Consts["/debug/elf/EV_NONE"] = debug_elf.EV_NONE
//# OLD <{eEV_NONE}> 0
//# NEW <{eEV_NONE}> 1
//? Consts["/debug/elf/EI_NIDENT"] = debug_elf.EI_NIDENT
//# OLD <{eEI_NIDENT}> 0
//# NEW <{eEI_NIDENT}> 1
//? Consts["/debug/elf/SHN_COMMON"] = debug_elf.SHN_COMMON
//# OLD <{eSHN_COMMON}> 0
//# NEW <{eSHN_COMMON}> 1
//? Consts["/debug/elf/ET_HIOS"] = debug_elf.ET_HIOS
//# OLD <{eET_HIOS}> 0
//# NEW <{eET_HIOS}> 1
//? Consts["/debug/elf/DT_RELAENT"] = debug_elf.DT_RELAENT
//# OLD <{eDT_RELAENT}> 0
//# NEW <{eDT_RELAENT}> 1
//? Consts["/debug/elf/R_SPARC_LOX10"] = debug_elf.R_SPARC_LOX10
//# OLD <{eR_SPARC_LOX10}> 0
//# NEW <{eR_SPARC_LOX10}> 1
//? Consts["/debug/elf/R_ARM_GNU_VTINHERIT"] = debug_elf.R_ARM_GNU_VTINHERIT
//# OLD <{eR_ARM_GNU_VTINHERIT}> 0
//# NEW <{eR_ARM_GNU_VTINHERIT}> 1
//? Consts["/debug/elf/PT_SHLIB"] = debug_elf.PT_SHLIB
//# OLD <{ePT_SHLIB}> 0
//# NEW <{ePT_SHLIB}> 1
//? Consts["/debug/elf/R_ALPHA_GPREL32"] = debug_elf.R_ALPHA_GPREL32
//# OLD <{eR_ALPHA_GPREL32}> 0
//# NEW <{eR_ALPHA_GPREL32}> 1
Types["/debug/elf/SymVis"] = new(*debug_elf.SymVis)
//# OLD <{eSymVis}> 0
//# NEW <{eSymVis}> 1
//? Consts["/debug/elf/R_PPC_DTPREL16"] = debug_elf.R_PPC_DTPREL16
//# OLD <{eR_PPC_DTPREL16}> 0
//# NEW <{eR_PPC_DTPREL16}> 1
//? Consts["/debug/elf/R_SPARC_PCPLT22"] = debug_elf.R_SPARC_PCPLT22
//# OLD <{eR_SPARC_PCPLT22}> 0
//# NEW <{eR_SPARC_PCPLT22}> 1
//? Consts["/debug/elf/EM_H8S"] = debug_elf.EM_H8S
//# OLD <{eEM_H8S}> 0
//# NEW <{eEM_H8S}> 1
//? Consts["/debug/elf/R_SPARC_10"] = debug_elf.R_SPARC_10
//# OLD <{eR_SPARC_10}> 0
//# NEW <{eR_SPARC_10}> 1
//? Consts["/debug/elf/STB_LOOS"] = debug_elf.STB_LOOS
//# OLD <{eSTB_LOOS}> 0
//# NEW <{eSTB_LOOS}> 1
Types["/debug/elf/DynFlag"] = new(*debug_elf.DynFlag)
//# OLD <{eDynFlag}> 0
//# NEW <{eDynFlag}> 1
//? Consts["/debug/elf/R_SPARC_NONE"] = debug_elf.R_SPARC_NONE
//# OLD <{eR_SPARC_NONE}> 0
//# NEW <{eR_SPARC_NONE}> 1
//? Consts["/debug/elf/R_ALPHA_OP_PRSHIFT"] = debug_elf.R_ALPHA_OP_PRSHIFT
//# OLD <{eR_ALPHA_OP_PRSHIFT}> 0
//# NEW <{eR_ALPHA_OP_PRSHIFT}> 1
//? Consts["/debug/elf/DT_INIT"] = debug_elf.DT_INIT
//# OLD <{eDT_INIT}> 0
//# NEW <{eDT_INIT}> 1
//? Consts["/debug/elf/R_386_TLS_LDO_32"] = debug_elf.R_386_TLS_LDO_32
//# OLD <{eR_386_TLS_LDO_32}> 0
//# NEW <{eR_386_TLS_LDO_32}> 1
Types["/debug/elf/Machine"] = new(*debug_elf.Machine)
//# OLD <{eMachine}> 0
//# NEW <{eMachine}> 1
//? Consts["/debug/elf/SHN_XINDEX"] = debug_elf.SHN_XINDEX
//# OLD <{eSHN_XINDEX}> 0
//# NEW <{eSHN_XINDEX}> 1
Types["/debug/elf/Rel32"] = new(*debug_elf.Rel32)
//# OLD <{eRel32}> 0
//# NEW <{eRel32}> 1
//? Consts["/debug/elf/DT_VERNEED"] = debug_elf.DT_VERNEED
//# OLD <{eDT_VERNEED}> 0
//# NEW <{eDT_VERNEED}> 1
//? Consts["/debug/elf/R_PPC_LOCAL24PC"] = debug_elf.R_PPC_LOCAL24PC
//# OLD <{eR_PPC_LOCAL24PC}> 0
//# NEW <{eR_PPC_LOCAL24PC}> 1
//? Consts["/debug/elf/EM_PCP"] = debug_elf.EM_PCP
//# OLD <{eEM_PCP}> 0
//# NEW <{eEM_PCP}> 1
//? Consts["/debug/elf/R_PPC_ADDR24"] = debug_elf.R_PPC_ADDR24
//# OLD <{eR_PPC_ADDR24}> 0
//# NEW <{eR_PPC_ADDR24}> 1
//? Consts["/debug/elf/R_ARM_PC13"] = debug_elf.R_ARM_PC13
//# OLD <{eR_ARM_PC13}> 0
//# NEW <{eR_ARM_PC13}> 1
//? Consts["/debug/elf/R_SPARC_PC_HM10"] = debug_elf.R_SPARC_PC_HM10
//# OLD <{eR_SPARC_PC_HM10}> 0
//# NEW <{eR_SPARC_PC_HM10}> 1
//? Consts["/debug/elf/R_ARM_ABS8"] = debug_elf.R_ARM_ABS8
//# OLD <{eR_ARM_ABS8}> 0
//# NEW <{eR_ARM_ABS8}> 1
//? Consts["/debug/elf/R_PPC_GOT16_LO"] = debug_elf.R_PPC_GOT16_LO
//# OLD <{eR_PPC_GOT16_LO}> 0
//# NEW <{eR_PPC_GOT16_LO}> 1
//? Consts["/debug/elf/R_386_TLS_LDM"] = debug_elf.R_386_TLS_LDM
//# OLD <{eR_386_TLS_LDM}> 0
//# NEW <{eR_386_TLS_LDM}> 1
//? Consts["/debug/elf/R_PPC_ADDR16"] = debug_elf.R_PPC_ADDR16
//# OLD <{eR_PPC_ADDR16}> 0
//# NEW <{eR_PPC_ADDR16}> 1
//? Consts["/debug/elf/DF_TEXTREL"] = debug_elf.DF_TEXTREL
//# OLD <{eDF_TEXTREL}> 0
//# NEW <{eDF_TEXTREL}> 1
//? Consts["/debug/elf/STV_INTERNAL"] = debug_elf.STV_INTERNAL
//# OLD <{eSTV_INTERNAL}> 0
//# NEW <{eSTV_INTERNAL}> 1
Funcs["/debug/elf/R_SYM64"] = debug_elf.R_SYM64
//# OLD <{eR_SYM64}> 0
//# NEW <{eR_SYM64}> 1
//? Consts["/debug/elf/R_PPC_REL24"] = debug_elf.R_PPC_REL24
//# OLD <{eR_PPC_REL24}> 0
//# NEW <{eR_PPC_REL24}> 1
//? Consts["/debug/elf/R_PPC_REL14_BRTAKEN"] = debug_elf.R_PPC_REL14_BRTAKEN
//# OLD <{eR_PPC_REL14_BRTAKEN}> 0
//# NEW <{eR_PPC_REL14_BRTAKEN}> 1
//? Consts["/debug/elf/R_PPC_SECTOFF_HI"] = debug_elf.R_PPC_SECTOFF_HI
//# OLD <{eR_PPC_SECTOFF_HI}> 0
//# NEW <{eR_PPC_SECTOFF_HI}> 1
//? Consts["/debug/elf/R_ARM_THM_PC8"] = debug_elf.R_ARM_THM_PC8
//# OLD <{eR_ARM_THM_PC8}> 0
//# NEW <{eR_ARM_THM_PC8}> 1
//? Consts["/debug/elf/R_X86_64_TLSGD"] = debug_elf.R_X86_64_TLSGD
//# OLD <{eR_X86_64_TLSGD}> 0
//# NEW <{eR_X86_64_TLSGD}> 1
//? Consts["/debug/elf/R_PPC_DTPREL16_LO"] = debug_elf.R_PPC_DTPREL16_LO
//# OLD <{eR_PPC_DTPREL16_LO}> 0
//# NEW <{eR_PPC_DTPREL16_LO}> 1
//? Consts["/debug/elf/R_PPC_PLT16_HI"] = debug_elf.R_PPC_PLT16_HI
//# OLD <{eR_PPC_PLT16_HI}> 0
//# NEW <{eR_PPC_PLT16_HI}> 1
//? Consts["/debug/elf/R_PPC_PLT16_HA"] = debug_elf.R_PPC_PLT16_HA
//# OLD <{eR_PPC_PLT16_HA}> 0
//# NEW <{eR_PPC_PLT16_HA}> 1
//? Consts["/debug/elf/ELFDATANONE"] = debug_elf.ELFDATANONE
//# OLD <{eELFDATANONE}> 0
//# NEW <{eELFDATANONE}> 1
//? Consts["/debug/elf/R_SPARC_H44"] = debug_elf.R_SPARC_H44
//# OLD <{eR_SPARC_H44}> 0
//# NEW <{eR_SPARC_H44}> 1
//? Consts["/debug/elf/R_386_TLS_GD_CALL"] = debug_elf.R_386_TLS_GD_CALL
//# OLD <{eR_386_TLS_GD_CALL}> 0
//# NEW <{eR_386_TLS_GD_CALL}> 1
Types["/debug/elf/Data"] = new(*debug_elf.Data)
//# OLD <{eData}> 0
//# NEW <{eData}> 1
//? Consts["/debug/elf/R_ALPHA_IMMED_GP_HI32"] = debug_elf.R_ALPHA_IMMED_GP_HI32
//# OLD <{eR_ALPHA_IMMED_GP_HI32}> 0
//# NEW <{eR_ALPHA_IMMED_GP_HI32}> 1
//? Consts["/debug/elf/PT_HIOS"] = debug_elf.PT_HIOS
//# OLD <{ePT_HIOS}> 0
//# NEW <{ePT_HIOS}> 1
//? Consts["/debug/elf/EM_MIPS_X"] = debug_elf.EM_MIPS_X
//# OLD <{eEM_MIPS_X}> 0
//# NEW <{eEM_MIPS_X}> 1
//? Consts["/debug/elf/R_PPC_UADDR16"] = debug_elf.R_PPC_UADDR16
//# OLD <{eR_PPC_UADDR16}> 0
//# NEW <{eR_PPC_UADDR16}> 1
//? Consts["/debug/elf/R_PPC_SDAREL16"] = debug_elf.R_PPC_SDAREL16
//# OLD <{eR_PPC_SDAREL16}> 0
//# NEW <{eR_PPC_SDAREL16}> 1
//? Consts["/debug/elf/R_PPC_GOT_TLSLD16_LO"] = debug_elf.R_PPC_GOT_TLSLD16_LO
//# OLD <{eR_PPC_GOT_TLSLD16_LO}> 0
//# NEW <{eR_PPC_GOT_TLSLD16_LO}> 1
//? Consts["/debug/elf/R_X86_64_GOT32"] = debug_elf.R_X86_64_GOT32
//# OLD <{eR_X86_64_GOT32}> 0
//# NEW <{eR_X86_64_GOT32}> 1
//? Consts["/debug/elf/R_X86_64_RELATIVE"] = debug_elf.R_X86_64_RELATIVE
//# OLD <{eR_X86_64_RELATIVE}> 0
//# NEW <{eR_X86_64_RELATIVE}> 1
//? Consts["/debug/elf/DT_INIT_ARRAYSZ"] = debug_elf.DT_INIT_ARRAYSZ
//# OLD <{eDT_INIT_ARRAYSZ}> 0
//# NEW <{eDT_INIT_ARRAYSZ}> 1
//? Consts["/debug/elf/EM_ST100"] = debug_elf.EM_ST100
//# OLD <{eEM_ST100}> 0
//# NEW <{eEM_ST100}> 1
Types["/debug/elf/SectionIndex"] = new(*debug_elf.SectionIndex)
//# OLD <{eSectionIndex}> 0
//# NEW <{eSectionIndex}> 1
//? Consts["/debug/elf/EI_DATA"] = debug_elf.EI_DATA
//# OLD <{eEI_DATA}> 0
//# NEW <{eEI_DATA}> 1
//? Consts["/debug/elf/R_PPC_REL14"] = debug_elf.R_PPC_REL14
//# OLD <{eR_PPC_REL14}> 0
//# NEW <{eR_PPC_REL14}> 1
//? Consts["/debug/elf/R_SPARC_64"] = debug_elf.R_SPARC_64
//# OLD <{eR_SPARC_64}> 0
//# NEW <{eR_SPARC_64}> 1
//? Consts["/debug/elf/SHF_MERGE"] = debug_elf.SHF_MERGE
//# OLD <{eSHF_MERGE}> 0
//# NEW <{eSHF_MERGE}> 1
//? Consts["/debug/elf/R_PPC_GOT_TLSLD16_HI"] = debug_elf.R_PPC_GOT_TLSLD16_HI
//# OLD <{eR_PPC_GOT_TLSLD16_HI}> 0
//# NEW <{eR_PPC_GOT_TLSLD16_HI}> 1
//? Consts["/debug/elf/R_X86_64_COPY"] = debug_elf.R_X86_64_COPY
//# OLD <{eR_X86_64_COPY}> 0
//# NEW <{eR_X86_64_COPY}> 1
//? Consts["/debug/elf/EM_ARC"] = debug_elf.EM_ARC
//# OLD <{eEM_ARC}> 0
//# NEW <{eEM_ARC}> 1
//? Consts["/debug/elf/EM_960"] = debug_elf.EM_960
//# OLD <{eEM_960}> 0
//# NEW <{eEM_960}> 1
//? Consts["/debug/elf/SHN_UNDEF"] = debug_elf.SHN_UNDEF
//# OLD <{eSHN_UNDEF}> 0
//# NEW <{eSHN_UNDEF}> 1
//? Consts["/debug/elf/EM_SH"] = debug_elf.EM_SH
//# OLD <{eEM_SH}> 0
//# NEW <{eEM_SH}> 1
//? Consts["/debug/elf/SHF_EXECINSTR"] = debug_elf.SHF_EXECINSTR
//# OLD <{eSHF_EXECINSTR}> 0
//# NEW <{eSHF_EXECINSTR}> 1
//? Consts["/debug/elf/DT_FINI_ARRAYSZ"] = debug_elf.DT_FINI_ARRAYSZ
//# OLD <{eDT_FINI_ARRAYSZ}> 0
//# NEW <{eDT_FINI_ARRAYSZ}> 1
//? Consts["/debug/elf/SHT_HIOS"] = debug_elf.SHT_HIOS
//# OLD <{eSHT_HIOS}> 0
//# NEW <{eSHT_HIOS}> 1
//? Consts["/debug/elf/R_SPARC_WDISP19"] = debug_elf.R_SPARC_WDISP19
//# OLD <{eR_SPARC_WDISP19}> 0
//# NEW <{eR_SPARC_WDISP19}> 1
//? Consts["/debug/elf/STV_PROTECTED"] = debug_elf.STV_PROTECTED
//# OLD <{eSTV_PROTECTED}> 0
//# NEW <{eSTV_PROTECTED}> 1
//? Consts["/debug/elf/R_ALPHA_RELATIVE"] = debug_elf.R_ALPHA_RELATIVE
//# OLD <{eR_ALPHA_RELATIVE}> 0
//# NEW <{eR_ALPHA_RELATIVE}> 1
//? Consts["/debug/elf/DT_PREINIT_ARRAY"] = debug_elf.DT_PREINIT_ARRAY
//# OLD <{eDT_PREINIT_ARRAY}> 0
//# NEW <{eDT_PREINIT_ARRAY}> 1
Types["/debug/elf/Prog64"] = new(*debug_elf.Prog64)
//# OLD <{eProg64}> 0
//# NEW <{eProg64}> 1
//? Consts["/debug/elf/DF_STATIC_TLS"] = debug_elf.DF_STATIC_TLS
//# OLD <{eDF_STATIC_TLS}> 0
//# NEW <{eDF_STATIC_TLS}> 1
//? Consts["/debug/elf/ET_NONE"] = debug_elf.ET_NONE
//# OLD <{eET_NONE}> 0
//# NEW <{eET_NONE}> 1
//? Consts["/debug/elf/R_PPC_GOT_TLSLD16"] = debug_elf.R_PPC_GOT_TLSLD16
//# OLD <{eR_PPC_GOT_TLSLD16}> 0
//# NEW <{eR_PPC_GOT_TLSLD16}> 1
//? Consts["/debug/elf/ET_HIPROC"] = debug_elf.ET_HIPROC
//# OLD <{eET_HIPROC}> 0
//# NEW <{eET_HIPROC}> 1
//? Consts["/debug/elf/R_SPARC_LOPLT10"] = debug_elf.R_SPARC_LOPLT10
//# OLD <{eR_SPARC_LOPLT10}> 0
//# NEW <{eR_SPARC_LOPLT10}> 1
//? Consts["/debug/elf/DT_HASH"] = debug_elf.DT_HASH
//# OLD <{eDT_HASH}> 0
//# NEW <{eDT_HASH}> 1
//? Consts["/debug/elf/R_X86_64_64"] = debug_elf.R_X86_64_64
//# OLD <{eR_X86_64_64}> 0
//# NEW <{eR_X86_64_64}> 1
//? Consts["/debug/elf/SHT_LOOS"] = debug_elf.SHT_LOOS
//# OLD <{eSHT_LOOS}> 0
//# NEW <{eSHT_LOOS}> 1
//? Consts["/debug/elf/EM_SPARC32PLUS"] = debug_elf.EM_SPARC32PLUS
//# OLD <{eEM_SPARC32PLUS}> 0
//# NEW <{eEM_SPARC32PLUS}> 1
//? Consts["/debug/elf/ELFOSABI_FREEBSD"] = debug_elf.ELFOSABI_FREEBSD
//# OLD <{eELFOSABI_FREEBSD}> 0
//# NEW <{eELFOSABI_FREEBSD}> 1
Funcs["/debug/elf/R_TYPE64"] = debug_elf.R_TYPE64
//# OLD <{eR_TYPE64}> 0
//# NEW <{eR_TYPE64}> 1
//? Consts["/debug/elf/R_386_TLS_TPOFF"] = debug_elf.R_386_TLS_TPOFF
//# OLD <{eR_386_TLS_TPOFF}> 0
//# NEW <{eR_386_TLS_TPOFF}> 1
//? Consts["/debug/elf/R_SPARC_HIX22"] = debug_elf.R_SPARC_HIX22
//# OLD <{eR_SPARC_HIX22}> 0
//# NEW <{eR_SPARC_HIX22}> 1
//? Consts["/debug/elf/EM_H8_300H"] = debug_elf.EM_H8_300H
//# OLD <{eEM_H8_300H}> 0
//# NEW <{eEM_H8_300H}> 1
//? Consts["/debug/elf/SHF_MASKOS"] = debug_elf.SHF_MASKOS
//# OLD <{eSHF_MASKOS}> 0
//# NEW <{eSHF_MASKOS}> 1
//? Consts["/debug/elf/R_SPARC_DISP32"] = debug_elf.R_SPARC_DISP32
//# OLD <{eR_SPARC_DISP32}> 0
//# NEW <{eR_SPARC_DISP32}> 1
//? Consts["/debug/elf/EM_NONE"] = debug_elf.EM_NONE
//# OLD <{eEM_NONE}> 0
//# NEW <{eEM_NONE}> 1
Types["/debug/elf/NType"] = new(*debug_elf.NType)
//# OLD <{eNType}> 0
//# NEW <{eNType}> 1
//? Consts["/debug/elf/SHT_FINI_ARRAY"] = debug_elf.SHT_FINI_ARRAY
//# OLD <{eSHT_FINI_ARRAY}> 0
//# NEW <{eSHT_FINI_ARRAY}> 1
//? Consts["/debug/elf/DT_TEXTREL"] = debug_elf.DT_TEXTREL
//# OLD <{eDT_TEXTREL}> 0
//# NEW <{eDT_TEXTREL}> 1
//? Consts["/debug/elf/R_SPARC_M44"] = debug_elf.R_SPARC_M44
//# OLD <{eR_SPARC_M44}> 0
//# NEW <{eR_SPARC_M44}> 1
//? Consts["/debug/elf/R_386_RELATIVE"] = debug_elf.R_386_RELATIVE
//# OLD <{eR_386_RELATIVE}> 0
//# NEW <{eR_386_RELATIVE}> 1
//? Consts["/debug/elf/R_SPARC_7"] = debug_elf.R_SPARC_7
//# OLD <{eR_SPARC_7}> 0
//# NEW <{eR_SPARC_7}> 1
//? Consts["/debug/elf/DF_SYMBOLIC"] = debug_elf.DF_SYMBOLIC
//# OLD <{eDF_SYMBOLIC}> 0
//# NEW <{eDF_SYMBOLIC}> 1
Funcs["/debug/elf/R_INFO"] = debug_elf.R_INFO
//# OLD <{eR_INFO}> 0
//# NEW <{eR_INFO}> 1
//? Consts["/debug/elf/ELFOSABI_HURD"] = debug_elf.ELFOSABI_HURD
//# OLD <{eELFOSABI_HURD}> 0
//# NEW <{eELFOSABI_HURD}> 1
//? Consts["/debug/elf/EM_COLDFIRE"] = debug_elf.EM_COLDFIRE
//# OLD <{eEM_COLDFIRE}> 0
//# NEW <{eEM_COLDFIRE}> 1
//? Consts["/debug/elf/R_ALPHA_LITUSE"] = debug_elf.R_ALPHA_LITUSE
//# OLD <{eR_ALPHA_LITUSE}> 0
//# NEW <{eR_ALPHA_LITUSE}> 1
//? Consts["/debug/elf/R_ALPHA_OP_STORE"] = debug_elf.R_ALPHA_OP_STORE
//# OLD <{eR_ALPHA_OP_STORE}> 0
//# NEW <{eR_ALPHA_OP_STORE}> 1
//? Consts["/debug/elf/DT_RELENT"] = debug_elf.DT_RELENT
//# OLD <{eDT_RELENT}> 0
//# NEW <{eDT_RELENT}> 1
//? Consts["/debug/elf/R_X86_64_DTPOFF32"] = debug_elf.R_X86_64_DTPOFF32
//# OLD <{eR_X86_64_DTPOFF32}> 0
//# NEW <{eR_X86_64_DTPOFF32}> 1
//? Consts["/debug/elf/PF_X"] = debug_elf.PF_X
//# OLD <{ePF_X}> 0
//# NEW <{ePF_X}> 1
Funcs["/debug/elf/R_INFO32"] = debug_elf.R_INFO32
//# OLD <{eR_INFO32}> 0
//# NEW <{eR_INFO32}> 1
//? Consts["/debug/elf/R_X86_64_GOTTPOFF"] = debug_elf.R_X86_64_GOTTPOFF
//# OLD <{eR_X86_64_GOTTPOFF}> 0
//# NEW <{eR_X86_64_GOTTPOFF}> 1
//? Consts["/debug/elf/STB_WEAK"] = debug_elf.STB_WEAK
//# OLD <{eSTB_WEAK}> 0
//# NEW <{eSTB_WEAK}> 1
//? Consts["/debug/elf/STT_FILE"] = debug_elf.STT_FILE
//# OLD <{eSTT_FILE}> 0
//# NEW <{eSTT_FILE}> 1
//? Consts["/debug/elf/DT_RELASZ"] = debug_elf.DT_RELASZ
//# OLD <{eDT_RELASZ}> 0
//# NEW <{eDT_RELASZ}> 1
//? Consts["/debug/elf/R_PPC_EMB_BIT_FLD"] = debug_elf.R_PPC_EMB_BIT_FLD
//# OLD <{eR_PPC_EMB_BIT_FLD}> 0
//# NEW <{eR_PPC_EMB_BIT_FLD}> 1
//? Consts["/debug/elf/EM_MIPS"] = debug_elf.EM_MIPS
//# OLD <{eEM_MIPS}> 0
//# NEW <{eEM_MIPS}> 1
//? Consts["/debug/elf/R_PPC_GOT_TLSLD16_HA"] = debug_elf.R_PPC_GOT_TLSLD16_HA
//# OLD <{eR_PPC_GOT_TLSLD16_HA}> 0
//# NEW <{eR_PPC_GOT_TLSLD16_HA}> 1
//? Consts["/debug/elf/R_SPARC_COPY"] = debug_elf.R_SPARC_COPY
//# OLD <{eR_SPARC_COPY}> 0
//# NEW <{eR_SPARC_COPY}> 1
Funcs["/debug/elf/R_SYM32"] = debug_elf.R_SYM32
//# OLD <{eR_SYM32}> 0
//# NEW <{eR_SYM32}> 1
//? Consts["/debug/elf/R_SPARC_PC10"] = debug_elf.R_SPARC_PC10
//# OLD <{eR_SPARC_PC10}> 0
//# NEW <{eR_SPARC_PC10}> 1
//? Consts["/debug/elf/R_PPC_TPREL16_HI"] = debug_elf.R_PPC_TPREL16_HI
//# OLD <{eR_PPC_TPREL16_HI}> 0
//# NEW <{eR_PPC_TPREL16_HI}> 1
//? Consts["/debug/elf/R_SPARC_PC22"] = debug_elf.R_SPARC_PC22
//# OLD <{eR_SPARC_PC22}> 0
//# NEW <{eR_SPARC_PC22}> 1
//? Consts["/debug/elf/R_SPARC_WDISP30"] = debug_elf.R_SPARC_WDISP30
//# OLD <{eR_SPARC_WDISP30}> 0
//# NEW <{eR_SPARC_WDISP30}> 1
//? Consts["/debug/elf/R_ALPHA_COPY"] = debug_elf.R_ALPHA_COPY
//# OLD <{eR_ALPHA_COPY}> 0
//# NEW <{eR_ALPHA_COPY}> 1
//? Consts["/debug/elf/ET_EXEC"] = debug_elf.ET_EXEC
//# OLD <{eET_EXEC}> 0
//# NEW <{eET_EXEC}> 1
//? Consts["/debug/elf/EM_IA_64"] = debug_elf.EM_IA_64
//# OLD <{eEM_IA_64}> 0
//# NEW <{eEM_IA_64}> 1
//? Consts["/debug/elf/R_SPARC_HH22"] = debug_elf.R_SPARC_HH22
//# OLD <{eR_SPARC_HH22}> 0
//# NEW <{eR_SPARC_HH22}> 1
Types["/debug/elf/R_ALPHA"] = new(*debug_elf.R_ALPHA)
//# OLD <{eR_ALPHA}> 0
//# NEW <{eR_ALPHA}> 1
Types["/debug/elf/Prog32"] = new(*debug_elf.Prog32)
//# OLD <{eProg32}> 0
//# NEW <{eProg32}> 1
//? Consts["/debug/elf/R_386_PLT32"] = debug_elf.R_386_PLT32
//# OLD <{eR_386_PLT32}> 0
//# NEW <{eR_386_PLT32}> 1
//? Consts["/debug/elf/ELFOSABI_SOLARIS"] = debug_elf.ELFOSABI_SOLARIS
//# OLD <{eELFOSABI_SOLARIS}> 0
//# NEW <{eELFOSABI_SOLARIS}> 1
//? Consts["/debug/elf/R_386_TLS_LDM_POP"] = debug_elf.R_386_TLS_LDM_POP
//# OLD <{eR_386_TLS_LDM_POP}> 0
//# NEW <{eR_386_TLS_LDM_POP}> 1
//? Consts["/debug/elf/R_ALPHA_NONE"] = debug_elf.R_ALPHA_NONE
//# OLD <{eR_ALPHA_NONE}> 0
//# NEW <{eR_ALPHA_NONE}> 1
//? Consts["/debug/elf/R_ARM_XPC25"] = debug_elf.R_ARM_XPC25
//# OLD <{eR_ARM_XPC25}> 0
//# NEW <{eR_ARM_XPC25}> 1
//? Consts["/debug/elf/PF_MASKPROC"] = debug_elf.PF_MASKPROC
//# OLD <{ePF_MASKPROC}> 0
//# NEW <{ePF_MASKPROC}> 1
//? Consts["/debug/elf/R_SPARC_13"] = debug_elf.R_SPARC_13
//# OLD <{eR_SPARC_13}> 0
//# NEW <{eR_SPARC_13}> 1
//? Consts["/debug/elf/STT_COMMON"] = debug_elf.STT_COMMON
//# OLD <{eSTT_COMMON}> 0
//# NEW <{eSTT_COMMON}> 1
Types["/debug/elf/Type"] = new(*debug_elf.Type)
//# OLD <{eType}> 0
//# NEW <{eType}> 1
//? Consts["/debug/elf/R_SPARC_GLOB_JMP"] = debug_elf.R_SPARC_GLOB_JMP
//# OLD <{eR_SPARC_GLOB_JMP}> 0
//# NEW <{eR_SPARC_GLOB_JMP}> 1
//? Consts["/debug/elf/SHF_GROUP"] = debug_elf.SHF_GROUP
//# OLD <{eSHF_GROUP}> 0
//# NEW <{eSHF_GROUP}> 1
//? Consts["/debug/elf/SHT_INIT_ARRAY"] = debug_elf.SHT_INIT_ARRAY
//# OLD <{eSHT_INIT_ARRAY}> 0
//# NEW <{eSHT_INIT_ARRAY}> 1
//? Consts["/debug/elf/DT_INIT_ARRAY"] = debug_elf.DT_INIT_ARRAY
//# OLD <{eDT_INIT_ARRAY}> 0
//# NEW <{eDT_INIT_ARRAY}> 1
//? Consts["/debug/elf/R_SPARC_L44"] = debug_elf.R_SPARC_L44
//# OLD <{eR_SPARC_L44}> 0
//# NEW <{eR_SPARC_L44}> 1
Types["/debug/elf/Header64"] = new(*debug_elf.Header64)
//# OLD <{eHeader64}> 0
//# NEW <{eHeader64}> 1
//? Consts["/debug/elf/R_X86_64_GLOB_DAT"] = debug_elf.R_X86_64_GLOB_DAT
//# OLD <{eR_X86_64_GLOB_DAT}> 0
//# NEW <{eR_X86_64_GLOB_DAT}> 1
//? Consts["/debug/elf/R_PPC_GOT_TLSGD16"] = debug_elf.R_PPC_GOT_TLSGD16
//# OLD <{eR_PPC_GOT_TLSGD16}> 0
//# NEW <{eR_PPC_GOT_TLSGD16}> 1
//? Consts["/debug/elf/R_ALPHA_LITERAL"] = debug_elf.R_ALPHA_LITERAL
//# OLD <{eR_ALPHA_LITERAL}> 0
//# NEW <{eR_ALPHA_LITERAL}> 1
//? Consts["/debug/elf/R_X86_64_16"] = debug_elf.R_X86_64_16
//# OLD <{eR_X86_64_16}> 0
//# NEW <{eR_X86_64_16}> 1
//? Consts["/debug/elf/PT_HIPROC"] = debug_elf.PT_HIPROC
//# OLD <{ePT_HIPROC}> 0
//# NEW <{ePT_HIPROC}> 1
//? Consts["/debug/elf/DT_FINI_ARRAY"] = debug_elf.DT_FINI_ARRAY
//# OLD <{eDT_FINI_ARRAY}> 0
//# NEW <{eDT_FINI_ARRAY}> 1
//? Consts["/debug/elf/R_386_GOT32"] = debug_elf.R_386_GOT32
//# OLD <{eR_386_GOT32}> 0
//# NEW <{eR_386_GOT32}> 1
//? Consts["/debug/elf/STV_HIDDEN"] = debug_elf.STV_HIDDEN
//# OLD <{eSTV_HIDDEN}> 0
//# NEW <{eSTV_HIDDEN}> 1
//? Consts["/debug/elf/R_PPC_ADDR32"] = debug_elf.R_PPC_ADDR32
//# OLD <{eR_PPC_ADDR32}> 0
//# NEW <{eR_PPC_ADDR32}> 1
//? Consts["/debug/elf/DT_SYMBOLIC"] = debug_elf.DT_SYMBOLIC
//# OLD <{eDT_SYMBOLIC}> 0
//# NEW <{eDT_SYMBOLIC}> 1
//? Consts["/debug/elf/ELFCLASSNONE"] = debug_elf.ELFCLASSNONE
//# OLD <{eELFCLASSNONE}> 0
//# NEW <{eELFCLASSNONE}> 1
//? Consts["/debug/elf/ELFCLASS64"] = debug_elf.ELFCLASS64
//# OLD <{eELFCLASS64}> 0
//# NEW <{eELFCLASS64}> 1
//? Consts["/debug/elf/ELFOSABI_NETBSD"] = debug_elf.ELFOSABI_NETBSD
//# OLD <{eELFOSABI_NETBSD}> 0
//# NEW <{eELFOSABI_NETBSD}> 1
//? Consts["/debug/elf/R_ALPHA_IMMED_LO32"] = debug_elf.R_ALPHA_IMMED_LO32
//# OLD <{eR_ALPHA_IMMED_LO32}> 0
//# NEW <{eR_ALPHA_IMMED_LO32}> 1
//? Consts["/debug/elf/R_PPC_SECTOFF_LO"] = debug_elf.R_PPC_SECTOFF_LO
//# OLD <{eR_PPC_SECTOFF_LO}> 0
//# NEW <{eR_PPC_SECTOFF_LO}> 1
//? Consts["/debug/elf/R_PPC_EMB_NADDR16_LO"] = debug_elf.R_PPC_EMB_NADDR16_LO
//# OLD <{eR_PPC_EMB_NADDR16_LO}> 0
//# NEW <{eR_PPC_EMB_NADDR16_LO}> 1
//? Consts["/debug/elf/PT_NULL"] = debug_elf.PT_NULL
//# OLD <{ePT_NULL}> 0
//# NEW <{ePT_NULL}> 1
//? Consts["/debug/elf/ELFOSABI_86OPEN"] = debug_elf.ELFOSABI_86OPEN
//# OLD <{eELFOSABI_86OPEN}> 0
//# NEW <{eELFOSABI_86OPEN}> 1
//? Consts["/debug/elf/R_PPC_DTPREL16_HA"] = debug_elf.R_PPC_DTPREL16_HA
//# OLD <{eR_PPC_DTPREL16_HA}> 0
//# NEW <{eR_PPC_DTPREL16_HA}> 1
//? Consts["/debug/elf/EI_CLASS"] = debug_elf.EI_CLASS
//# OLD <{eEI_CLASS}> 0
//# NEW <{eEI_CLASS}> 1
//? Consts["/debug/elf/NT_PRPSINFO"] = debug_elf.NT_PRPSINFO
//# OLD <{eNT_PRPSINFO}> 0
//# NEW <{eNT_PRPSINFO}> 1
//? Consts["/debug/elf/R_386_TLS_LE"] = debug_elf.R_386_TLS_LE
//# OLD <{eR_386_TLS_LE}> 0
//# NEW <{eR_386_TLS_LE}> 1
//? Consts["/debug/elf/R_PPC_SECTOFF_HA"] = debug_elf.R_PPC_SECTOFF_HA
//# OLD <{eR_PPC_SECTOFF_HA}> 0
//# NEW <{eR_PPC_SECTOFF_HA}> 1
//? Consts["/debug/elf/R_X86_64_TLSLD"] = debug_elf.R_X86_64_TLSLD
//# OLD <{eR_X86_64_TLSLD}> 0
//# NEW <{eR_X86_64_TLSLD}> 1
//? Consts["/debug/elf/SHT_SHLIB"] = debug_elf.SHT_SHLIB
//# OLD <{eSHT_SHLIB}> 0
//# NEW <{eSHT_SHLIB}> 1
//? Consts["/debug/elf/R_PPC_GOT16_HA"] = debug_elf.R_PPC_GOT16_HA
//# OLD <{eR_PPC_GOT16_HA}> 0
//# NEW <{eR_PPC_GOT16_HA}> 1
//? Consts["/debug/elf/ET_REL"] = debug_elf.ET_REL
//# OLD <{eET_REL}> 0
//# NEW <{eET_REL}> 1
//? Consts["/debug/elf/SHT_SYMTAB"] = debug_elf.SHT_SYMTAB
//# OLD <{eSHT_SYMTAB}> 0
//# NEW <{eSHT_SYMTAB}> 1
//? Consts["/debug/elf/DT_RELA"] = debug_elf.DT_RELA
//# OLD <{eDT_RELA}> 0
//# NEW <{eDT_RELA}> 1
Types["/debug/elf/R_PPC"] = new(*debug_elf.R_PPC)
//# OLD <{eR_PPC}> 0
//# NEW <{eR_PPC}> 1
//? Consts["/debug/elf/SHN_HIPROC"] = debug_elf.SHN_HIPROC
//# OLD <{eSHN_HIPROC}> 0
//# NEW <{eSHN_HIPROC}> 1
//? Consts["/debug/elf/R_SPARC_11"] = debug_elf.R_SPARC_11
//# OLD <{eR_SPARC_11}> 0
//# NEW <{eR_SPARC_11}> 1
//? Consts["/debug/elf/R_PPC_REL32"] = debug_elf.R_PPC_REL32
//# OLD <{eR_PPC_REL32}> 0
//# NEW <{eR_PPC_REL32}> 1
//? Consts["/debug/elf/R_SPARC_HIPLT22"] = debug_elf.R_SPARC_HIPLT22
//# OLD <{eR_SPARC_HIPLT22}> 0
//# NEW <{eR_SPARC_HIPLT22}> 1
//? Consts["/debug/elf/SHF_WRITE"] = debug_elf.SHF_WRITE
//# OLD <{eSHF_WRITE}> 0
//# NEW <{eSHF_WRITE}> 1
//? Consts["/debug/elf/ELFOSABI_NONE"] = debug_elf.ELFOSABI_NONE
//# OLD <{eELFOSABI_NONE}> 0
//# NEW <{eELFOSABI_NONE}> 1
//? Consts["/debug/elf/R_SPARC_WDISP22"] = debug_elf.R_SPARC_WDISP22
//# OLD <{eR_SPARC_WDISP22}> 0
//# NEW <{eR_SPARC_WDISP22}> 1
//? Consts["/debug/elf/SHT_PREINIT_ARRAY"] = debug_elf.SHT_PREINIT_ARRAY
//# OLD <{eSHT_PREINIT_ARRAY}> 0
//# NEW <{eSHT_PREINIT_ARRAY}> 1
//? Consts["/debug/elf/R_PPC_EMB_NADDR32"] = debug_elf.R_PPC_EMB_NADDR32
//# OLD <{eR_PPC_EMB_NADDR32}> 0
//# NEW <{eR_PPC_EMB_NADDR32}> 1
//? Consts["/debug/elf/STT_HIOS"] = debug_elf.STT_HIOS
//# OLD <{eSTT_HIOS}> 0
//# NEW <{eSTT_HIOS}> 1
//? Consts["/debug/elf/R_X86_64_PC32"] = debug_elf.R_X86_64_PC32
//# OLD <{eR_X86_64_PC32}> 0
//# NEW <{eR_X86_64_PC32}> 1
//? Consts["/debug/elf/R_X86_64_PLT32"] = debug_elf.R_X86_64_PLT32
//# OLD <{eR_X86_64_PLT32}> 0
//# NEW <{eR_X86_64_PLT32}> 1
//? Consts["/debug/elf/R_SPARC_GOT13"] = debug_elf.R_SPARC_GOT13
//# OLD <{eR_SPARC_GOT13}> 0
//# NEW <{eR_SPARC_GOT13}> 1
//? Consts["/debug/elf/R_PPC_ADDR14_BRTAKEN"] = debug_elf.R_PPC_ADDR14_BRTAKEN
//# OLD <{eR_PPC_ADDR14_BRTAKEN}> 0
//# NEW <{eR_PPC_ADDR14_BRTAKEN}> 1
//? Consts["/debug/elf/R_X86_64_DTPOFF64"] = debug_elf.R_X86_64_DTPOFF64
//# OLD <{eR_X86_64_DTPOFF64}> 0
//# NEW <{eR_X86_64_DTPOFF64}> 1
//? Consts["/debug/elf/SHT_GNU_HASH"] = debug_elf.SHT_GNU_HASH
//# OLD <{eSHT_GNU_HASH}> 0
//# NEW <{eSHT_GNU_HASH}> 1
//? Consts["/debug/elf/R_PPC_TPREL16_LO"] = debug_elf.R_PPC_TPREL16_LO
//# OLD <{eR_PPC_TPREL16_LO}> 0
//# NEW <{eR_PPC_TPREL16_LO}> 1
//? Consts["/debug/elf/R_PPC_ADDR16_HI"] = debug_elf.R_PPC_ADDR16_HI
//# OLD <{eR_PPC_ADDR16_HI}> 0
//# NEW <{eR_PPC_ADDR16_HI}> 1
//? Consts["/debug/elf/ELFOSABI_MODESTO"] = debug_elf.ELFOSABI_MODESTO
//# OLD <{eELFOSABI_MODESTO}> 0
//# NEW <{eELFOSABI_MODESTO}> 1
//? Consts["/debug/elf/R_PPC_ADDR16_HA"] = debug_elf.R_PPC_ADDR16_HA
//# OLD <{eR_PPC_ADDR16_HA}> 0
//# NEW <{eR_PPC_ADDR16_HA}> 1
//? Consts["/debug/elf/EI_PAD"] = debug_elf.EI_PAD
//# OLD <{eEI_PAD}> 0
//# NEW <{eEI_PAD}> 1
//? Consts["/debug/elf/R_386_NONE"] = debug_elf.R_386_NONE
//# OLD <{eR_386_NONE}> 0
//# NEW <{eR_386_NONE}> 1
//? Consts["/debug/elf/R_ALPHA_BRADDR"] = debug_elf.R_ALPHA_BRADDR
//# OLD <{eR_ALPHA_BRADDR}> 0
//# NEW <{eR_ALPHA_BRADDR}> 1
//? Consts["/debug/elf/STT_HIPROC"] = debug_elf.STT_HIPROC
//# OLD <{eSTT_HIPROC}> 0
//# NEW <{eSTT_HIPROC}> 1
//? Consts["/debug/elf/R_ARM_NONE"] = debug_elf.R_ARM_NONE
//# OLD <{eR_ARM_NONE}> 0
//# NEW <{eR_ARM_NONE}> 1
//? Consts["/debug/elf/R_ARM_SBREL32"] = debug_elf.R_ARM_SBREL32
//# OLD <{eR_ARM_SBREL32}> 0
//# NEW <{eR_ARM_SBREL32}> 1
//? Consts["/debug/elf/PT_INTERP"] = debug_elf.PT_INTERP
//# OLD <{ePT_INTERP}> 0
//# NEW <{ePT_INTERP}> 1
Funcs["/debug/elf/ST_VISIBILITY"] = debug_elf.ST_VISIBILITY
//# OLD <{eST_VISIBILITY}> 0
//# NEW <{eST_VISIBILITY}> 1
//? Consts["/debug/elf/R_PPC_PLT32"] = debug_elf.R_PPC_PLT32
//# OLD <{eR_PPC_PLT32}> 0
//# NEW <{eR_PPC_PLT32}> 1
//? Consts["/debug/elf/DT_RUNPATH"] = debug_elf.DT_RUNPATH
//# OLD <{eDT_RUNPATH}> 0
//# NEW <{eDT_RUNPATH}> 1
//? Consts["/debug/elf/R_ARM_AMP_VCALL9"] = debug_elf.R_ARM_AMP_VCALL9
//# OLD <{eR_ARM_AMP_VCALL9}> 0
//# NEW <{eR_ARM_AMP_VCALL9}> 1
//? Consts["/debug/elf/STT_LOPROC"] = debug_elf.STT_LOPROC
//# OLD <{eSTT_LOPROC}> 0
//# NEW <{eSTT_LOPROC}> 1
//? Consts["/debug/elf/EV_CURRENT"] = debug_elf.EV_CURRENT
//# OLD <{eEV_CURRENT}> 0
//# NEW <{eEV_CURRENT}> 1
//? Consts["/debug/elf/R_PPC_EMB_NADDR16_HI"] = debug_elf.R_PPC_EMB_NADDR16_HI
//# OLD <{eR_PPC_EMB_NADDR16_HI}> 0
//# NEW <{eR_PPC_EMB_NADDR16_HI}> 1
//? Consts["/debug/elf/R_X86_64_NONE"] = debug_elf.R_X86_64_NONE
//# OLD <{eR_X86_64_NONE}> 0
//# NEW <{eR_X86_64_NONE}> 1
//? Consts["/debug/elf/SHT_SYMTAB_SHNDX"] = debug_elf.SHT_SYMTAB_SHNDX
//# OLD <{eSHT_SYMTAB_SHNDX}> 0
//# NEW <{eSHT_SYMTAB_SHNDX}> 1
//? Consts["/debug/elf/EM_RH32"] = debug_elf.EM_RH32
//# OLD <{eEM_RH32}> 0
//# NEW <{eEM_RH32}> 1
//? Consts["/debug/elf/SHF_TLS"] = debug_elf.SHF_TLS
//# OLD <{eSHF_TLS}> 0
//# NEW <{eSHF_TLS}> 1
//? Consts["/debug/elf/R_386_TLS_GOTIE"] = debug_elf.R_386_TLS_GOTIE
//# OLD <{eR_386_TLS_GOTIE}> 0
//# NEW <{eR_386_TLS_GOTIE}> 1
//? Consts["/debug/elf/EM_TINYJ"] = debug_elf.EM_TINYJ
//# OLD <{eEM_TINYJ}> 0
//# NEW <{eEM_TINYJ}> 1
//? Consts["/debug/elf/R_X86_64_JMP_SLOT"] = debug_elf.R_X86_64_JMP_SLOT
//# OLD <{eR_X86_64_JMP_SLOT}> 0
//# NEW <{eR_X86_64_JMP_SLOT}> 1
Types["/debug/elf/Section64"] = new(*debug_elf.Section64)
//# OLD <{eSection64}> 0
//# NEW <{eSection64}> 1
Funcs["/debug/elf/NewFile"] = debug_elf.NewFile
//# OLD <{eNewFile}> 0
//# NEW <{eNewFile}> 1
//? Consts["/debug/elf/DT_HIOS"] = debug_elf.DT_HIOS
//# OLD <{eDT_HIOS}> 0
//# NEW <{eDT_HIOS}> 1
//? Consts["/debug/elf/EM_PPC"] = debug_elf.EM_PPC
//# OLD <{eEM_PPC}> 0
//# NEW <{eEM_PPC}> 1
//? Consts["/debug/elf/EM_ALPHA"] = debug_elf.EM_ALPHA
//# OLD <{eEM_ALPHA}> 0
//# NEW <{eEM_ALPHA}> 1
//? Consts["/debug/elf/ARM_MAGIC_TRAMP_NUMBER"] = debug_elf.ARM_MAGIC_TRAMP_NUMBER
//# OLD <{eARM_MAGIC_TRAMP_NUMBER}> 0
//# NEW <{eARM_MAGIC_TRAMP_NUMBER}> 1
Types["/debug/elf/ProgFlag"] = new(*debug_elf.ProgFlag)
//# OLD <{eProgFlag}> 0
//# NEW <{eProgFlag}> 1
//? Consts["/debug/elf/ELFCLASS32"] = debug_elf.ELFCLASS32
//# OLD <{eELFCLASS32}> 0
//# NEW <{eELFCLASS32}> 1
//? Consts["/debug/elf/R_386_TLS_IE"] = debug_elf.R_386_TLS_IE
//# OLD <{eR_386_TLS_IE}> 0
//# NEW <{eR_386_TLS_IE}> 1
//? Consts["/debug/elf/R_ARM_RSBREL32"] = debug_elf.R_ARM_RSBREL32
//# OLD <{eR_ARM_RSBREL32}> 0
//# NEW <{eR_ARM_RSBREL32}> 1
//? Consts["/debug/elf/SHF_STRINGS"] = debug_elf.SHF_STRINGS
//# OLD <{eSHF_STRINGS}> 0
//# NEW <{eSHF_STRINGS}> 1
//? Consts["/debug/elf/DT_FINI"] = debug_elf.DT_FINI
//# OLD <{eDT_FINI}> 0
//# NEW <{eDT_FINI}> 1
//? Consts["/debug/elf/R_SPARC_22"] = debug_elf.R_SPARC_22
//# OLD <{eR_SPARC_22}> 0
//# NEW <{eR_SPARC_22}> 1
//? Consts["/debug/elf/R_ALPHA_GPRELHIGH"] = debug_elf.R_ALPHA_GPRELHIGH
//# OLD <{eR_ALPHA_GPRELHIGH}> 0
//# NEW <{eR_ALPHA_GPRELHIGH}> 1
//? Consts["/debug/elf/ET_DYN"] = debug_elf.ET_DYN
//# OLD <{eET_DYN}> 0
//# NEW <{eET_DYN}> 1
//? Consts["/debug/elf/R_386_TLS_DTPMOD32"] = debug_elf.R_386_TLS_DTPMOD32
//# OLD <{eR_386_TLS_DTPMOD32}> 0
//# NEW <{eR_386_TLS_DTPMOD32}> 1
//? Consts["/debug/elf/R_ARM_PLT32"] = debug_elf.R_ARM_PLT32
//# OLD <{eR_ARM_PLT32}> 0
//# NEW <{eR_ARM_PLT32}> 1
//? Consts["/debug/elf/DT_STRSZ"] = debug_elf.DT_STRSZ
//# OLD <{eDT_STRSZ}> 0
//# NEW <{eDT_STRSZ}> 1
//? Consts["/debug/elf/R_PPC_GOT16_HI"] = debug_elf.R_PPC_GOT16_HI
//# OLD <{eR_PPC_GOT16_HI}> 0
//# NEW <{eR_PPC_GOT16_HI}> 1
//? Consts["/debug/elf/R_SPARC_RELATIVE"] = debug_elf.R_SPARC_RELATIVE
//# OLD <{eR_SPARC_RELATIVE}> 0
//# NEW <{eR_SPARC_RELATIVE}> 1
//? Consts["/debug/elf/R_X86_64_8"] = debug_elf.R_X86_64_8
//# OLD <{eR_X86_64_8}> 0
//# NEW <{eR_X86_64_8}> 1
Types["/debug/elf/SymBind"] = new(*debug_elf.SymBind)
//# OLD <{eSymBind}> 0
//# NEW <{eSymBind}> 1
//? Consts["/debug/elf/R_PPC_EMB_RELST_HA"] = debug_elf.R_PPC_EMB_RELST_HA
//# OLD <{eR_PPC_EMB_RELST_HA}> 0
//# NEW <{eR_PPC_EMB_RELST_HA}> 1
//? Consts["/debug/elf/R_ARM_GLOB_DAT"] = debug_elf.R_ARM_GLOB_DAT
//# OLD <{eR_ARM_GLOB_DAT}> 0
//# NEW <{eR_ARM_GLOB_DAT}> 1
//? Consts["/debug/elf/R_X86_64_PC16"] = debug_elf.R_X86_64_PC16
//# OLD <{eR_X86_64_PC16}> 0
//# NEW <{eR_X86_64_PC16}> 1
//? Consts["/debug/elf/EM_PARISC"] = debug_elf.EM_PARISC
//# OLD <{eEM_PARISC}> 0
//# NEW <{eEM_PARISC}> 1
Types["/debug/elf/OSABI"] = new(*debug_elf.OSABI)
//# OLD <{eOSABI}> 0
//# NEW <{eOSABI}> 1
//? Consts["/debug/elf/R_ARM_COPY"] = debug_elf.R_ARM_COPY
//# OLD <{eR_ARM_COPY}> 0
//# NEW <{eR_ARM_COPY}> 1
//? Consts["/debug/elf/R_386_TLS_TPOFF32"] = debug_elf.R_386_TLS_TPOFF32
//# OLD <{eR_386_TLS_TPOFF32}> 0
//# NEW <{eR_386_TLS_TPOFF32}> 1
//? Consts["/debug/elf/STT_FUNC"] = debug_elf.STT_FUNC
//# OLD <{eSTT_FUNC}> 0
//# NEW <{eSTT_FUNC}> 1
//? Consts["/debug/elf/R_386_TLS_LDM_PUSH"] = debug_elf.R_386_TLS_LDM_PUSH
//# OLD <{eR_386_TLS_LDM_PUSH}> 0
//# NEW <{eR_386_TLS_LDM_PUSH}> 1
//? Consts["/debug/elf/R_SPARC_6"] = debug_elf.R_SPARC_6
//# OLD <{eR_SPARC_6}> 0
//# NEW <{eR_SPARC_6}> 1
Types["/debug/elf/ProgHeader"] = new(*debug_elf.ProgHeader)
//# OLD <{eProgHeader}> 0
//# NEW <{eProgHeader}> 1
//? Consts["/debug/elf/R_X86_64_32"] = debug_elf.R_X86_64_32
//# OLD <{eR_X86_64_32}> 0
//# NEW <{eR_X86_64_32}> 1
Types["/debug/elf/SectionType"] = new(*debug_elf.SectionType)
//# OLD <{eSectionType}> 0
//# NEW <{eSectionType}> 1
//? Consts["/debug/elf/STT_SECTION"] = debug_elf.STT_SECTION
//# OLD <{eSTT_SECTION}> 0
//# NEW <{eSTT_SECTION}> 1
//? Consts["/debug/elf/EM_FR20"] = debug_elf.EM_FR20
//# OLD <{eEM_FR20}> 0
//# NEW <{eEM_FR20}> 1
//? Consts["/debug/elf/ELFDATA2LSB"] = debug_elf.ELFDATA2LSB
//# OLD <{eELFDATA2LSB}> 0
//# NEW <{eELFDATA2LSB}> 1
//? Consts["/debug/elf/PT_NOTE"] = debug_elf.PT_NOTE
//# OLD <{ePT_NOTE}> 0
//# NEW <{ePT_NOTE}> 1
//? Consts["/debug/elf/R_SPARC_LO10"] = debug_elf.R_SPARC_LO10
//# OLD <{eR_SPARC_LO10}> 0
//# NEW <{eR_SPARC_LO10}> 1
//? Consts["/debug/elf/SHT_GNU_ATTRIBUTES"] = debug_elf.SHT_GNU_ATTRIBUTES
//# OLD <{eSHT_GNU_ATTRIBUTES}> 0
//# NEW <{eSHT_GNU_ATTRIBUTES}> 1
//? Consts["/debug/elf/EM_MIPS_RS4_BE"] = debug_elf.EM_MIPS_RS4_BE
//# OLD <{eEM_MIPS_RS4_BE}> 0
//# NEW <{eEM_MIPS_RS4_BE}> 1
//? Consts["/debug/elf/DT_PLTREL"] = debug_elf.DT_PLTREL
//# OLD <{eDT_PLTREL}> 0
//# NEW <{eDT_PLTREL}> 1
//? Consts["/debug/elf/R_PPC_SECTOFF"] = debug_elf.R_PPC_SECTOFF
//# OLD <{eR_PPC_SECTOFF}> 0
//# NEW <{eR_PPC_SECTOFF}> 1
//? Consts["/debug/elf/EM_NCPU"] = debug_elf.EM_NCPU
//# OLD <{eEM_NCPU}> 0
//# NEW <{eEM_NCPU}> 1
Funcs["/debug/elf/ST_TYPE"] = debug_elf.ST_TYPE
//# OLD <{eST_TYPE}> 0
//# NEW <{eST_TYPE}> 1
//? Consts["/debug/elf/R_SPARC_PLT32"] = debug_elf.R_SPARC_PLT32
//# OLD <{eR_SPARC_PLT32}> 0
//# NEW <{eR_SPARC_PLT32}> 1
//? Consts["/debug/elf/EM_PPC64"] = debug_elf.EM_PPC64
//# OLD <{eEM_PPC64}> 0
//# NEW <{eEM_PPC64}> 1
//? Consts["/debug/elf/SHN_ABS"] = debug_elf.SHN_ABS
//# OLD <{eSHN_ABS}> 0
//# NEW <{eSHN_ABS}> 1
//? Consts["/debug/elf/SHT_GNU_VERSYM"] = debug_elf.SHT_GNU_VERSYM
//# OLD <{eSHT_GNU_VERSYM}> 0
//# NEW <{eSHT_GNU_VERSYM}> 1
//? Consts["/debug/elf/R_PPC_DTPREL16_HI"] = debug_elf.R_PPC_DTPREL16_HI
//# OLD <{eR_PPC_DTPREL16_HI}> 0
//# NEW <{eR_PPC_DTPREL16_HI}> 1
//? Consts["/debug/elf/R_PPC_GOT16"] = debug_elf.R_PPC_GOT16
//# OLD <{eR_PPC_GOT16}> 0
//# NEW <{eR_PPC_GOT16}> 1
//? Consts["/debug/elf/R_SPARC_DISP8"] = debug_elf.R_SPARC_DISP8
//# OLD <{eR_SPARC_DISP8}> 0
//# NEW <{eR_SPARC_DISP8}> 1
//? Consts["/debug/elf/DT_LOPROC"] = debug_elf.DT_LOPROC
//# OLD <{eDT_LOPROC}> 0
//# NEW <{eDT_LOPROC}> 1
//? Consts["/debug/elf/R_ARM_GOT32"] = debug_elf.R_ARM_GOT32
//# OLD <{eR_ARM_GOT32}> 0
//# NEW <{eR_ARM_GOT32}> 1
Types["/debug/elf/Symbol"] = new(*debug_elf.Symbol)
//# OLD <{eSymbol}> 0
//# NEW <{eSymbol}> 1
Types["/debug/elf/Header32"] = new(*debug_elf.Header32)
//# OLD <{eHeader32}> 0
//# NEW <{eHeader32}> 1
//? Consts["/debug/elf/R_ARM_JUMP_SLOT"] = debug_elf.R_ARM_JUMP_SLOT
//# OLD <{eR_ARM_JUMP_SLOT}> 0
//# NEW <{eR_ARM_JUMP_SLOT}> 1
//? Consts["/debug/elf/R_PPC_EMB_SDA2REL"] = debug_elf.R_PPC_EMB_SDA2REL
//# OLD <{eR_PPC_EMB_SDA2REL}> 0
//# NEW <{eR_PPC_EMB_SDA2REL}> 1
//? Consts["/debug/elf/R_PPC_EMB_RELSDA"] = debug_elf.R_PPC_EMB_RELSDA
//# OLD <{eR_PPC_EMB_RELSDA}> 0
//# NEW <{eR_PPC_EMB_RELSDA}> 1
//? Consts["/debug/elf/DT_SYMTAB"] = debug_elf.DT_SYMTAB
//# OLD <{eDT_SYMTAB}> 0
//# NEW <{eDT_SYMTAB}> 1
//? Consts["/debug/elf/R_X86_64_DTPMOD64"] = debug_elf.R_X86_64_DTPMOD64
//# OLD <{eR_X86_64_DTPMOD64}> 0
//# NEW <{eR_X86_64_DTPMOD64}> 1
//? Consts["/debug/elf/R_SPARC_HI22"] = debug_elf.R_SPARC_HI22
//# OLD <{eR_SPARC_HI22}> 0
//# NEW <{eR_SPARC_HI22}> 1
//? Consts["/debug/elf/EM_M32"] = debug_elf.EM_M32
//# OLD <{eEM_M32}> 0
//# NEW <{eEM_M32}> 1
Types["/debug/elf/DynTag"] = new(*debug_elf.DynTag)
//# OLD <{eDynTag}> 0
//# NEW <{eDynTag}> 1
//? Consts["/debug/elf/R_PPC_EMB_RELST_HI"] = debug_elf.R_PPC_EMB_RELST_HI
//# OLD <{eR_PPC_EMB_RELST_HI}> 0
//# NEW <{eR_PPC_EMB_RELST_HI}> 1
//? Consts["/debug/elf/EM_S370"] = debug_elf.EM_S370
//# OLD <{eEM_S370}> 0
//# NEW <{eEM_S370}> 1
//? Consts["/debug/elf/PT_PHDR"] = debug_elf.PT_PHDR
//# OLD <{ePT_PHDR}> 0
//# NEW <{ePT_PHDR}> 1
//? Consts["/debug/elf/PF_R"] = debug_elf.PF_R
//# OLD <{ePF_R}> 0
//# NEW <{ePF_R}> 1
//? Consts["/debug/elf/EM_88K"] = debug_elf.EM_88K
//# OLD <{eEM_88K}> 0
//# NEW <{eEM_88K}> 1
//? Consts["/debug/elf/EM_68HC12"] = debug_elf.EM_68HC12
//# OLD <{eEM_68HC12}> 0
//# NEW <{eEM_68HC12}> 1
//? Consts["/debug/elf/R_SPARC_JMP_SLOT"] = debug_elf.R_SPARC_JMP_SLOT
//# OLD <{eR_SPARC_JMP_SLOT}> 0
//# NEW <{eR_SPARC_JMP_SLOT}> 1
//? Consts["/debug/elf/SHT_HIPROC"] = debug_elf.SHT_HIPROC
//# OLD <{eSHT_HIPROC}> 0
//# NEW <{eSHT_HIPROC}> 1
//? Consts["/debug/elf/R_PPC_GLOB_DAT"] = debug_elf.R_PPC_GLOB_DAT
//# OLD <{eR_PPC_GLOB_DAT}> 0
//# NEW <{eR_PPC_GLOB_DAT}> 1
//? Consts["/debug/elf/NT_PRSTATUS"] = debug_elf.NT_PRSTATUS
//# OLD <{eNT_PRSTATUS}> 0
//# NEW <{eNT_PRSTATUS}> 1
//? Consts["/debug/elf/R_SPARC_REGISTER"] = debug_elf.R_SPARC_REGISTER
//# OLD <{eR_SPARC_REGISTER}> 0
//# NEW <{eR_SPARC_REGISTER}> 1
//? Consts["/debug/elf/STV_DEFAULT"] = debug_elf.STV_DEFAULT
//# OLD <{eSTV_DEFAULT}> 0
//# NEW <{eSTV_DEFAULT}> 1
//? Consts["/debug/elf/R_SPARC_UA32"] = debug_elf.R_SPARC_UA32
//# OLD <{eR_SPARC_UA32}> 0
//# NEW <{eR_SPARC_UA32}> 1
//? Consts["/debug/elf/R_PPC_GOT_TPREL16_HI"] = debug_elf.R_PPC_GOT_TPREL16_HI
//# OLD <{eR_PPC_GOT_TPREL16_HI}> 0
//# NEW <{eR_PPC_GOT_TPREL16_HI}> 1
//? Consts["/debug/elf/DT_PLTGOT"] = debug_elf.DT_PLTGOT
//# OLD <{eDT_PLTGOT}> 0
//# NEW <{eDT_PLTGOT}> 1
//? Consts["/debug/elf/R_ALPHA_REFQUAD"] = debug_elf.R_ALPHA_REFQUAD
//# OLD <{eR_ALPHA_REFQUAD}> 0
//# NEW <{eR_ALPHA_REFQUAD}> 1
//? Consts["/debug/elf/R_386_TLS_LE_32"] = debug_elf.R_386_TLS_LE_32
//# OLD <{eR_386_TLS_LE_32}> 0
//# NEW <{eR_386_TLS_LE_32}> 1
//? Consts["/debug/elf/R_SPARC_LM22"] = debug_elf.R_SPARC_LM22
//# OLD <{eR_SPARC_LM22}> 0
//# NEW <{eR_SPARC_LM22}> 1
//? Consts["/debug/elf/R_SPARC_PC_HH22"] = debug_elf.R_SPARC_PC_HH22
//# OLD <{eR_SPARC_PC_HH22}> 0
//# NEW <{eR_SPARC_PC_HH22}> 1
//? Consts["/debug/elf/R_386_TLS_GD_POP"] = debug_elf.R_386_TLS_GD_POP
//# OLD <{eR_386_TLS_GD_POP}> 0
//# NEW <{eR_386_TLS_GD_POP}> 1
//? Consts["/debug/elf/R_SPARC_32"] = debug_elf.R_SPARC_32
//# OLD <{eR_SPARC_32}> 0
//# NEW <{eR_SPARC_32}> 1
//? Consts["/debug/elf/R_SPARC_GOT10"] = debug_elf.R_SPARC_GOT10
//# OLD <{eR_SPARC_GOT10}> 0
//# NEW <{eR_SPARC_GOT10}> 1
//? Consts["/debug/elf/PT_LOPROC"] = debug_elf.PT_LOPROC
//# OLD <{ePT_LOPROC}> 0
//# NEW <{ePT_LOPROC}> 1
//? Consts["/debug/elf/SHT_NOTE"] = debug_elf.SHT_NOTE
//# OLD <{eSHT_NOTE}> 0
//# NEW <{eSHT_NOTE}> 1
//? Consts["/debug/elf/R_386_TLS_LDM_32"] = debug_elf.R_386_TLS_LDM_32
//# OLD <{eR_386_TLS_LDM_32}> 0
//# NEW <{eR_386_TLS_LDM_32}> 1
Types["/debug/elf/Rel64"] = new(*debug_elf.Rel64)
//# OLD <{eRel64}> 0
//# NEW <{eRel64}> 1
//? Consts["/debug/elf/R_PPC_GOT_TPREL16_HA"] = debug_elf.R_PPC_GOT_TPREL16_HA
//# OLD <{eR_PPC_GOT_TPREL16_HA}> 0
//# NEW <{eR_PPC_GOT_TPREL16_HA}> 1
Types["/debug/elf/R_SPARC"] = new(*debug_elf.R_SPARC)
//# OLD <{eR_SPARC}> 0
//# NEW <{eR_SPARC}> 1
Types["/debug/elf/R_386"] = new(*debug_elf.R_386)
//# OLD <{eR_386}> 0
//# NEW <{eR_386}> 1
//? Consts["/debug/elf/PF_MASKOS"] = debug_elf.PF_MASKOS
//# OLD <{ePF_MASKOS}> 0
//# NEW <{ePF_MASKOS}> 1
//? Consts["/debug/elf/R_PPC_GOT_TPREL16"] = debug_elf.R_PPC_GOT_TPREL16
//# OLD <{eR_PPC_GOT_TPREL16}> 0
//# NEW <{eR_PPC_GOT_TPREL16}> 1
//? Consts["/debug/elf/EI_ABIVERSION"] = debug_elf.EI_ABIVERSION
//# OLD <{eEI_ABIVERSION}> 0
//# NEW <{eEI_ABIVERSION}> 1
//? Consts["/debug/elf/R_ARM_GNU_VTENTRY"] = debug_elf.R_ARM_GNU_VTENTRY
//# OLD <{eR_ARM_GNU_VTENTRY}> 0
//# NEW <{eR_ARM_GNU_VTENTRY}> 1
//? Consts["/debug/elf/DT_REL"] = debug_elf.DT_REL
//# OLD <{eDT_REL}> 0
//# NEW <{eDT_REL}> 1
//? Consts["/debug/elf/R_ALPHA_GPDISP"] = debug_elf.R_ALPHA_GPDISP
//# OLD <{eR_ALPHA_GPDISP}> 0
//# NEW <{eR_ALPHA_GPDISP}> 1
//? Consts["/debug/elf/R_ARM_PC24"] = debug_elf.R_ARM_PC24
//# OLD <{eR_ARM_PC24}> 0
//# NEW <{eR_ARM_PC24}> 1
//? Consts["/debug/elf/SHT_LOPROC"] = debug_elf.SHT_LOPROC
//# OLD <{eSHT_LOPROC}> 0
//# NEW <{eSHT_LOPROC}> 1
Types["/debug/elf/R_ARM"] = new(*debug_elf.R_ARM)
//# OLD <{eR_ARM}> 0
//# NEW <{eR_ARM}> 1
//? Consts["/debug/elf/R_386_GLOB_DAT"] = debug_elf.R_386_GLOB_DAT
//# OLD <{eR_386_GLOB_DAT}> 0
//# NEW <{eR_386_GLOB_DAT}> 1
//? Consts["/debug/elf/R_SPARC_5"] = debug_elf.R_SPARC_5
//# OLD <{eR_SPARC_5}> 0
//# NEW <{eR_SPARC_5}> 1
//? Consts["/debug/elf/R_PPC_DTPMOD32"] = debug_elf.R_PPC_DTPMOD32
//# OLD <{eR_PPC_DTPMOD32}> 0
//# NEW <{eR_PPC_DTPMOD32}> 1
//? Consts["/debug/elf/R_ALPHA_REFLONG"] = debug_elf.R_ALPHA_REFLONG
//# OLD <{eR_ALPHA_REFLONG}> 0
//# NEW <{eR_ALPHA_REFLONG}> 1
//? Consts["/debug/elf/R_ARM_RELATIVE"] = debug_elf.R_ARM_RELATIVE
//# OLD <{eR_ARM_RELATIVE}> 0
//# NEW <{eR_ARM_RELATIVE}> 1
//? Consts["/debug/elf/SHT_NULL"] = debug_elf.SHT_NULL
//# OLD <{eSHT_NULL}> 0
//# NEW <{eSHT_NULL}> 1
//? Consts["/debug/elf/STB_LOCAL"] = debug_elf.STB_LOCAL
//# OLD <{eSTB_LOCAL}> 0
//# NEW <{eSTB_LOCAL}> 1
//? Consts["/debug/elf/EM_68K"] = debug_elf.EM_68K
//# OLD <{eEM_68K}> 0
//# NEW <{eEM_68K}> 1
//? Consts["/debug/elf/R_PPC_EMB_SDAI16"] = debug_elf.R_PPC_EMB_SDAI16
//# OLD <{eR_PPC_EMB_SDAI16}> 0
//# NEW <{eR_PPC_EMB_SDAI16}> 1
//? Consts["/debug/elf/EM_486"] = debug_elf.EM_486
//# OLD <{eEM_486}> 0
//# NEW <{eEM_486}> 1
//? Consts["/debug/elf/EI_OSABI"] = debug_elf.EI_OSABI
//# OLD <{eEI_OSABI}> 0
//# NEW <{eEI_OSABI}> 1
Funcs["/debug/elf/ST_INFO"] = debug_elf.ST_INFO
//# OLD <{eST_INFO}> 0
//# NEW <{eST_INFO}> 1
//? Consts["/debug/elf/R_ARM_THM_ABS5"] = debug_elf.R_ARM_THM_ABS5
//# OLD <{eR_ARM_THM_ABS5}> 0
//# NEW <{eR_ARM_THM_ABS5}> 1
//? Consts["/debug/elf/EM_H8_500"] = debug_elf.EM_H8_500
//# OLD <{eEM_H8_500}> 0
//# NEW <{eEM_H8_500}> 1
//? Consts["/debug/elf/EM_TRICORE"] = debug_elf.EM_TRICORE
//# OLD <{eEM_TRICORE}> 0
//# NEW <{eEM_TRICORE}> 1
//? Consts["/debug/elf/SHN_LOOS"] = debug_elf.SHN_LOOS
//# OLD <{eSHN_LOOS}> 0
//# NEW <{eSHN_LOOS}> 1
//? Consts["/debug/elf/EM_STARCORE"] = debug_elf.EM_STARCORE
//# OLD <{eEM_STARCORE}> 0
//# NEW <{eEM_STARCORE}> 1
//? Consts["/debug/elf/R_ARM_ABS16"] = debug_elf.R_ARM_ABS16
//# OLD <{eR_ARM_ABS16}> 0
//# NEW <{eR_ARM_ABS16}> 1
Types["/debug/elf/Section"] = new(*debug_elf.Section)
//# OLD <{eSection}> 0
//# NEW <{eSection}> 1
//? Consts["/debug/elf/EM_VPP500"] = debug_elf.EM_VPP500
//# OLD <{eEM_VPP500}> 0
//# NEW <{eEM_VPP500}> 1
//? Consts["/debug/elf/R_SPARC_UA64"] = debug_elf.R_SPARC_UA64
//# OLD <{eR_SPARC_UA64}> 0
//# NEW <{eR_SPARC_UA64}> 1
//? Consts["/debug/elf/R_ARM_RBASE"] = debug_elf.R_ARM_RBASE
//# OLD <{eR_ARM_RBASE}> 0
//# NEW <{eR_ARM_RBASE}> 1
//? Consts["/debug/elf/R_PPC_PLT16_LO"] = debug_elf.R_PPC_PLT16_LO
//# OLD <{eR_PPC_PLT16_LO}> 0
//# NEW <{eR_PPC_PLT16_LO}> 1
//? Consts["/debug/elf/R_ARM_THM_SWI8"] = debug_elf.R_ARM_THM_SWI8
//# OLD <{eR_ARM_THM_SWI8}> 0
//# NEW <{eR_ARM_THM_SWI8}> 1
//? Consts["/debug/elf/STT_OBJECT"] = debug_elf.STT_OBJECT
//# OLD <{eSTT_OBJECT}> 0
//# NEW <{eSTT_OBJECT}> 1
//? Consts["/debug/elf/R_ALPHA_IMMED_SCN_HI32"] = debug_elf.R_ALPHA_IMMED_SCN_HI32
//# OLD <{eR_ALPHA_IMMED_SCN_HI32}> 0
//# NEW <{eR_ALPHA_IMMED_SCN_HI32}> 1
Types["/debug/elf/SectionFlag"] = new(*debug_elf.SectionFlag)
//# OLD <{eSectionFlag}> 0
//# NEW <{eSectionFlag}> 1
Types["/debug/elf/SymType"] = new(*debug_elf.SymType)
//# OLD <{eSymType}> 0
//# NEW <{eSymType}> 1
//? Consts["/debug/elf/R_386_TLS_GD_32"] = debug_elf.R_386_TLS_GD_32
//# OLD <{eR_386_TLS_GD_32}> 0
//# NEW <{eR_386_TLS_GD_32}> 1
//? Consts["/debug/elf/R_ARM_THM_XPC22"] = debug_elf.R_ARM_THM_XPC22
//# OLD <{eR_ARM_THM_XPC22}> 0
//# NEW <{eR_ARM_THM_XPC22}> 1
//? Consts["/debug/elf/STB_LOPROC"] = debug_elf.STB_LOPROC
//# OLD <{eSTB_LOPROC}> 0
//# NEW <{eSTB_LOPROC}> 1
//? Consts["/debug/elf/R_X86_64_TPOFF32"] = debug_elf.R_X86_64_TPOFF32
//# OLD <{eR_X86_64_TPOFF32}> 0
//# NEW <{eR_X86_64_TPOFF32}> 1
//? Consts["/debug/elf/R_SPARC_DISP16"] = debug_elf.R_SPARC_DISP16
//# OLD <{eR_SPARC_DISP16}> 0
//# NEW <{eR_SPARC_DISP16}> 1
//? Consts["/debug/elf/ELFOSABI_LINUX"] = debug_elf.ELFOSABI_LINUX
//# OLD <{eELFOSABI_LINUX}> 0
//# NEW <{eELFOSABI_LINUX}> 1
//? Consts["/debug/elf/DT_STRTAB"] = debug_elf.DT_STRTAB
//# OLD <{eDT_STRTAB}> 0
//# NEW <{eDT_STRTAB}> 1
//? Consts["/debug/elf/R_ARM_GOTPC"] = debug_elf.R_ARM_GOTPC
//# OLD <{eR_ARM_GOTPC}> 0
//# NEW <{eR_ARM_GOTPC}> 1
//? Consts["/debug/elf/EM_ARM"] = debug_elf.EM_ARM
//# OLD <{eEM_ARM}> 0
//# NEW <{eEM_ARM}> 1
Types["/debug/elf/Section32"] = new(*debug_elf.Section32)
//# OLD <{eSection32}> 0
//# NEW <{eSection32}> 1
//? Consts["/debug/elf/R_ALPHA_OP_PUSH"] = debug_elf.R_ALPHA_OP_PUSH
//# OLD <{eR_ALPHA_OP_PUSH}> 0
//# NEW <{eR_ALPHA_OP_PUSH}> 1
//? Consts["/debug/elf/ELFOSABI_HPUX"] = debug_elf.ELFOSABI_HPUX
//# OLD <{eELFOSABI_HPUX}> 0
//# NEW <{eELFOSABI_HPUX}> 1
//? Consts["/debug/elf/EM_V800"] = debug_elf.EM_V800
//# OLD <{eEM_V800}> 0
//# NEW <{eEM_V800}> 1
//? Consts["/debug/elf/DT_SONAME"] = debug_elf.DT_SONAME
//# OLD <{eDT_SONAME}> 0
//# NEW <{eDT_SONAME}> 1
//? Consts["/debug/elf/DT_PREINIT_ARRAYSZ"] = debug_elf.DT_PREINIT_ARRAYSZ
//# OLD <{eDT_PREINIT_ARRAYSZ}> 0
//# NEW <{eDT_PREINIT_ARRAYSZ}> 1
//? Consts["/debug/elf/R_386_TLS_IE_32"] = debug_elf.R_386_TLS_IE_32
//# OLD <{eR_386_TLS_IE_32}> 0
//# NEW <{eR_386_TLS_IE_32}> 1


//     func debug/gosym.NewLineTable
//     type debug/gosym.UnknownFileError
//     type debug/gosym.Sym
//     type debug/gosym.DecodingError
//     type debug/gosym.Func
//     type debug/gosym.Table
//     type debug/gosym.Obj
//     type debug/gosym.UnknownLineError
//     type debug/gosym.LineTable
//     func debug/gosym.NewTable

Types["/debug/gosym/Sym"] = new(*debug_gosym.Sym)
//# OLD <{gSym}> 0
//# NEW <{gSym}> 1
Types["/debug/gosym/DecodingError"] = new(*debug_gosym.DecodingError)
//# OLD <{gDecodingError}> 0
//# NEW <{gDecodingError}> 1
Types["/debug/gosym/Func"] = new(*debug_gosym.Func)
//# OLD <{gFunc}> 0
//# NEW <{gFunc}> 1
Types["/debug/gosym/Table"] = new(*debug_gosym.Table)
//# OLD <{gTable}> 0
//# NEW <{gTable}> 1
Types["/debug/gosym/Obj"] = new(*debug_gosym.Obj)
//# OLD <{gObj}> 0
//# NEW <{gObj}> 1
Types["/debug/gosym/UnknownLineError"] = new(*debug_gosym.UnknownLineError)
//# OLD <{gUnknownLineError}> 0
//# NEW <{gUnknownLineError}> 1
Types["/debug/gosym/LineTable"] = new(*debug_gosym.LineTable)
//# OLD <{gLineTable}> 0
//# NEW <{gLineTable}> 1
Funcs["/debug/gosym/NewTable"] = debug_gosym.NewTable
//# OLD <{gNewTable}> 0
//# NEW <{gNewTable}> 1
Funcs["/debug/gosym/NewLineTable"] = debug_gosym.NewLineTable
//# OLD <{gNewLineTable}> 0
//# NEW <{gNewLineTable}> 1
Types["/debug/gosym/UnknownFileError"] = new(*debug_gosym.UnknownFileError)
//# OLD <{gUnknownFileError}> 0
//# NEW <{gUnknownFileError}> 1


//     type debug/macho.DysymtabCmd
//    const debug/macho.LoadCmdSegment
//     type debug/macho.Section32
//    const debug/macho.LoadCmdSymtab
//    const debug/macho.LoadCmdUnixThread
//     type debug/macho.LoadBytes
//     type debug/macho.Symbol
//     type debug/macho.Nlist32
//     type debug/macho.File
//     type debug/macho.Segment64
//    const debug/macho.LoadCmdDylib
//     type debug/macho.Section
//    const debug/macho.LoadCmdDysymtab
//    const debug/macho.TypeObj
//     func debug/macho.Open
//    const debug/macho.CpuAmd64
//     type debug/macho.FormatError
//     type debug/macho.Section64
//     func debug/macho.NewFile
//    const debug/macho.LoadCmdThread
//    const debug/macho.LoadCmdSegment64
//     type debug/macho.RegsAMD64
//    const debug/macho.Magic32
//     type debug/macho.Nlist64
//     type debug/macho.Regs386
//     type debug/macho.Symtab
//    const debug/macho.LoadCmdDylinker
//     type debug/macho.DylibCmd
//     type debug/macho.Segment32
//     type debug/macho.Type
//     type debug/macho.FileHeader
//     type debug/macho.Thread
//     type debug/macho.SymtabCmd
//    const debug/macho.Magic64
//     type debug/macho.LoadCmd
//     type debug/macho.SegmentHeader
//     type debug/macho.Dysymtab
//    const debug/macho.Cpu386
//     type debug/macho.Cpu
//    const debug/macho.TypeExec
//     type debug/macho.Load
//     type debug/macho.Dylib
//     type debug/macho.Segment
//     type debug/macho.SectionHeader

Types["/debug/macho/Load"] = new(*debug_macho.Load)
//# OLD <{mLoad}> 0
//# NEW <{mLoad}> 1
Types["/debug/macho/Dylib"] = new(*debug_macho.Dylib)
//# OLD <{mDylib}> 0
//# NEW <{mDylib}> 1
Types["/debug/macho/Segment"] = new(*debug_macho.Segment)
//# OLD <{mSegment}> 0
//# NEW <{mSegment}> 1
Types["/debug/macho/SectionHeader"] = new(*debug_macho.SectionHeader)
//# OLD <{mSectionHeader}> 0
//# NEW <{mSectionHeader}> 1
Types["/debug/macho/DysymtabCmd"] = new(*debug_macho.DysymtabCmd)
//# OLD <{mDysymtabCmd}> 0
//# NEW <{mDysymtabCmd}> 1
//? Consts["/debug/macho/LoadCmdSegment"] = debug_macho.LoadCmdSegment
//# OLD <{mLoadCmdSegment}> 0
//# NEW <{mLoadCmdSegment}> 1
Types["/debug/macho/Section32"] = new(*debug_macho.Section32)
//# OLD <{mSection32}> 0
//# NEW <{mSection32}> 1
//? Consts["/debug/macho/LoadCmdSymtab"] = debug_macho.LoadCmdSymtab
//# OLD <{mLoadCmdSymtab}> 0
//# NEW <{mLoadCmdSymtab}> 1
//? Consts["/debug/macho/LoadCmdUnixThread"] = debug_macho.LoadCmdUnixThread
//# OLD <{mLoadCmdUnixThread}> 0
//# NEW <{mLoadCmdUnixThread}> 1
Types["/debug/macho/LoadBytes"] = new(*debug_macho.LoadBytes)
//# OLD <{mLoadBytes}> 0
//# NEW <{mLoadBytes}> 1
Types["/debug/macho/Symbol"] = new(*debug_macho.Symbol)
//# OLD <{mSymbol}> 0
//# NEW <{mSymbol}> 1
Types["/debug/macho/Nlist32"] = new(*debug_macho.Nlist32)
//# OLD <{mNlist32}> 0
//# NEW <{mNlist32}> 1
Types["/debug/macho/File"] = new(*debug_macho.File)
//# OLD <{mFile}> 0
//# NEW <{mFile}> 1
Types["/debug/macho/Segment64"] = new(*debug_macho.Segment64)
//# OLD <{mSegment64}> 0
//# NEW <{mSegment64}> 1
//? Consts["/debug/macho/LoadCmdDylib"] = debug_macho.LoadCmdDylib
//# OLD <{mLoadCmdDylib}> 0
//# NEW <{mLoadCmdDylib}> 1
Types["/debug/macho/Section"] = new(*debug_macho.Section)
//# OLD <{mSection}> 0
//# NEW <{mSection}> 1
//? Consts["/debug/macho/LoadCmdDysymtab"] = debug_macho.LoadCmdDysymtab
//# OLD <{mLoadCmdDysymtab}> 0
//# NEW <{mLoadCmdDysymtab}> 1
//? Consts["/debug/macho/TypeObj"] = debug_macho.TypeObj
//# OLD <{mTypeObj}> 0
//# NEW <{mTypeObj}> 1
Funcs["/debug/macho/Open"] = debug_macho.Open
//# OLD <{mOpen}> 0
//# NEW <{mOpen}> 1
//? Consts["/debug/macho/CpuAmd64"] = debug_macho.CpuAmd64
//# OLD <{mCpuAmd64}> 0
//# NEW <{mCpuAmd64}> 1
Types["/debug/macho/FormatError"] = new(*debug_macho.FormatError)
//# OLD <{mFormatError}> 0
//# NEW <{mFormatError}> 1
Types["/debug/macho/Section64"] = new(*debug_macho.Section64)
//# OLD <{mSection64}> 0
//# NEW <{mSection64}> 1
Funcs["/debug/macho/NewFile"] = debug_macho.NewFile
//# OLD <{mNewFile}> 0
//# NEW <{mNewFile}> 1
//? Consts["/debug/macho/LoadCmdThread"] = debug_macho.LoadCmdThread
//# OLD <{mLoadCmdThread}> 0
//# NEW <{mLoadCmdThread}> 1
//? Consts["/debug/macho/LoadCmdSegment64"] = debug_macho.LoadCmdSegment64
//# OLD <{mLoadCmdSegment64}> 0
//# NEW <{mLoadCmdSegment64}> 1
Types["/debug/macho/RegsAMD64"] = new(*debug_macho.RegsAMD64)
//# OLD <{mRegsAMD64}> 0
//# NEW <{mRegsAMD64}> 1
//? Consts["/debug/macho/Magic32"] = debug_macho.Magic32
//# OLD <{mMagic32}> 0
//# NEW <{mMagic32}> 1
Types["/debug/macho/Nlist64"] = new(*debug_macho.Nlist64)
//# OLD <{mNlist64}> 0
//# NEW <{mNlist64}> 1
Types["/debug/macho/Regs386"] = new(*debug_macho.Regs386)
//# OLD <{mRegs386}> 0
//# NEW <{mRegs386}> 1
Types["/debug/macho/Symtab"] = new(*debug_macho.Symtab)
//# OLD <{mSymtab}> 0
//# NEW <{mSymtab}> 1
//? Consts["/debug/macho/LoadCmdDylinker"] = debug_macho.LoadCmdDylinker
//# OLD <{mLoadCmdDylinker}> 0
//# NEW <{mLoadCmdDylinker}> 1
Types["/debug/macho/DylibCmd"] = new(*debug_macho.DylibCmd)
//# OLD <{mDylibCmd}> 0
//# NEW <{mDylibCmd}> 1
Types["/debug/macho/Segment32"] = new(*debug_macho.Segment32)
//# OLD <{mSegment32}> 0
//# NEW <{mSegment32}> 1
Types["/debug/macho/Type"] = new(*debug_macho.Type)
//# OLD <{mType}> 0
//# NEW <{mType}> 1
Types["/debug/macho/FileHeader"] = new(*debug_macho.FileHeader)
//# OLD <{mFileHeader}> 0
//# NEW <{mFileHeader}> 1
Types["/debug/macho/Thread"] = new(*debug_macho.Thread)
//# OLD <{mThread}> 0
//# NEW <{mThread}> 1
Types["/debug/macho/SymtabCmd"] = new(*debug_macho.SymtabCmd)
//# OLD <{mSymtabCmd}> 0
//# NEW <{mSymtabCmd}> 1
//? Consts["/debug/macho/Magic64"] = debug_macho.Magic64
//# OLD <{mMagic64}> 0
//# NEW <{mMagic64}> 1
Types["/debug/macho/LoadCmd"] = new(*debug_macho.LoadCmd)
//# OLD <{mLoadCmd}> 0
//# NEW <{mLoadCmd}> 1
Types["/debug/macho/SegmentHeader"] = new(*debug_macho.SegmentHeader)
//# OLD <{mSegmentHeader}> 0
//# NEW <{mSegmentHeader}> 1
Types["/debug/macho/Dysymtab"] = new(*debug_macho.Dysymtab)
//# OLD <{mDysymtab}> 0
//# NEW <{mDysymtab}> 1
//? Consts["/debug/macho/Cpu386"] = debug_macho.Cpu386
//# OLD <{mCpu386}> 0
//# NEW <{mCpu386}> 1
Types["/debug/macho/Cpu"] = new(*debug_macho.Cpu)
//# OLD <{mCpu}> 0
//# NEW <{mCpu}> 1
//? Consts["/debug/macho/TypeExec"] = debug_macho.TypeExec
//# OLD <{mTypeExec}> 0
//# NEW <{mTypeExec}> 1


//     func debug/pe.NewFile
//     type debug/pe.File
//     type debug/pe.FormatError
//    const debug/pe.IMAGE_FILE_MACHINE_M32R
//    const debug/pe.IMAGE_FILE_MACHINE_AM33
//    const debug/pe.IMAGE_FILE_MACHINE_MIPSFPU
//    const debug/pe.IMAGE_FILE_MACHINE_POWERPC
//     func debug/pe.Open
//    const debug/pe.IMAGE_FILE_MACHINE_SH3
//    const debug/pe.IMAGE_FILE_MACHINE_SH5
//    const debug/pe.IMAGE_FILE_MACHINE_POWERPCFP
//    const debug/pe.IMAGE_FILE_MACHINE_IA64
//     type debug/pe.FileHeader
//    const debug/pe.IMAGE_FILE_MACHINE_WCEMIPSV2
//    const debug/pe.IMAGE_FILE_MACHINE_UNKNOWN
//    const debug/pe.IMAGE_FILE_MACHINE_R4000
//    const debug/pe.IMAGE_FILE_MACHINE_MIPS16
//     type debug/pe.SectionHeader
//    const debug/pe.IMAGE_FILE_MACHINE_I386
//     type debug/pe.Section
//    const debug/pe.IMAGE_FILE_MACHINE_MIPSFPU16
//    const debug/pe.IMAGE_FILE_MACHINE_THUMB
//    const debug/pe.IMAGE_FILE_MACHINE_AMD64
//    const debug/pe.IMAGE_FILE_MACHINE_SH3DSP
//     type debug/pe.SectionHeader32
//     type debug/pe.ImportDirectory
//    const debug/pe.IMAGE_FILE_MACHINE_ARM
//    const debug/pe.IMAGE_FILE_MACHINE_SH4
//    const debug/pe.IMAGE_FILE_MACHINE_EBC

//? Consts["/debug/pe/IMAGE_FILE_MACHINE_SH4"] = debug_pe.IMAGE_FILE_MACHINE_SH4
//# OLD <{pIMAGE_FILE_MACHINE_SH4}> 0
//# NEW <{pIMAGE_FILE_MACHINE_SH4}> 1
//? Consts["/debug/pe/IMAGE_FILE_MACHINE_EBC"] = debug_pe.IMAGE_FILE_MACHINE_EBC
//# OLD <{pIMAGE_FILE_MACHINE_EBC}> 0
//# NEW <{pIMAGE_FILE_MACHINE_EBC}> 1
Funcs["/debug/pe/NewFile"] = debug_pe.NewFile
//# OLD <{pNewFile}> 0
//# NEW <{pNewFile}> 1
Types["/debug/pe/File"] = new(*debug_pe.File)
//# OLD <{pFile}> 0
//# NEW <{pFile}> 1
Types["/debug/pe/FormatError"] = new(*debug_pe.FormatError)
//# OLD <{pFormatError}> 0
//# NEW <{pFormatError}> 1
//? Consts["/debug/pe/IMAGE_FILE_MACHINE_M32R"] = debug_pe.IMAGE_FILE_MACHINE_M32R
//# OLD <{pIMAGE_FILE_MACHINE_M32R}> 0
//# NEW <{pIMAGE_FILE_MACHINE_M32R}> 1
//? Consts["/debug/pe/IMAGE_FILE_MACHINE_AM33"] = debug_pe.IMAGE_FILE_MACHINE_AM33
//# OLD <{pIMAGE_FILE_MACHINE_AM33}> 0
//# NEW <{pIMAGE_FILE_MACHINE_AM33}> 1
//? Consts["/debug/pe/IMAGE_FILE_MACHINE_MIPSFPU"] = debug_pe.IMAGE_FILE_MACHINE_MIPSFPU
//# OLD <{pIMAGE_FILE_MACHINE_MIPSFPU}> 0
//# NEW <{pIMAGE_FILE_MACHINE_MIPSFPU}> 1
//? Consts["/debug/pe/IMAGE_FILE_MACHINE_POWERPC"] = debug_pe.IMAGE_FILE_MACHINE_POWERPC
//# OLD <{pIMAGE_FILE_MACHINE_POWERPC}> 0
//# NEW <{pIMAGE_FILE_MACHINE_POWERPC}> 1
Funcs["/debug/pe/Open"] = debug_pe.Open
//# OLD <{pOpen}> 0
//# NEW <{pOpen}> 1
//? Consts["/debug/pe/IMAGE_FILE_MACHINE_SH3"] = debug_pe.IMAGE_FILE_MACHINE_SH3
//# OLD <{pIMAGE_FILE_MACHINE_SH3}> 0
//# NEW <{pIMAGE_FILE_MACHINE_SH3}> 1
//? Consts["/debug/pe/IMAGE_FILE_MACHINE_SH5"] = debug_pe.IMAGE_FILE_MACHINE_SH5
//# OLD <{pIMAGE_FILE_MACHINE_SH5}> 0
//# NEW <{pIMAGE_FILE_MACHINE_SH5}> 1
//? Consts["/debug/pe/IMAGE_FILE_MACHINE_POWERPCFP"] = debug_pe.IMAGE_FILE_MACHINE_POWERPCFP
//# OLD <{pIMAGE_FILE_MACHINE_POWERPCFP}> 0
//# NEW <{pIMAGE_FILE_MACHINE_POWERPCFP}> 1
//? Consts["/debug/pe/IMAGE_FILE_MACHINE_IA64"] = debug_pe.IMAGE_FILE_MACHINE_IA64
//# OLD <{pIMAGE_FILE_MACHINE_IA64}> 0
//# NEW <{pIMAGE_FILE_MACHINE_IA64}> 1
Types["/debug/pe/FileHeader"] = new(*debug_pe.FileHeader)
//# OLD <{pFileHeader}> 0
//# NEW <{pFileHeader}> 1
//? Consts["/debug/pe/IMAGE_FILE_MACHINE_WCEMIPSV2"] = debug_pe.IMAGE_FILE_MACHINE_WCEMIPSV2
//# OLD <{pIMAGE_FILE_MACHINE_WCEMIPSV2}> 0
//# NEW <{pIMAGE_FILE_MACHINE_WCEMIPSV2}> 1
//? Consts["/debug/pe/IMAGE_FILE_MACHINE_UNKNOWN"] = debug_pe.IMAGE_FILE_MACHINE_UNKNOWN
//# OLD <{pIMAGE_FILE_MACHINE_UNKNOWN}> 0
//# NEW <{pIMAGE_FILE_MACHINE_UNKNOWN}> 1
//? Consts["/debug/pe/IMAGE_FILE_MACHINE_R4000"] = debug_pe.IMAGE_FILE_MACHINE_R4000
//# OLD <{pIMAGE_FILE_MACHINE_R4000}> 0
//# NEW <{pIMAGE_FILE_MACHINE_R4000}> 1
//? Consts["/debug/pe/IMAGE_FILE_MACHINE_MIPS16"] = debug_pe.IMAGE_FILE_MACHINE_MIPS16
//# OLD <{pIMAGE_FILE_MACHINE_MIPS16}> 0
//# NEW <{pIMAGE_FILE_MACHINE_MIPS16}> 1
Types["/debug/pe/SectionHeader"] = new(*debug_pe.SectionHeader)
//# OLD <{pSectionHeader}> 0
//# NEW <{pSectionHeader}> 1
//? Consts["/debug/pe/IMAGE_FILE_MACHINE_I386"] = debug_pe.IMAGE_FILE_MACHINE_I386
//# OLD <{pIMAGE_FILE_MACHINE_I386}> 0
//# NEW <{pIMAGE_FILE_MACHINE_I386}> 1
Types["/debug/pe/Section"] = new(*debug_pe.Section)
//# OLD <{pSection}> 0
//# NEW <{pSection}> 1
//? Consts["/debug/pe/IMAGE_FILE_MACHINE_MIPSFPU16"] = debug_pe.IMAGE_FILE_MACHINE_MIPSFPU16
//# OLD <{pIMAGE_FILE_MACHINE_MIPSFPU16}> 0
//# NEW <{pIMAGE_FILE_MACHINE_MIPSFPU16}> 1
//? Consts["/debug/pe/IMAGE_FILE_MACHINE_THUMB"] = debug_pe.IMAGE_FILE_MACHINE_THUMB
//# OLD <{pIMAGE_FILE_MACHINE_THUMB}> 0
//# NEW <{pIMAGE_FILE_MACHINE_THUMB}> 1
//? Consts["/debug/pe/IMAGE_FILE_MACHINE_AMD64"] = debug_pe.IMAGE_FILE_MACHINE_AMD64
//# OLD <{pIMAGE_FILE_MACHINE_AMD64}> 0
//# NEW <{pIMAGE_FILE_MACHINE_AMD64}> 1
//? Consts["/debug/pe/IMAGE_FILE_MACHINE_SH3DSP"] = debug_pe.IMAGE_FILE_MACHINE_SH3DSP
//# OLD <{pIMAGE_FILE_MACHINE_SH3DSP}> 0
//# NEW <{pIMAGE_FILE_MACHINE_SH3DSP}> 1
Types["/debug/pe/SectionHeader32"] = new(*debug_pe.SectionHeader32)
//# OLD <{pSectionHeader32}> 0
//# NEW <{pSectionHeader32}> 1
Types["/debug/pe/ImportDirectory"] = new(*debug_pe.ImportDirectory)
//# OLD <{pImportDirectory}> 0
//# NEW <{pImportDirectory}> 1
//? Consts["/debug/pe/IMAGE_FILE_MACHINE_ARM"] = debug_pe.IMAGE_FILE_MACHINE_ARM
//# OLD <{pIMAGE_FILE_MACHINE_ARM}> 0
//# NEW <{pIMAGE_FILE_MACHINE_ARM}> 1


//     func encoding/ascii85.Decode
//     func encoding/ascii85.Encode
//     func encoding/ascii85.NewEncoder
//     func encoding/ascii85.MaxEncodedLen
//     type encoding/ascii85.CorruptInputError
//     func encoding/ascii85.NewDecoder

Types["/encoding/ascii85/CorruptInputError"] = new(*encoding_ascii85.CorruptInputError)
//# OLD <{aCorruptInputError}> 0
//# NEW <{aCorruptInputError}> 1
Funcs["/encoding/ascii85/NewDecoder"] = encoding_ascii85.NewDecoder
//# OLD <{aNewDecoder}> 0
//# NEW <{aNewDecoder}> 1
Funcs["/encoding/ascii85/Decode"] = encoding_ascii85.Decode
//# OLD <{aDecode}> 0
//# NEW <{aDecode}> 1
Funcs["/encoding/ascii85/Encode"] = encoding_ascii85.Encode
//# OLD <{aEncode}> 0
//# NEW <{aEncode}> 1
Funcs["/encoding/ascii85/NewEncoder"] = encoding_ascii85.NewEncoder
//# OLD <{aNewEncoder}> 0
//# NEW <{aNewEncoder}> 1
Funcs["/encoding/ascii85/MaxEncodedLen"] = encoding_ascii85.MaxEncodedLen
//# OLD <{aMaxEncodedLen}> 0
//# NEW <{aMaxEncodedLen}> 1


//     type encoding/asn1.Flag
//     func encoding/asn1.UnmarshalWithParams
//     type encoding/asn1.ObjectIdentifier
//     type encoding/asn1.Enumerated
//     type encoding/asn1.SyntaxError
//     type encoding/asn1.RawValue
//     func encoding/asn1.Marshal
//     type encoding/asn1.BitString
//     type encoding/asn1.RawContent
//     func encoding/asn1.Unmarshal
//     type encoding/asn1.StructuralError

Funcs["/encoding/asn1/UnmarshalWithParams"] = encoding_asn1.UnmarshalWithParams
//# OLD <{aUnmarshalWithParams}> 0
//# NEW <{aUnmarshalWithParams}> 1
Types["/encoding/asn1/ObjectIdentifier"] = new(*encoding_asn1.ObjectIdentifier)
//# OLD <{aObjectIdentifier}> 0
//# NEW <{aObjectIdentifier}> 1
Types["/encoding/asn1/Enumerated"] = new(*encoding_asn1.Enumerated)
//# OLD <{aEnumerated}> 0
//# NEW <{aEnumerated}> 1
Types["/encoding/asn1/SyntaxError"] = new(*encoding_asn1.SyntaxError)
//# OLD <{aSyntaxError}> 0
//# NEW <{aSyntaxError}> 1
Types["/encoding/asn1/RawValue"] = new(*encoding_asn1.RawValue)
//# OLD <{aRawValue}> 0
//# NEW <{aRawValue}> 1
Funcs["/encoding/asn1/Marshal"] = encoding_asn1.Marshal
//# OLD <{aMarshal}> 0
//# NEW <{aMarshal}> 1
Types["/encoding/asn1/BitString"] = new(*encoding_asn1.BitString)
//# OLD <{aBitString}> 0
//# NEW <{aBitString}> 1
Types["/encoding/asn1/RawContent"] = new(*encoding_asn1.RawContent)
//# OLD <{aRawContent}> 0
//# NEW <{aRawContent}> 1
Funcs["/encoding/asn1/Unmarshal"] = encoding_asn1.Unmarshal
//# OLD <{aUnmarshal}> 0
//# NEW <{aUnmarshal}> 1
Types["/encoding/asn1/StructuralError"] = new(*encoding_asn1.StructuralError)
//# OLD <{aStructuralError}> 0
//# NEW <{aStructuralError}> 1
Types["/encoding/asn1/Flag"] = new(*encoding_asn1.Flag)
//# OLD <{aFlag}> 0
//# NEW <{aFlag}> 1


//     type encoding/base32.Encoding
//     func encoding/base32.NewDecoder
//     type encoding/base32.CorruptInputError
//     func encoding/base32.NewEncoding
//      var encoding/base32.HexEncoding
//     func encoding/base32.NewEncoder
//      var encoding/base32.StdEncoding

Vars["/encoding/base32/StdEncoding"] = &encoding_base32.StdEncoding
//# OLD <{bStdEncoding}> 0
//# NEW <{bStdEncoding}> 1
Types["/encoding/base32/Encoding"] = new(*encoding_base32.Encoding)
//# OLD <{bEncoding}> 0
//# NEW <{bEncoding}> 1
Funcs["/encoding/base32/NewDecoder"] = encoding_base32.NewDecoder
//# OLD <{bNewDecoder}> 0
//# NEW <{bNewDecoder}> 1
Types["/encoding/base32/CorruptInputError"] = new(*encoding_base32.CorruptInputError)
//# OLD <{bCorruptInputError}> 0
//# NEW <{bCorruptInputError}> 1
Funcs["/encoding/base32/NewEncoding"] = encoding_base32.NewEncoding
//# OLD <{bNewEncoding}> 0
//# NEW <{bNewEncoding}> 1
Vars["/encoding/base32/HexEncoding"] = &encoding_base32.HexEncoding
//# OLD <{bHexEncoding}> 0
//# NEW <{bHexEncoding}> 1
Funcs["/encoding/base32/NewEncoder"] = encoding_base32.NewEncoder
//# OLD <{bNewEncoder}> 0
//# NEW <{bNewEncoder}> 1


//     func encoding/base64.NewEncoder
//     type encoding/base64.CorruptInputError
//      var encoding/base64.StdEncoding
//      var encoding/base64.URLEncoding
//     func encoding/base64.NewDecoder
//     func encoding/base64.NewEncoding
//     type encoding/base64.Encoding

Vars["/encoding/base64/URLEncoding"] = &encoding_base64.URLEncoding
//# OLD <{bURLEncoding}> 0
//# NEW <{bURLEncoding}> 1
Funcs["/encoding/base64/NewDecoder"] = encoding_base64.NewDecoder
//# OLD <{bNewDecoder}> 1
//# NEW <{bNewDecoder}> 2
Funcs["/encoding/base64/NewEncoding"] = encoding_base64.NewEncoding
//# OLD <{bNewEncoding}> 1
//# NEW <{bNewEncoding}> 2
Types["/encoding/base64/Encoding"] = new(*encoding_base64.Encoding)
//# OLD <{bEncoding}> 1
//# NEW <{bEncoding}> 2
Funcs["/encoding/base64/NewEncoder"] = encoding_base64.NewEncoder
//# OLD <{bNewEncoder}> 1
//# NEW <{bNewEncoder}> 2
Types["/encoding/base64/CorruptInputError"] = new(*encoding_base64.CorruptInputError)
//# OLD <{bCorruptInputError}> 1
//# NEW <{bCorruptInputError}> 2
Vars["/encoding/base64/StdEncoding"] = &encoding_base64.StdEncoding
//# OLD <{bStdEncoding}> 1
//# NEW <{bStdEncoding}> 2


//     type encoding/binary.ByteOrder
//      var encoding/binary.BigEndian
//     func encoding/binary.Size
//     func encoding/binary.PutUvarint
//    const encoding/binary.MaxVarintLen32
//     func encoding/binary.Uvarint
//    const encoding/binary.MaxVarintLen16
//     func encoding/binary.PutVarint
//     func encoding/binary.ReadUvarint
//     func encoding/binary.ReadVarint
//     func encoding/binary.Varint
//     func encoding/binary.Read
//      var encoding/binary.LittleEndian
//    const encoding/binary.MaxVarintLen64
//     func encoding/binary.Write

Funcs["/encoding/binary/PutUvarint"] = encoding_binary.PutUvarint
//# OLD <{bPutUvarint}> 0
//# NEW <{bPutUvarint}> 1
//? Consts["/encoding/binary/MaxVarintLen32"] = encoding_binary.MaxVarintLen32
//# OLD <{bMaxVarintLen32}> 0
//# NEW <{bMaxVarintLen32}> 1
Funcs["/encoding/binary/Uvarint"] = encoding_binary.Uvarint
//# OLD <{bUvarint}> 0
//# NEW <{bUvarint}> 1
//? Consts["/encoding/binary/MaxVarintLen16"] = encoding_binary.MaxVarintLen16
//# OLD <{bMaxVarintLen16}> 0
//# NEW <{bMaxVarintLen16}> 1
Funcs["/encoding/binary/PutVarint"] = encoding_binary.PutVarint
//# OLD <{bPutVarint}> 0
//# NEW <{bPutVarint}> 1
Funcs["/encoding/binary/ReadUvarint"] = encoding_binary.ReadUvarint
//# OLD <{bReadUvarint}> 0
//# NEW <{bReadUvarint}> 1
Funcs["/encoding/binary/ReadVarint"] = encoding_binary.ReadVarint
//# OLD <{bReadVarint}> 0
//# NEW <{bReadVarint}> 1
Funcs["/encoding/binary/Varint"] = encoding_binary.Varint
//# OLD <{bVarint}> 0
//# NEW <{bVarint}> 1
Funcs["/encoding/binary/Read"] = encoding_binary.Read
//# OLD <{bRead}> 0
//# NEW <{bRead}> 1
Vars["/encoding/binary/LittleEndian"] = &encoding_binary.LittleEndian
//# OLD <{bLittleEndian}> 0
//# NEW <{bLittleEndian}> 1
//? Consts["/encoding/binary/MaxVarintLen64"] = encoding_binary.MaxVarintLen64
//# OLD <{bMaxVarintLen64}> 0
//# NEW <{bMaxVarintLen64}> 1
Funcs["/encoding/binary/Write"] = encoding_binary.Write
//# OLD <{bWrite}> 0
//# NEW <{bWrite}> 1
Types["/encoding/binary/ByteOrder"] = new(*encoding_binary.ByteOrder)
//# OLD <{bByteOrder}> 0
//# NEW <{bByteOrder}> 1
Vars["/encoding/binary/BigEndian"] = &encoding_binary.BigEndian
//# OLD <{bBigEndian}> 0
//# NEW <{bBigEndian}> 1
Funcs["/encoding/binary/Size"] = encoding_binary.Size
//# OLD <{bSize}> 0
//# NEW <{bSize}> 1


//      var encoding/csv.ErrFieldCount
//     func encoding/csv.NewWriter
//      var encoding/csv.ErrBareQuote
//     type encoding/csv.ParseError
//     func encoding/csv.NewReader
//      var encoding/csv.ErrTrailingComma
//     type encoding/csv.Writer
//     type encoding/csv.Reader
//      var encoding/csv.ErrQuote

Types["/encoding/csv/Reader"] = new(*encoding_csv.Reader)
//# OLD <{cReader}> 0
//# NEW <{cReader}> 1
Vars["/encoding/csv/ErrQuote"] = &encoding_csv.ErrQuote
//# OLD <{cErrQuote}> 0
//# NEW <{cErrQuote}> 1
Vars["/encoding/csv/ErrFieldCount"] = &encoding_csv.ErrFieldCount
//# OLD <{cErrFieldCount}> 0
//# NEW <{cErrFieldCount}> 1
Funcs["/encoding/csv/NewWriter"] = encoding_csv.NewWriter
//# OLD <{cNewWriter}> 0
//# NEW <{cNewWriter}> 1
Vars["/encoding/csv/ErrBareQuote"] = &encoding_csv.ErrBareQuote
//# OLD <{cErrBareQuote}> 0
//# NEW <{cErrBareQuote}> 1
Types["/encoding/csv/ParseError"] = new(*encoding_csv.ParseError)
//# OLD <{cParseError}> 0
//# NEW <{cParseError}> 1
Funcs["/encoding/csv/NewReader"] = encoding_csv.NewReader
//# OLD <{cNewReader}> 0
//# NEW <{cNewReader}> 1
Vars["/encoding/csv/ErrTrailingComma"] = &encoding_csv.ErrTrailingComma
//# OLD <{cErrTrailingComma}> 0
//# NEW <{cErrTrailingComma}> 1
Types["/encoding/csv/Writer"] = new(*encoding_csv.Writer)
//# OLD <{cWriter}> 0
//# NEW <{cWriter}> 1


//     func encoding/gob.NewDecoder
//     type encoding/gob.Decoder
//     func encoding/gob.Register
//     func encoding/gob.RegisterName
//     func encoding/gob.NewEncoder
//     type encoding/gob.Encoder
//     type encoding/gob.GobDecoder
//     type encoding/gob.GobEncoder
//     type encoding/gob.CommonType

Funcs["/encoding/gob/RegisterName"] = encoding_gob.RegisterName
//# OLD <{gRegisterName}> 0
//# NEW <{gRegisterName}> 1
Funcs["/encoding/gob/NewEncoder"] = encoding_gob.NewEncoder
//# OLD <{gNewEncoder}> 0
//# NEW <{gNewEncoder}> 1
Types["/encoding/gob/Encoder"] = new(*encoding_gob.Encoder)
//# OLD <{gEncoder}> 0
//# NEW <{gEncoder}> 1
Types["/encoding/gob/GobDecoder"] = new(*encoding_gob.GobDecoder)
//# OLD <{gGobDecoder}> 0
//# NEW <{gGobDecoder}> 1
Types["/encoding/gob/GobEncoder"] = new(*encoding_gob.GobEncoder)
//# OLD <{gGobEncoder}> 0
//# NEW <{gGobEncoder}> 1
Types["/encoding/gob/CommonType"] = new(*encoding_gob.CommonType)
//# OLD <{gCommonType}> 0
//# NEW <{gCommonType}> 1
Funcs["/encoding/gob/NewDecoder"] = encoding_gob.NewDecoder
//# OLD <{gNewDecoder}> 0
//# NEW <{gNewDecoder}> 1
Types["/encoding/gob/Decoder"] = new(*encoding_gob.Decoder)
//# OLD <{gDecoder}> 0
//# NEW <{gDecoder}> 1
Funcs["/encoding/gob/Register"] = encoding_gob.Register
//# OLD <{gRegister}> 0
//# NEW <{gRegister}> 1


//     func encoding/hex.Dumper
//     func encoding/hex.EncodeToString
//     func encoding/hex.Encode
//     type encoding/hex.InvalidByteError
//     func encoding/hex.Decode
//     func encoding/hex.DecodedLen
//     func encoding/hex.EncodedLen
//     func encoding/hex.DecodeString
//     func encoding/hex.Dump
//      var encoding/hex.ErrLength

Types["/encoding/hex/InvalidByteError"] = new(*encoding_hex.InvalidByteError)
//# OLD <{hInvalidByteError}> 0
//# NEW <{hInvalidByteError}> 1
Funcs["/encoding/hex/Decode"] = encoding_hex.Decode
//# OLD <{hDecode}> 0
//# NEW <{hDecode}> 1
Funcs["/encoding/hex/DecodedLen"] = encoding_hex.DecodedLen
//# OLD <{hDecodedLen}> 0
//# NEW <{hDecodedLen}> 1
Funcs["/encoding/hex/EncodedLen"] = encoding_hex.EncodedLen
//# OLD <{hEncodedLen}> 0
//# NEW <{hEncodedLen}> 1
Funcs["/encoding/hex/DecodeString"] = encoding_hex.DecodeString
//# OLD <{hDecodeString}> 0
//# NEW <{hDecodeString}> 1
Funcs["/encoding/hex/Dump"] = encoding_hex.Dump
//# OLD <{hDump}> 0
//# NEW <{hDump}> 1
Vars["/encoding/hex/ErrLength"] = &encoding_hex.ErrLength
//# OLD <{hErrLength}> 0
//# NEW <{hErrLength}> 1
Funcs["/encoding/hex/Dumper"] = encoding_hex.Dumper
//# OLD <{hDumper}> 0
//# NEW <{hDumper}> 1
Funcs["/encoding/hex/EncodeToString"] = encoding_hex.EncodeToString
//# OLD <{hEncodeToString}> 0
//# NEW <{hEncodeToString}> 1
Funcs["/encoding/hex/Encode"] = encoding_hex.Encode
//# OLD <{hEncode}> 0
//# NEW <{hEncode}> 1


//     type encoding/json.Encoder
//     type encoding/json.UnmarshalFieldError
//     type encoding/json.RawMessage
//     type encoding/json.InvalidUnmarshalError
//     type encoding/json.InvalidUTF8Error
//     func encoding/json.HTMLEscape
//     func encoding/json.NewDecoder
//     func encoding/json.Indent
//     type encoding/json.UnsupportedValueError
//     type encoding/json.UnsupportedTypeError
//     type encoding/json.Decoder
//     type encoding/json.Marshaler
//     func encoding/json.Marshal
//     type encoding/json.MarshalerError
//     func encoding/json.Compact
//     func encoding/json.MarshalIndent
//     func encoding/json.NewEncoder
//     type encoding/json.SyntaxError
//     type encoding/json.UnmarshalTypeError
//     func encoding/json.Unmarshal
//     type encoding/json.Unmarshaler

Funcs["/encoding/json/MarshalIndent"] = encoding_json.MarshalIndent
//# OLD <{jMarshalIndent}> 0
//# NEW <{jMarshalIndent}> 1
Funcs["/encoding/json/NewEncoder"] = encoding_json.NewEncoder
//# OLD <{jNewEncoder}> 0
//# NEW <{jNewEncoder}> 1
Types["/encoding/json/SyntaxError"] = new(*encoding_json.SyntaxError)
//# OLD <{jSyntaxError}> 0
//# NEW <{jSyntaxError}> 1
Types["/encoding/json/UnmarshalTypeError"] = new(*encoding_json.UnmarshalTypeError)
//# OLD <{jUnmarshalTypeError}> 0
//# NEW <{jUnmarshalTypeError}> 1
Funcs["/encoding/json/Unmarshal"] = encoding_json.Unmarshal
//# OLD <{jUnmarshal}> 0
//# NEW <{jUnmarshal}> 1
Types["/encoding/json/Unmarshaler"] = new(*encoding_json.Unmarshaler)
//# OLD <{jUnmarshaler}> 0
//# NEW <{jUnmarshaler}> 1
Types["/encoding/json/Encoder"] = new(*encoding_json.Encoder)
//# OLD <{jEncoder}> 0
//# NEW <{jEncoder}> 1
Types["/encoding/json/UnmarshalFieldError"] = new(*encoding_json.UnmarshalFieldError)
//# OLD <{jUnmarshalFieldError}> 0
//# NEW <{jUnmarshalFieldError}> 1
Types["/encoding/json/RawMessage"] = new(*encoding_json.RawMessage)
//# OLD <{jRawMessage}> 0
//# NEW <{jRawMessage}> 1
Types["/encoding/json/InvalidUnmarshalError"] = new(*encoding_json.InvalidUnmarshalError)
//# OLD <{jInvalidUnmarshalError}> 0
//# NEW <{jInvalidUnmarshalError}> 1
Types["/encoding/json/InvalidUTF8Error"] = new(*encoding_json.InvalidUTF8Error)
//# OLD <{jInvalidUTF8Error}> 0
//# NEW <{jInvalidUTF8Error}> 1
Funcs["/encoding/json/HTMLEscape"] = encoding_json.HTMLEscape
//# OLD <{jHTMLEscape}> 0
//# NEW <{jHTMLEscape}> 1
Funcs["/encoding/json/NewDecoder"] = encoding_json.NewDecoder
//# OLD <{jNewDecoder}> 0
//# NEW <{jNewDecoder}> 1
Funcs["/encoding/json/Indent"] = encoding_json.Indent
//# OLD <{jIndent}> 0
//# NEW <{jIndent}> 1
Types["/encoding/json/UnsupportedValueError"] = new(*encoding_json.UnsupportedValueError)
//# OLD <{jUnsupportedValueError}> 0
//# NEW <{jUnsupportedValueError}> 1
Types["/encoding/json/UnsupportedTypeError"] = new(*encoding_json.UnsupportedTypeError)
//# OLD <{jUnsupportedTypeError}> 0
//# NEW <{jUnsupportedTypeError}> 1
Types["/encoding/json/Decoder"] = new(*encoding_json.Decoder)
//# OLD <{jDecoder}> 0
//# NEW <{jDecoder}> 1
Types["/encoding/json/Marshaler"] = new(*encoding_json.Marshaler)
//# OLD <{jMarshaler}> 0
//# NEW <{jMarshaler}> 1
Funcs["/encoding/json/Marshal"] = encoding_json.Marshal
//# OLD <{jMarshal}> 0
//# NEW <{jMarshal}> 1
Types["/encoding/json/MarshalerError"] = new(*encoding_json.MarshalerError)
//# OLD <{jMarshalerError}> 0
//# NEW <{jMarshalerError}> 1
Funcs["/encoding/json/Compact"] = encoding_json.Compact
//# OLD <{jCompact}> 0
//# NEW <{jCompact}> 1


//     type encoding/pem.Block
//     func encoding/pem.Encode
//     func encoding/pem.Decode
//     func encoding/pem.EncodeToMemory

Funcs["/encoding/pem/Decode"] = encoding_pem.Decode
//# OLD <{pDecode}> 0
//# NEW <{pDecode}> 1
Funcs["/encoding/pem/EncodeToMemory"] = encoding_pem.EncodeToMemory
//# OLD <{pEncodeToMemory}> 0
//# NEW <{pEncodeToMemory}> 1
Types["/encoding/pem/Block"] = new(*encoding_pem.Block)
//# OLD <{pBlock}> 0
//# NEW <{pBlock}> 1
Funcs["/encoding/pem/Encode"] = encoding_pem.Encode
//# OLD <{pEncode}> 0
//# NEW <{pEncode}> 1


//     func encoding/xml.Escape
//    const encoding/xml.Header
//     type encoding/xml.StartElement
//     type encoding/xml.EndElement
//     func encoding/xml.Unmarshal
//      var encoding/xml.HTMLEntity
//     func encoding/xml.NewEncoder
//     type encoding/xml.UnsupportedTypeError
//     type encoding/xml.Directive
//     type encoding/xml.Name
//     type encoding/xml.Attr
//     func encoding/xml.Marshal
//     type encoding/xml.Decoder
//     type encoding/xml.Comment
//     type encoding/xml.Token
//     type encoding/xml.ProcInst
//      var encoding/xml.HTMLAutoClose
//     type encoding/xml.Encoder
//     type encoding/xml.SyntaxError
//     type encoding/xml.TagPathError
//     func encoding/xml.CopyToken
//     func encoding/xml.MarshalIndent
//     func encoding/xml.NewDecoder
//     type encoding/xml.UnmarshalError
//     type encoding/xml.CharData

Types["/encoding/xml/EndElement"] = new(*encoding_xml.EndElement)
//# OLD <{xEndElement}> 0
//# NEW <{xEndElement}> 1
Funcs["/encoding/xml/Unmarshal"] = encoding_xml.Unmarshal
//# OLD <{xUnmarshal}> 0
//# NEW <{xUnmarshal}> 1
Vars["/encoding/xml/HTMLEntity"] = &encoding_xml.HTMLEntity
//# OLD <{xHTMLEntity}> 0
//# NEW <{xHTMLEntity}> 1
Funcs["/encoding/xml/NewEncoder"] = encoding_xml.NewEncoder
//# OLD <{xNewEncoder}> 0
//# NEW <{xNewEncoder}> 1
Types["/encoding/xml/UnsupportedTypeError"] = new(*encoding_xml.UnsupportedTypeError)
//# OLD <{xUnsupportedTypeError}> 0
//# NEW <{xUnsupportedTypeError}> 1
Types["/encoding/xml/Directive"] = new(*encoding_xml.Directive)
//# OLD <{xDirective}> 0
//# NEW <{xDirective}> 1
Types["/encoding/xml/Name"] = new(*encoding_xml.Name)
//# OLD <{xName}> 0
//# NEW <{xName}> 1
Types["/encoding/xml/Attr"] = new(*encoding_xml.Attr)
//# OLD <{xAttr}> 0
//# NEW <{xAttr}> 1
Funcs["/encoding/xml/Marshal"] = encoding_xml.Marshal
//# OLD <{xMarshal}> 0
//# NEW <{xMarshal}> 1
Types["/encoding/xml/Decoder"] = new(*encoding_xml.Decoder)
//# OLD <{xDecoder}> 0
//# NEW <{xDecoder}> 1
Types["/encoding/xml/Comment"] = new(*encoding_xml.Comment)
//# OLD <{xComment}> 0
//# NEW <{xComment}> 1
Types["/encoding/xml/Token"] = new(*encoding_xml.Token)
//# OLD <{xToken}> 0
//# NEW <{xToken}> 1
Types["/encoding/xml/ProcInst"] = new(*encoding_xml.ProcInst)
//# OLD <{xProcInst}> 0
//# NEW <{xProcInst}> 1
Vars["/encoding/xml/HTMLAutoClose"] = &encoding_xml.HTMLAutoClose
//# OLD <{xHTMLAutoClose}> 0
//# NEW <{xHTMLAutoClose}> 1
Types["/encoding/xml/Encoder"] = new(*encoding_xml.Encoder)
//# OLD <{xEncoder}> 0
//# NEW <{xEncoder}> 1
Types["/encoding/xml/SyntaxError"] = new(*encoding_xml.SyntaxError)
//# OLD <{xSyntaxError}> 0
//# NEW <{xSyntaxError}> 1
Types["/encoding/xml/TagPathError"] = new(*encoding_xml.TagPathError)
//# OLD <{xTagPathError}> 0
//# NEW <{xTagPathError}> 1
Funcs["/encoding/xml/CopyToken"] = encoding_xml.CopyToken
//# OLD <{xCopyToken}> 0
//# NEW <{xCopyToken}> 1
Funcs["/encoding/xml/MarshalIndent"] = encoding_xml.MarshalIndent
//# OLD <{xMarshalIndent}> 0
//# NEW <{xMarshalIndent}> 1
Funcs["/encoding/xml/NewDecoder"] = encoding_xml.NewDecoder
//# OLD <{xNewDecoder}> 0
//# NEW <{xNewDecoder}> 1
Types["/encoding/xml/UnmarshalError"] = new(*encoding_xml.UnmarshalError)
//# OLD <{xUnmarshalError}> 0
//# NEW <{xUnmarshalError}> 1
Types["/encoding/xml/CharData"] = new(*encoding_xml.CharData)
//# OLD <{xCharData}> 0
//# NEW <{xCharData}> 1
Funcs["/encoding/xml/Escape"] = encoding_xml.Escape
//# OLD <{xEscape}> 0
//# NEW <{xEscape}> 1
//? Consts["/encoding/xml/Header"] = encoding_xml.Header
//# OLD <{xHeader}> 0
//# NEW <{xHeader}> 1
Types["/encoding/xml/StartElement"] = new(*encoding_xml.StartElement)
//# OLD <{xStartElement}> 0
//# NEW <{xStartElement}> 1


//     func errors.New

Funcs["/errors/New"] = errors.New
//# OLD <{eNew}> 0
//# NEW <{eNew}> 1


//     func expvar.Publish
//     func expvar.NewString
//     type expvar.Func
//     type expvar.Var
//     func expvar.NewInt
//     type expvar.Map
//     func expvar.Do
//     type expvar.Float
//     func expvar.Get
//     func expvar.NewMap
//     type expvar.Int
//     type expvar.String
//     func expvar.NewFloat
//     type expvar.KeyValue

Funcs["/expvar/NewMap"] = expvar.NewMap
//# OLD <{eNewMap}> 0
//# NEW <{eNewMap}> 1
Types["/expvar/Int"] = new(*expvar.Int)
//# OLD <{eInt}> 0
//# NEW <{eInt}> 1
Types["/expvar/String"] = new(*expvar.String)
//# OLD <{eString}> 0
//# NEW <{eString}> 1
Funcs["/expvar/NewFloat"] = expvar.NewFloat
//# OLD <{eNewFloat}> 0
//# NEW <{eNewFloat}> 1
Types["/expvar/KeyValue"] = new(*expvar.KeyValue)
//# OLD <{eKeyValue}> 0
//# NEW <{eKeyValue}> 1
Funcs["/expvar/Publish"] = expvar.Publish
//# OLD <{ePublish}> 0
//# NEW <{ePublish}> 1
Funcs["/expvar/NewString"] = expvar.NewString
//# OLD <{eNewString}> 0
//# NEW <{eNewString}> 1
Types["/expvar/Func"] = new(*expvar.Func)
//# OLD <{eFunc}> 0
//# NEW <{eFunc}> 1
Types["/expvar/Var"] = new(*expvar.Var)
//# OLD <{eVar}> 0
//# NEW <{eVar}> 1
Funcs["/expvar/NewInt"] = expvar.NewInt
//# OLD <{eNewInt}> 0
//# NEW <{eNewInt}> 1
Types["/expvar/Map"] = new(*expvar.Map)
//# OLD <{eMap}> 0
//# NEW <{eMap}> 1
Funcs["/expvar/Do"] = expvar.Do
//# OLD <{eDo}> 0
//# NEW <{eDo}> 1
Types["/expvar/Float"] = new(*expvar.Float)
//# OLD <{eFloat}> 0
//# NEW <{eFloat}> 1
Funcs["/expvar/Get"] = expvar.Get
//# OLD <{eGet}> 0
//# NEW <{eGet}> 1


//     func flag.Uint64
//    const flag.ExitOnError
//     func flag.NewFlagSet
//     type flag.FlagSet
//    const flag.ContinueOnError
//     func flag.VisitAll
//     func flag.Parsed
//     func flag.Set
//      var flag.Usage
//     func flag.UintVar
//     type flag.ErrorHandling
//      var flag.ErrHelp
//     func flag.Args
//     type flag.Value
//     func flag.IntVar
//     func flag.Int64Var
//    const flag.PanicOnError
//     func flag.Visit
//     func flag.StringVar
//     func flag.Uint64Var
//     func flag.PrintDefaults
//     func flag.BoolVar
//     func flag.Int
//     func flag.Uint
//     func flag.String
//     func flag.NArg
//     func flag.Parse
//     func flag.Float64Var
//     type flag.Flag
//     func flag.Var
//     func flag.Lookup
//     func flag.NFlag
//     func flag.Bool
//     func flag.Arg
//     func flag.Float64
//     func flag.Duration
//     func flag.DurationVar
//     func flag.Int64

Funcs["/flag/Duration"] = flag.Duration
//# OLD <{fDuration}> 0
//# NEW <{fDuration}> 1
Funcs["/flag/DurationVar"] = flag.DurationVar
//# OLD <{fDurationVar}> 0
//# NEW <{fDurationVar}> 1
Funcs["/flag/Int64"] = flag.Int64
//# OLD <{fInt64}> 0
//# NEW <{fInt64}> 1
Funcs["/flag/Uint64"] = flag.Uint64
//# OLD <{fUint64}> 0
//# NEW <{fUint64}> 1
//? Consts["/flag/ExitOnError"] = flag.ExitOnError
//# OLD <{fExitOnError}> 0
//# NEW <{fExitOnError}> 1
Funcs["/flag/NewFlagSet"] = flag.NewFlagSet
//# OLD <{fNewFlagSet}> 0
//# NEW <{fNewFlagSet}> 1
Types["/flag/FlagSet"] = new(*flag.FlagSet)
//# OLD <{fFlagSet}> 0
//# NEW <{fFlagSet}> 1
//? Consts["/flag/ContinueOnError"] = flag.ContinueOnError
//# OLD <{fContinueOnError}> 0
//# NEW <{fContinueOnError}> 1
Funcs["/flag/VisitAll"] = flag.VisitAll
//# OLD <{fVisitAll}> 0
//# NEW <{fVisitAll}> 1
Funcs["/flag/Parsed"] = flag.Parsed
//# OLD <{fParsed}> 0
//# NEW <{fParsed}> 1
Funcs["/flag/Set"] = flag.Set
//# OLD <{fSet}> 0
//# NEW <{fSet}> 1
Vars["/flag/Usage"] = &flag.Usage
//# OLD <{fUsage}> 0
//# NEW <{fUsage}> 1
Funcs["/flag/UintVar"] = flag.UintVar
//# OLD <{fUintVar}> 0
//# NEW <{fUintVar}> 1
Types["/flag/ErrorHandling"] = new(*flag.ErrorHandling)
//# OLD <{fErrorHandling}> 0
//# NEW <{fErrorHandling}> 1
Vars["/flag/ErrHelp"] = &flag.ErrHelp
//# OLD <{fErrHelp}> 0
//# NEW <{fErrHelp}> 1
Funcs["/flag/Args"] = flag.Args
//# OLD <{fArgs}> 0
//# NEW <{fArgs}> 1
Types["/flag/Value"] = new(*flag.Value)
//# OLD <{fValue}> 0
//# NEW <{fValue}> 1
Funcs["/flag/IntVar"] = flag.IntVar
//# OLD <{fIntVar}> 0
//# NEW <{fIntVar}> 1
Funcs["/flag/Int64Var"] = flag.Int64Var
//# OLD <{fInt64Var}> 0
//# NEW <{fInt64Var}> 1
//? Consts["/flag/PanicOnError"] = flag.PanicOnError
//# OLD <{fPanicOnError}> 0
//# NEW <{fPanicOnError}> 1
Funcs["/flag/Visit"] = flag.Visit
//# OLD <{fVisit}> 0
//# NEW <{fVisit}> 1
Funcs["/flag/StringVar"] = flag.StringVar
//# OLD <{fStringVar}> 0
//# NEW <{fStringVar}> 1
Funcs["/flag/Uint64Var"] = flag.Uint64Var
//# OLD <{fUint64Var}> 0
//# NEW <{fUint64Var}> 1
Funcs["/flag/PrintDefaults"] = flag.PrintDefaults
//# OLD <{fPrintDefaults}> 0
//# NEW <{fPrintDefaults}> 1
Funcs["/flag/BoolVar"] = flag.BoolVar
//# OLD <{fBoolVar}> 0
//# NEW <{fBoolVar}> 1
Funcs["/flag/Int"] = flag.Int
//# OLD <{fInt}> 0
//# NEW <{fInt}> 1
Funcs["/flag/Uint"] = flag.Uint
//# OLD <{fUint}> 0
//# NEW <{fUint}> 1
Funcs["/flag/String"] = flag.String
//# OLD <{fString}> 0
//# NEW <{fString}> 1
Funcs["/flag/NArg"] = flag.NArg
//# OLD <{fNArg}> 0
//# NEW <{fNArg}> 1
Funcs["/flag/Parse"] = flag.Parse
//# OLD <{fParse}> 0
//# NEW <{fParse}> 1
Funcs["/flag/Float64Var"] = flag.Float64Var
//# OLD <{fFloat64Var}> 0
//# NEW <{fFloat64Var}> 1
Types["/flag/Flag"] = new(*flag.Flag)
//# OLD <{fFlag}> 0
//# NEW <{fFlag}> 1
Funcs["/flag/Var"] = flag.Var
//# OLD <{fVar}> 0
//# NEW <{fVar}> 1
Funcs["/flag/Lookup"] = flag.Lookup
//# OLD <{fLookup}> 0
//# NEW <{fLookup}> 1
Funcs["/flag/NFlag"] = flag.NFlag
//# OLD <{fNFlag}> 0
//# NEW <{fNFlag}> 1
Funcs["/flag/Bool"] = flag.Bool
//# OLD <{fBool}> 0
//# NEW <{fBool}> 1
Funcs["/flag/Arg"] = flag.Arg
//# OLD <{fArg}> 0
//# NEW <{fArg}> 1
Funcs["/flag/Float64"] = flag.Float64
//# OLD <{fFloat64}> 0
//# NEW <{fFloat64}> 1


//     func fmt.Scanln
//     func fmt.Scan
//     func fmt.Print
//     type fmt.GoStringer
//     func fmt.Sprint
//     func fmt.Sscanf
//     func fmt.Printf
//     func fmt.Fprint
//     func fmt.Sscan
//     func fmt.Scanf
//     type fmt.Scanner
//     func fmt.Sprintf
//     func fmt.Sscanln
//     func fmt.Fscanln
//     func fmt.Errorf
//     type fmt.Stringer
//     type fmt.State
//     func fmt.Fscan
//     func fmt.Fscanf
//     func fmt.Sprintln
//     func fmt.Println
//     type fmt.Formatter
//     func fmt.Fprintln
//     func fmt.Fprintf
//     type fmt.ScanState

Funcs["/fmt/Scanln"] = fmt.Scanln
//# OLD <{fScanln}> 0
//# NEW <{fScanln}> 1
Funcs["/fmt/Scan"] = fmt.Scan
//# OLD <{fScan}> 0
//# NEW <{fScan}> 1
Funcs["/fmt/Print"] = fmt.Print
//# OLD <{fPrint}> 0
//# NEW <{fPrint}> 1
Types["/fmt/GoStringer"] = new(*fmt.GoStringer)
//# OLD <{fGoStringer}> 0
//# NEW <{fGoStringer}> 1
Funcs["/fmt/Sprint"] = fmt.Sprint
//# OLD <{fSprint}> 0
//# NEW <{fSprint}> 1
Funcs["/fmt/Sscanf"] = fmt.Sscanf
//# OLD <{fSscanf}> 0
//# NEW <{fSscanf}> 1
Funcs["/fmt/Printf"] = fmt.Printf
//# OLD <{fPrintf}> 0
//# NEW <{fPrintf}> 1
Funcs["/fmt/Fprint"] = fmt.Fprint
//# OLD <{fFprint}> 0
//# NEW <{fFprint}> 1
Funcs["/fmt/Sscan"] = fmt.Sscan
//# OLD <{fSscan}> 0
//# NEW <{fSscan}> 1
Funcs["/fmt/Scanf"] = fmt.Scanf
//# OLD <{fScanf}> 0
//# NEW <{fScanf}> 1
Types["/fmt/Scanner"] = new(*fmt.Scanner)
//# OLD <{fScanner}> 0
//# NEW <{fScanner}> 1
Funcs["/fmt/Sprintf"] = fmt.Sprintf
//# OLD <{fSprintf}> 0
//# NEW <{fSprintf}> 1
Funcs["/fmt/Sscanln"] = fmt.Sscanln
//# OLD <{fSscanln}> 0
//# NEW <{fSscanln}> 1
Funcs["/fmt/Fscanln"] = fmt.Fscanln
//# OLD <{fFscanln}> 0
//# NEW <{fFscanln}> 1
Funcs["/fmt/Errorf"] = fmt.Errorf
//# OLD <{fErrorf}> 0
//# NEW <{fErrorf}> 1
Types["/fmt/Stringer"] = new(*fmt.Stringer)
//# OLD <{fStringer}> 0
//# NEW <{fStringer}> 1
Types["/fmt/State"] = new(*fmt.State)
//# OLD <{fState}> 0
//# NEW <{fState}> 1
Funcs["/fmt/Fscan"] = fmt.Fscan
//# OLD <{fFscan}> 0
//# NEW <{fFscan}> 1
Funcs["/fmt/Fscanf"] = fmt.Fscanf
//# OLD <{fFscanf}> 0
//# NEW <{fFscanf}> 1
Funcs["/fmt/Sprintln"] = fmt.Sprintln
//# OLD <{fSprintln}> 0
//# NEW <{fSprintln}> 1
Funcs["/fmt/Println"] = fmt.Println
//# OLD <{fPrintln}> 0
//# NEW <{fPrintln}> 1
Types["/fmt/Formatter"] = new(*fmt.Formatter)
//# OLD <{fFormatter}> 0
//# NEW <{fFormatter}> 1
Funcs["/fmt/Fprintln"] = fmt.Fprintln
//# OLD <{fFprintln}> 0
//# NEW <{fFprintln}> 1
Funcs["/fmt/Fprintf"] = fmt.Fprintf
//# OLD <{fFprintf}> 0
//# NEW <{fFprintf}> 1
Types["/fmt/ScanState"] = new(*fmt.ScanState)
//# OLD <{fScanState}> 0
//# NEW <{fScanState}> 1


//     type go/ast.ImportSpec
//     type go/ast.AssignStmt
//     type go/ast.CompositeLit
//     type go/ast.BadExpr
//    const go/ast.Var
//     type go/ast.Importer
//     type go/ast.Filter
//     type go/ast.ValueSpec
//     func go/ast.Inspect
//     type go/ast.SliceExpr
//     type go/ast.MergeMode
//    const go/ast.FilterImportDuplicates
//     type go/ast.SelectStmt
//     func go/ast.Print
//     func go/ast.IsExported
//     type go/ast.Node
//     type go/ast.Comment
//     type go/ast.ReturnStmt
//     type go/ast.BasicLit
//     type go/ast.CaseClause
//     type go/ast.CommClause
//     type go/ast.Decl
//    const go/ast.Con
//     type go/ast.IndexExpr
//    const go/ast.RECV
//     type go/ast.ObjKind
//     type go/ast.SendStmt
//     type go/ast.CommentGroup
//     func go/ast.Walk
//     func go/ast.FilterDecl
//     type go/ast.TypeAssertExpr
//     func go/ast.NewPackage
//     type go/ast.Visitor
//     type go/ast.FuncDecl
//     type go/ast.BlockStmt
//     type go/ast.DeclStmt
//     type go/ast.ParenExpr
//     type go/ast.ExprStmt
//     type go/ast.Spec
//     func go/ast.NotNilFilter
//     type go/ast.InterfaceType
//     type go/ast.Scope
//     type go/ast.Ident
//     type go/ast.TypeSpec
//    const go/ast.Fun
//     type go/ast.FuncLit
//     type go/ast.Expr
//     type go/ast.MapType
//     func go/ast.MergePackageFiles
//    const go/ast.FilterUnassociatedComments
//     type go/ast.Ellipsis
//    const go/ast.Bad
//     type go/ast.FieldFilter
//     type go/ast.CallExpr
//     type go/ast.BadStmt
//     type go/ast.GenDecl
//     type go/ast.FuncType
//     func go/ast.NewIdent
//     type go/ast.RangeStmt
//    const go/ast.SEND
//     type go/ast.GoStmt
//     type go/ast.SelectorExpr
//     type go/ast.BinaryExpr
//    const go/ast.Lbl
//     type go/ast.ChanDir
//     type go/ast.LabeledStmt
//     type go/ast.TypeSwitchStmt
//     type go/ast.Package
//    const go/ast.Typ
//     func go/ast.FileExports
//     type go/ast.StructType
//     type go/ast.IfStmt
//     type go/ast.ChanType
//     type go/ast.StarExpr
//     type go/ast.KeyValueExpr
//     type go/ast.IncDecStmt
//     type go/ast.EmptyStmt
//     func go/ast.NewScope
//     func go/ast.Fprint
//     type go/ast.File
//     type go/ast.BadDecl
//     type go/ast.SwitchStmt
//     type go/ast.ArrayType
//    const go/ast.Pkg
//     type go/ast.Stmt
//     func go/ast.FilterFile
//     func go/ast.PackageExports
//     type go/ast.ForStmt
//     func go/ast.FilterPackage
//     type go/ast.FieldList
//     func go/ast.SortImports
//     type go/ast.UnaryExpr
//     type go/ast.BranchStmt
//     type go/ast.Object
//     type go/ast.Field
//    const go/ast.FilterFuncDuplicates
//     func go/ast.NewObj
//     type go/ast.DeferStmt

Types["/go/ast/ObjKind"] = new(*go_ast.ObjKind)
//# OLD <{aObjKind}> 0
//# NEW <{aObjKind}> 1
Types["/go/ast/SendStmt"] = new(*go_ast.SendStmt)
//# OLD <{aSendStmt}> 0
//# NEW <{aSendStmt}> 1
Types["/go/ast/CommentGroup"] = new(*go_ast.CommentGroup)
//# OLD <{aCommentGroup}> 0
//# NEW <{aCommentGroup}> 1
Funcs["/go/ast/Walk"] = go_ast.Walk
//# OLD <{aWalk}> 0
//# NEW <{aWalk}> 1
Funcs["/go/ast/FilterDecl"] = go_ast.FilterDecl
//# OLD <{aFilterDecl}> 0
//# NEW <{aFilterDecl}> 1
Types["/go/ast/TypeAssertExpr"] = new(*go_ast.TypeAssertExpr)
//# OLD <{aTypeAssertExpr}> 0
//# NEW <{aTypeAssertExpr}> 1
Funcs["/go/ast/NewPackage"] = go_ast.NewPackage
//# OLD <{aNewPackage}> 0
//# NEW <{aNewPackage}> 1
Types["/go/ast/Visitor"] = new(*go_ast.Visitor)
//# OLD <{aVisitor}> 0
//# NEW <{aVisitor}> 1
Types["/go/ast/FuncDecl"] = new(*go_ast.FuncDecl)
//# OLD <{aFuncDecl}> 0
//# NEW <{aFuncDecl}> 1
Types["/go/ast/BlockStmt"] = new(*go_ast.BlockStmt)
//# OLD <{aBlockStmt}> 0
//# NEW <{aBlockStmt}> 1
Types["/go/ast/DeclStmt"] = new(*go_ast.DeclStmt)
//# OLD <{aDeclStmt}> 0
//# NEW <{aDeclStmt}> 1
Types["/go/ast/ParenExpr"] = new(*go_ast.ParenExpr)
//# OLD <{aParenExpr}> 0
//# NEW <{aParenExpr}> 1
Types["/go/ast/ExprStmt"] = new(*go_ast.ExprStmt)
//# OLD <{aExprStmt}> 0
//# NEW <{aExprStmt}> 1
Types["/go/ast/Spec"] = new(*go_ast.Spec)
//# OLD <{aSpec}> 0
//# NEW <{aSpec}> 1
Funcs["/go/ast/NotNilFilter"] = go_ast.NotNilFilter
//# OLD <{aNotNilFilter}> 0
//# NEW <{aNotNilFilter}> 1
Types["/go/ast/InterfaceType"] = new(*go_ast.InterfaceType)
//# OLD <{aInterfaceType}> 0
//# NEW <{aInterfaceType}> 1
Types["/go/ast/Scope"] = new(*go_ast.Scope)
//# OLD <{aScope}> 0
//# NEW <{aScope}> 1
Types["/go/ast/Ident"] = new(*go_ast.Ident)
//# OLD <{aIdent}> 0
//# NEW <{aIdent}> 1
Types["/go/ast/TypeSpec"] = new(*go_ast.TypeSpec)
//# OLD <{aTypeSpec}> 0
//# NEW <{aTypeSpec}> 1
//? Consts["/go/ast/Fun"] = go_ast.Fun
//# OLD <{aFun}> 0
//# NEW <{aFun}> 1
Types["/go/ast/FuncLit"] = new(*go_ast.FuncLit)
//# OLD <{aFuncLit}> 0
//# NEW <{aFuncLit}> 1
Types["/go/ast/Expr"] = new(*go_ast.Expr)
//# OLD <{aExpr}> 0
//# NEW <{aExpr}> 1
Types["/go/ast/MapType"] = new(*go_ast.MapType)
//# OLD <{aMapType}> 0
//# NEW <{aMapType}> 1
Funcs["/go/ast/MergePackageFiles"] = go_ast.MergePackageFiles
//# OLD <{aMergePackageFiles}> 0
//# NEW <{aMergePackageFiles}> 1
//? Consts["/go/ast/FilterUnassociatedComments"] = go_ast.FilterUnassociatedComments
//# OLD <{aFilterUnassociatedComments}> 0
//# NEW <{aFilterUnassociatedComments}> 1
Types["/go/ast/Ellipsis"] = new(*go_ast.Ellipsis)
//# OLD <{aEllipsis}> 0
//# NEW <{aEllipsis}> 1
//? Consts["/go/ast/Bad"] = go_ast.Bad
//# OLD <{aBad}> 0
//# NEW <{aBad}> 1
Types["/go/ast/FieldFilter"] = new(*go_ast.FieldFilter)
//# OLD <{aFieldFilter}> 0
//# NEW <{aFieldFilter}> 1
Types["/go/ast/CallExpr"] = new(*go_ast.CallExpr)
//# OLD <{aCallExpr}> 0
//# NEW <{aCallExpr}> 1
Types["/go/ast/BadStmt"] = new(*go_ast.BadStmt)
//# OLD <{aBadStmt}> 0
//# NEW <{aBadStmt}> 1
Types["/go/ast/GenDecl"] = new(*go_ast.GenDecl)
//# OLD <{aGenDecl}> 0
//# NEW <{aGenDecl}> 1
Types["/go/ast/FuncType"] = new(*go_ast.FuncType)
//# OLD <{aFuncType}> 0
//# NEW <{aFuncType}> 1
Funcs["/go/ast/NewIdent"] = go_ast.NewIdent
//# OLD <{aNewIdent}> 0
//# NEW <{aNewIdent}> 1
Types["/go/ast/RangeStmt"] = new(*go_ast.RangeStmt)
//# OLD <{aRangeStmt}> 0
//# NEW <{aRangeStmt}> 1
//? Consts["/go/ast/SEND"] = go_ast.SEND
//# OLD <{aSEND}> 0
//# NEW <{aSEND}> 1
Types["/go/ast/GoStmt"] = new(*go_ast.GoStmt)
//# OLD <{aGoStmt}> 0
//# NEW <{aGoStmt}> 1
Types["/go/ast/SelectorExpr"] = new(*go_ast.SelectorExpr)
//# OLD <{aSelectorExpr}> 0
//# NEW <{aSelectorExpr}> 1
Types["/go/ast/BinaryExpr"] = new(*go_ast.BinaryExpr)
//# OLD <{aBinaryExpr}> 0
//# NEW <{aBinaryExpr}> 1
//? Consts["/go/ast/Lbl"] = go_ast.Lbl
//# OLD <{aLbl}> 0
//# NEW <{aLbl}> 1
Types["/go/ast/ChanDir"] = new(*go_ast.ChanDir)
//# OLD <{aChanDir}> 0
//# NEW <{aChanDir}> 1
Types["/go/ast/LabeledStmt"] = new(*go_ast.LabeledStmt)
//# OLD <{aLabeledStmt}> 0
//# NEW <{aLabeledStmt}> 1
Types["/go/ast/TypeSwitchStmt"] = new(*go_ast.TypeSwitchStmt)
//# OLD <{aTypeSwitchStmt}> 0
//# NEW <{aTypeSwitchStmt}> 1
Types["/go/ast/Package"] = new(*go_ast.Package)
//# OLD <{aPackage}> 0
//# NEW <{aPackage}> 1
//? Consts["/go/ast/Typ"] = go_ast.Typ
//# OLD <{aTyp}> 0
//# NEW <{aTyp}> 1
Funcs["/go/ast/FileExports"] = go_ast.FileExports
//# OLD <{aFileExports}> 0
//# NEW <{aFileExports}> 1
Types["/go/ast/StructType"] = new(*go_ast.StructType)
//# OLD <{aStructType}> 0
//# NEW <{aStructType}> 1
Types["/go/ast/IfStmt"] = new(*go_ast.IfStmt)
//# OLD <{aIfStmt}> 0
//# NEW <{aIfStmt}> 1
Types["/go/ast/ChanType"] = new(*go_ast.ChanType)
//# OLD <{aChanType}> 0
//# NEW <{aChanType}> 1
Types["/go/ast/StarExpr"] = new(*go_ast.StarExpr)
//# OLD <{aStarExpr}> 0
//# NEW <{aStarExpr}> 1
Types["/go/ast/KeyValueExpr"] = new(*go_ast.KeyValueExpr)
//# OLD <{aKeyValueExpr}> 0
//# NEW <{aKeyValueExpr}> 1
Types["/go/ast/IncDecStmt"] = new(*go_ast.IncDecStmt)
//# OLD <{aIncDecStmt}> 0
//# NEW <{aIncDecStmt}> 1
Types["/go/ast/EmptyStmt"] = new(*go_ast.EmptyStmt)
//# OLD <{aEmptyStmt}> 0
//# NEW <{aEmptyStmt}> 1
Funcs["/go/ast/NewScope"] = go_ast.NewScope
//# OLD <{aNewScope}> 0
//# NEW <{aNewScope}> 1
Funcs["/go/ast/Fprint"] = go_ast.Fprint
//# OLD <{aFprint}> 0
//# NEW <{aFprint}> 1
Types["/go/ast/File"] = new(*go_ast.File)
//# OLD <{aFile}> 0
//# NEW <{aFile}> 1
Types["/go/ast/BadDecl"] = new(*go_ast.BadDecl)
//# OLD <{aBadDecl}> 0
//# NEW <{aBadDecl}> 1
Types["/go/ast/SwitchStmt"] = new(*go_ast.SwitchStmt)
//# OLD <{aSwitchStmt}> 0
//# NEW <{aSwitchStmt}> 1
Types["/go/ast/ArrayType"] = new(*go_ast.ArrayType)
//# OLD <{aArrayType}> 0
//# NEW <{aArrayType}> 1
//? Consts["/go/ast/Pkg"] = go_ast.Pkg
//# OLD <{aPkg}> 0
//# NEW <{aPkg}> 1
Types["/go/ast/Stmt"] = new(*go_ast.Stmt)
//# OLD <{aStmt}> 0
//# NEW <{aStmt}> 1
Funcs["/go/ast/FilterFile"] = go_ast.FilterFile
//# OLD <{aFilterFile}> 0
//# NEW <{aFilterFile}> 1
Funcs["/go/ast/PackageExports"] = go_ast.PackageExports
//# OLD <{aPackageExports}> 0
//# NEW <{aPackageExports}> 1
Types["/go/ast/ForStmt"] = new(*go_ast.ForStmt)
//# OLD <{aForStmt}> 0
//# NEW <{aForStmt}> 1
Funcs["/go/ast/FilterPackage"] = go_ast.FilterPackage
//# OLD <{aFilterPackage}> 0
//# NEW <{aFilterPackage}> 1
Types["/go/ast/FieldList"] = new(*go_ast.FieldList)
//# OLD <{aFieldList}> 0
//# NEW <{aFieldList}> 1
Funcs["/go/ast/SortImports"] = go_ast.SortImports
//# OLD <{aSortImports}> 0
//# NEW <{aSortImports}> 1
Types["/go/ast/UnaryExpr"] = new(*go_ast.UnaryExpr)
//# OLD <{aUnaryExpr}> 0
//# NEW <{aUnaryExpr}> 1
Types["/go/ast/BranchStmt"] = new(*go_ast.BranchStmt)
//# OLD <{aBranchStmt}> 0
//# NEW <{aBranchStmt}> 1
Types["/go/ast/Object"] = new(*go_ast.Object)
//# OLD <{aObject}> 0
//# NEW <{aObject}> 1
Types["/go/ast/Field"] = new(*go_ast.Field)
//# OLD <{aField}> 0
//# NEW <{aField}> 1
//? Consts["/go/ast/FilterFuncDuplicates"] = go_ast.FilterFuncDuplicates
//# OLD <{aFilterFuncDuplicates}> 0
//# NEW <{aFilterFuncDuplicates}> 1
Funcs["/go/ast/NewObj"] = go_ast.NewObj
//# OLD <{aNewObj}> 0
//# NEW <{aNewObj}> 1
Types["/go/ast/DeferStmt"] = new(*go_ast.DeferStmt)
//# OLD <{aDeferStmt}> 0
//# NEW <{aDeferStmt}> 1
Types["/go/ast/ImportSpec"] = new(*go_ast.ImportSpec)
//# OLD <{aImportSpec}> 0
//# NEW <{aImportSpec}> 1
Types["/go/ast/AssignStmt"] = new(*go_ast.AssignStmt)
//# OLD <{aAssignStmt}> 0
//# NEW <{aAssignStmt}> 1
Types["/go/ast/CompositeLit"] = new(*go_ast.CompositeLit)
//# OLD <{aCompositeLit}> 0
//# NEW <{aCompositeLit}> 1
Types["/go/ast/BadExpr"] = new(*go_ast.BadExpr)
//# OLD <{aBadExpr}> 0
//# NEW <{aBadExpr}> 1
//? Consts["/go/ast/Var"] = go_ast.Var
//# OLD <{aVar}> 0
//# NEW <{aVar}> 1
Types["/go/ast/Importer"] = new(*go_ast.Importer)
//# OLD <{aImporter}> 0
//# NEW <{aImporter}> 1
Types["/go/ast/Filter"] = new(*go_ast.Filter)
//# OLD <{aFilter}> 0
//# NEW <{aFilter}> 1
Types["/go/ast/ValueSpec"] = new(*go_ast.ValueSpec)
//# OLD <{aValueSpec}> 0
//# NEW <{aValueSpec}> 1
Funcs["/go/ast/Inspect"] = go_ast.Inspect
//# OLD <{aInspect}> 0
//# NEW <{aInspect}> 1
Types["/go/ast/SliceExpr"] = new(*go_ast.SliceExpr)
//# OLD <{aSliceExpr}> 0
//# NEW <{aSliceExpr}> 1
Types["/go/ast/MergeMode"] = new(*go_ast.MergeMode)
//# OLD <{aMergeMode}> 0
//# NEW <{aMergeMode}> 1
//? Consts["/go/ast/FilterImportDuplicates"] = go_ast.FilterImportDuplicates
//# OLD <{aFilterImportDuplicates}> 0
//# NEW <{aFilterImportDuplicates}> 1
Types["/go/ast/SelectStmt"] = new(*go_ast.SelectStmt)
//# OLD <{aSelectStmt}> 0
//# NEW <{aSelectStmt}> 1
Funcs["/go/ast/Print"] = go_ast.Print
//# OLD <{aPrint}> 0
//# NEW <{aPrint}> 1
Funcs["/go/ast/IsExported"] = go_ast.IsExported
//# OLD <{aIsExported}> 0
//# NEW <{aIsExported}> 1
Types["/go/ast/Node"] = new(*go_ast.Node)
//# OLD <{aNode}> 0
//# NEW <{aNode}> 1
Types["/go/ast/Comment"] = new(*go_ast.Comment)
//# OLD <{aComment}> 0
//# NEW <{aComment}> 1
Types["/go/ast/ReturnStmt"] = new(*go_ast.ReturnStmt)
//# OLD <{aReturnStmt}> 0
//# NEW <{aReturnStmt}> 1
Types["/go/ast/BasicLit"] = new(*go_ast.BasicLit)
//# OLD <{aBasicLit}> 0
//# NEW <{aBasicLit}> 1
Types["/go/ast/CaseClause"] = new(*go_ast.CaseClause)
//# OLD <{aCaseClause}> 0
//# NEW <{aCaseClause}> 1
Types["/go/ast/CommClause"] = new(*go_ast.CommClause)
//# OLD <{aCommClause}> 0
//# NEW <{aCommClause}> 1
Types["/go/ast/Decl"] = new(*go_ast.Decl)
//# OLD <{aDecl}> 0
//# NEW <{aDecl}> 1
//? Consts["/go/ast/Con"] = go_ast.Con
//# OLD <{aCon}> 0
//# NEW <{aCon}> 1
Types["/go/ast/IndexExpr"] = new(*go_ast.IndexExpr)
//# OLD <{aIndexExpr}> 0
//# NEW <{aIndexExpr}> 1
//? Consts["/go/ast/RECV"] = go_ast.RECV
//# OLD <{aRECV}> 0
//# NEW <{aRECV}> 1


//      var go/build.ToolDir
//      var go/build.Default
//     func go/build.ArchChar
//     type go/build.Package
//    const go/build.FindOnly
//    const go/build.AllowBinary
//     func go/build.Import
//     type go/build.NoGoError
//     type go/build.ImportMode
//     func go/build.ImportDir
//     type go/build.Context
//     func go/build.IsLocalImport

Types["/go/build/Context"] = new(*go_build.Context)
//# OLD <{bContext}> 0
//# NEW <{bContext}> 1
Funcs["/go/build/IsLocalImport"] = go_build.IsLocalImport
//# OLD <{bIsLocalImport}> 0
//# NEW <{bIsLocalImport}> 1
Vars["/go/build/ToolDir"] = &go_build.ToolDir
//# OLD <{bToolDir}> 0
//# NEW <{bToolDir}> 1
Vars["/go/build/Default"] = &go_build.Default
//# OLD <{bDefault}> 0
//# NEW <{bDefault}> 1
Funcs["/go/build/ArchChar"] = go_build.ArchChar
//# OLD <{bArchChar}> 0
//# NEW <{bArchChar}> 1
Types["/go/build/Package"] = new(*go_build.Package)
//# OLD <{bPackage}> 0
//# NEW <{bPackage}> 1
//? Consts["/go/build/FindOnly"] = go_build.FindOnly
//# OLD <{bFindOnly}> 0
//# NEW <{bFindOnly}> 1
//? Consts["/go/build/AllowBinary"] = go_build.AllowBinary
//# OLD <{bAllowBinary}> 0
//# NEW <{bAllowBinary}> 1
Funcs["/go/build/Import"] = go_build.Import
//# OLD <{bImport}> 0
//# NEW <{bImport}> 1
Types["/go/build/NoGoError"] = new(*go_build.NoGoError)
//# OLD <{bNoGoError}> 0
//# NEW <{bNoGoError}> 1
Types["/go/build/ImportMode"] = new(*go_build.ImportMode)
//# OLD <{bImportMode}> 0
//# NEW <{bImportMode}> 1
Funcs["/go/build/ImportDir"] = go_build.ImportDir
//# OLD <{bImportDir}> 0
//# NEW <{bImportDir}> 1


//     type go/doc.Package
//     func go/doc.Synopsis
//     type go/doc.Value
//     type go/doc.Func
//     type go/doc.Example
//     func go/doc.ToText
//     func go/doc.ToHTML
//     func go/doc.New
//     func go/doc.Examples
//     type go/doc.Mode
//     type go/doc.Type
//    const go/doc.AllMethods
//    const go/doc.AllDecls
//     type go/doc.Filter

//? Consts["/go/doc/AllDecls"] = go_doc.AllDecls
//# OLD <{dAllDecls}> 0
//# NEW <{dAllDecls}> 1
Types["/go/doc/Filter"] = new(*go_doc.Filter)
//# OLD <{dFilter}> 0
//# NEW <{dFilter}> 1
Types["/go/doc/Package"] = new(*go_doc.Package)
//# OLD <{dPackage}> 0
//# NEW <{dPackage}> 1
Funcs["/go/doc/Synopsis"] = go_doc.Synopsis
//# OLD <{dSynopsis}> 0
//# NEW <{dSynopsis}> 1
Types["/go/doc/Value"] = new(*go_doc.Value)
//# OLD <{dValue}> 1
//# NEW <{dValue}> 2
Types["/go/doc/Func"] = new(*go_doc.Func)
//# OLD <{dFunc}> 0
//# NEW <{dFunc}> 1
Types["/go/doc/Example"] = new(*go_doc.Example)
//# OLD <{dExample}> 0
//# NEW <{dExample}> 1
Funcs["/go/doc/ToText"] = go_doc.ToText
//# OLD <{dToText}> 0
//# NEW <{dToText}> 1
Funcs["/go/doc/ToHTML"] = go_doc.ToHTML
//# OLD <{dToHTML}> 0
//# NEW <{dToHTML}> 1
Funcs["/go/doc/New"] = go_doc.New
//# OLD <{dNew}> 1
//# NEW <{dNew}> 2
Funcs["/go/doc/Examples"] = go_doc.Examples
//# OLD <{dExamples}> 0
//# NEW <{dExamples}> 1
Types["/go/doc/Mode"] = new(*go_doc.Mode)
//# OLD <{dMode}> 0
//# NEW <{dMode}> 1
Types["/go/doc/Type"] = new(*go_doc.Type)
//# OLD <{dType}> 1
//# NEW <{dType}> 2
//? Consts["/go/doc/AllMethods"] = go_doc.AllMethods
//# OLD <{dAllMethods}> 0
//# NEW <{dAllMethods}> 1


//     func go/parser.ParseDir
//    const go/parser.DeclarationErrors
//     func go/parser.ParseFile
//     func go/parser.ParseExpr
//    const go/parser.ParseComments
//    const go/parser.PackageClauseOnly
//    const go/parser.Trace
//     type go/parser.Mode
//    const go/parser.ImportsOnly
//    const go/parser.SpuriousErrors

Funcs["/go/parser/ParseFile"] = go_parser.ParseFile
//# OLD <{pParseFile}> 0
//# NEW <{pParseFile}> 1
Funcs["/go/parser/ParseExpr"] = go_parser.ParseExpr
//# OLD <{pParseExpr}> 0
//# NEW <{pParseExpr}> 1
//? Consts["/go/parser/ParseComments"] = go_parser.ParseComments
//# OLD <{pParseComments}> 0
//# NEW <{pParseComments}> 1
//? Consts["/go/parser/PackageClauseOnly"] = go_parser.PackageClauseOnly
//# OLD <{pPackageClauseOnly}> 0
//# NEW <{pPackageClauseOnly}> 1
//? Consts["/go/parser/Trace"] = go_parser.Trace
//# OLD <{pTrace}> 0
//# NEW <{pTrace}> 1
Types["/go/parser/Mode"] = new(*go_parser.Mode)
//# OLD <{pMode}> 0
//# NEW <{pMode}> 1
//? Consts["/go/parser/ImportsOnly"] = go_parser.ImportsOnly
//# OLD <{pImportsOnly}> 0
//# NEW <{pImportsOnly}> 1
//? Consts["/go/parser/SpuriousErrors"] = go_parser.SpuriousErrors
//# OLD <{pSpuriousErrors}> 0
//# NEW <{pSpuriousErrors}> 1
Funcs["/go/parser/ParseDir"] = go_parser.ParseDir
//# OLD <{pParseDir}> 0
//# NEW <{pParseDir}> 1
//? Consts["/go/parser/DeclarationErrors"] = go_parser.DeclarationErrors
//# OLD <{pDeclarationErrors}> 0
//# NEW <{pDeclarationErrors}> 1


//     type go/printer.CommentedNode
//    const go/printer.TabIndent
//    const go/printer.UseSpaces
//     type go/printer.Config
//    const go/printer.RawFormat
//     func go/printer.Fprint
//     type go/printer.Mode
//    const go/printer.SourcePos

Types["/go/printer/CommentedNode"] = new(*go_printer.CommentedNode)
//# OLD <{pCommentedNode}> 0
//# NEW <{pCommentedNode}> 1
//? Consts["/go/printer/TabIndent"] = go_printer.TabIndent
//# OLD <{pTabIndent}> 0
//# NEW <{pTabIndent}> 1
//? Consts["/go/printer/UseSpaces"] = go_printer.UseSpaces
//# OLD <{pUseSpaces}> 0
//# NEW <{pUseSpaces}> 1
Types["/go/printer/Config"] = new(*go_printer.Config)
//# OLD <{pConfig}> 0
//# NEW <{pConfig}> 1
//? Consts["/go/printer/RawFormat"] = go_printer.RawFormat
//# OLD <{pRawFormat}> 0
//# NEW <{pRawFormat}> 1
Funcs["/go/printer/Fprint"] = go_printer.Fprint
//# OLD <{pFprint}> 0
//# NEW <{pFprint}> 1
Types["/go/printer/Mode"] = new(*go_printer.Mode)
//# OLD <{pMode}> 1
//# NEW <{pMode}> 2
//? Consts["/go/printer/SourcePos"] = go_printer.SourcePos
//# OLD <{pSourcePos}> 0
//# NEW <{pSourcePos}> 1


//     type go/scanner.ErrorHandler
//     func go/scanner.PrintError
//     type go/scanner.ErrorList
//    const go/scanner.ScanComments
//     type go/scanner.Mode
//     type go/scanner.Scanner
//     type go/scanner.Error

//? Consts["/go/scanner/ScanComments"] = go_scanner.ScanComments
//# OLD <{sScanComments}> 0
//# NEW <{sScanComments}> 1
Types["/go/scanner/Mode"] = new(*go_scanner.Mode)
//# OLD <{sMode}> 0
//# NEW <{sMode}> 1
Types["/go/scanner/Scanner"] = new(*go_scanner.Scanner)
//# OLD <{sScanner}> 1
//# NEW <{sScanner}> 2
Types["/go/scanner/Error"] = new(*go_scanner.Error)
//# OLD <{sError}> 0
//# NEW <{sError}> 1
Types["/go/scanner/ErrorHandler"] = new(*go_scanner.ErrorHandler)
//# OLD <{sErrorHandler}> 0
//# NEW <{sErrorHandler}> 1
Funcs["/go/scanner/PrintError"] = go_scanner.PrintError
//# OLD <{sPrintError}> 0
//# NEW <{sPrintError}> 1
Types["/go/scanner/ErrorList"] = new(*go_scanner.ErrorList)
//# OLD <{sErrorList}> 0
//# NEW <{sErrorList}> 1


//    const go/token.COMMA
//    const go/token.STRING
//    const go/token.ILLEGAL
//    const go/token.CHAR
//    const go/token.EOF
//    const go/token.ELSE
//    const go/token.AND_NOT
//    const go/token.GTR
//    const go/token.NoPos
//    const go/token.QUO_ASSIGN
//     type go/token.FileSet
//    const go/token.AND_NOT_ASSIGN
//    const go/token.SUB
//    const go/token.MUL
//    const go/token.ADD
//    const go/token.CONST
//    const go/token.LPAREN
//     type go/token.Pos
//    const go/token.AND
//    const go/token.OR
//    const go/token.GOTO
//     func go/token.Lookup
//    const go/token.RPAREN
//    const go/token.PERIOD
//    const go/token.LBRACE
//    const go/token.SHL
//    const go/token.IMPORT
//    const go/token.REM
//    const go/token.COLON
//    const go/token.LAND
//    const go/token.INT
//    const go/token.DEFER
//    const go/token.COMMENT
//    const go/token.MUL_ASSIGN
//    const go/token.ASSIGN
//    const go/token.INTERFACE
//    const go/token.LSS
//    const go/token.EQL
//    const go/token.SHR
//    const go/token.OR_ASSIGN
//    const go/token.NEQ
//     type go/token.Position
//    const go/token.RBRACE
//    const go/token.INC
//    const go/token.BREAK
//     type go/token.File
//    const go/token.QUO
//    const go/token.GEQ
//    const go/token.FOR
//    const go/token.REM_ASSIGN
//    const go/token.RETURN
//    const go/token.IDENT
//    const go/token.LowestPrec
//    const go/token.VAR
//    const go/token.SEMICOLON
//    const go/token.UnaryPrec
//    const go/token.DEFINE
//    const go/token.CASE
//    const go/token.CONTINUE
//    const go/token.STRUCT
//    const go/token.SHR_ASSIGN
//    const go/token.DEC
//    const go/token.IMAG
//    const go/token.HighestPrec
//    const go/token.ARROW
//    const go/token.LOR
//    const go/token.MAP
//    const go/token.XOR
//    const go/token.ADD_ASSIGN
//    const go/token.ELLIPSIS
//    const go/token.LBRACK
//    const go/token.LEQ
//    const go/token.SUB_ASSIGN
//    const go/token.SELECT
//    const go/token.RBRACK
//    const go/token.FUNC
//    const go/token.SHL_ASSIGN
//    const go/token.CHAN
//    const go/token.NOT
//    const go/token.DEFAULT
//    const go/token.IF
//    const go/token.TYPE
//    const go/token.SWITCH
//    const go/token.RANGE
//     type go/token.Token
//     func go/token.NewFileSet
//    const go/token.AND_ASSIGN
//    const go/token.FALLTHROUGH
//    const go/token.PACKAGE
//    const go/token.FLOAT
//    const go/token.XOR_ASSIGN
//    const go/token.GO

//? Consts["/go/token/RETURN"] = go_token.RETURN
//# OLD <{tRETURN}> 0
//# NEW <{tRETURN}> 1
//? Consts["/go/token/IDENT"] = go_token.IDENT
//# OLD <{tIDENT}> 0
//# NEW <{tIDENT}> 1
//? Consts["/go/token/LowestPrec"] = go_token.LowestPrec
//# OLD <{tLowestPrec}> 0
//# NEW <{tLowestPrec}> 1
//? Consts["/go/token/VAR"] = go_token.VAR
//# OLD <{tVAR}> 0
//# NEW <{tVAR}> 1
//? Consts["/go/token/SEMICOLON"] = go_token.SEMICOLON
//# OLD <{tSEMICOLON}> 0
//# NEW <{tSEMICOLON}> 1
//? Consts["/go/token/UnaryPrec"] = go_token.UnaryPrec
//# OLD <{tUnaryPrec}> 0
//# NEW <{tUnaryPrec}> 1
//? Consts["/go/token/DEFINE"] = go_token.DEFINE
//# OLD <{tDEFINE}> 0
//# NEW <{tDEFINE}> 1
//? Consts["/go/token/CASE"] = go_token.CASE
//# OLD <{tCASE}> 0
//# NEW <{tCASE}> 1
//? Consts["/go/token/CONTINUE"] = go_token.CONTINUE
//# OLD <{tCONTINUE}> 0
//# NEW <{tCONTINUE}> 1
//? Consts["/go/token/STRUCT"] = go_token.STRUCT
//# OLD <{tSTRUCT}> 0
//# NEW <{tSTRUCT}> 1
//? Consts["/go/token/SHR_ASSIGN"] = go_token.SHR_ASSIGN
//# OLD <{tSHR_ASSIGN}> 0
//# NEW <{tSHR_ASSIGN}> 1
//? Consts["/go/token/DEC"] = go_token.DEC
//# OLD <{tDEC}> 0
//# NEW <{tDEC}> 1
//? Consts["/go/token/IMAG"] = go_token.IMAG
//# OLD <{tIMAG}> 0
//# NEW <{tIMAG}> 1
//? Consts["/go/token/HighestPrec"] = go_token.HighestPrec
//# OLD <{tHighestPrec}> 0
//# NEW <{tHighestPrec}> 1
//? Consts["/go/token/ARROW"] = go_token.ARROW
//# OLD <{tARROW}> 0
//# NEW <{tARROW}> 1
//? Consts["/go/token/LOR"] = go_token.LOR
//# OLD <{tLOR}> 0
//# NEW <{tLOR}> 1
//? Consts["/go/token/MAP"] = go_token.MAP
//# OLD <{tMAP}> 0
//# NEW <{tMAP}> 1
//? Consts["/go/token/XOR"] = go_token.XOR
//# OLD <{tXOR}> 0
//# NEW <{tXOR}> 1
//? Consts["/go/token/ADD_ASSIGN"] = go_token.ADD_ASSIGN
//# OLD <{tADD_ASSIGN}> 0
//# NEW <{tADD_ASSIGN}> 1
//? Consts["/go/token/ELLIPSIS"] = go_token.ELLIPSIS
//# OLD <{tELLIPSIS}> 0
//# NEW <{tELLIPSIS}> 1
//? Consts["/go/token/LBRACK"] = go_token.LBRACK
//# OLD <{tLBRACK}> 0
//# NEW <{tLBRACK}> 1
//? Consts["/go/token/LEQ"] = go_token.LEQ
//# OLD <{tLEQ}> 0
//# NEW <{tLEQ}> 1
//? Consts["/go/token/SUB_ASSIGN"] = go_token.SUB_ASSIGN
//# OLD <{tSUB_ASSIGN}> 0
//# NEW <{tSUB_ASSIGN}> 1
//? Consts["/go/token/SELECT"] = go_token.SELECT
//# OLD <{tSELECT}> 0
//# NEW <{tSELECT}> 1
//? Consts["/go/token/RBRACK"] = go_token.RBRACK
//# OLD <{tRBRACK}> 0
//# NEW <{tRBRACK}> 1
//? Consts["/go/token/FUNC"] = go_token.FUNC
//# OLD <{tFUNC}> 0
//# NEW <{tFUNC}> 1
//? Consts["/go/token/SHL_ASSIGN"] = go_token.SHL_ASSIGN
//# OLD <{tSHL_ASSIGN}> 0
//# NEW <{tSHL_ASSIGN}> 1
//? Consts["/go/token/CHAN"] = go_token.CHAN
//# OLD <{tCHAN}> 0
//# NEW <{tCHAN}> 1
//? Consts["/go/token/NOT"] = go_token.NOT
//# OLD <{tNOT}> 0
//# NEW <{tNOT}> 1
//? Consts["/go/token/DEFAULT"] = go_token.DEFAULT
//# OLD <{tDEFAULT}> 0
//# NEW <{tDEFAULT}> 1
//? Consts["/go/token/IF"] = go_token.IF
//# OLD <{tIF}> 0
//# NEW <{tIF}> 1
//? Consts["/go/token/TYPE"] = go_token.TYPE
//# OLD <{tTYPE}> 0
//# NEW <{tTYPE}> 1
//? Consts["/go/token/SWITCH"] = go_token.SWITCH
//# OLD <{tSWITCH}> 0
//# NEW <{tSWITCH}> 1
//? Consts["/go/token/RANGE"] = go_token.RANGE
//# OLD <{tRANGE}> 0
//# NEW <{tRANGE}> 1
Types["/go/token/Token"] = new(*go_token.Token)
//# OLD <{tToken}> 0
//# NEW <{tToken}> 1
Funcs["/go/token/NewFileSet"] = go_token.NewFileSet
//# OLD <{tNewFileSet}> 0
//# NEW <{tNewFileSet}> 1
//? Consts["/go/token/AND_ASSIGN"] = go_token.AND_ASSIGN
//# OLD <{tAND_ASSIGN}> 0
//# NEW <{tAND_ASSIGN}> 1
//? Consts["/go/token/FALLTHROUGH"] = go_token.FALLTHROUGH
//# OLD <{tFALLTHROUGH}> 0
//# NEW <{tFALLTHROUGH}> 1
//? Consts["/go/token/PACKAGE"] = go_token.PACKAGE
//# OLD <{tPACKAGE}> 0
//# NEW <{tPACKAGE}> 1
//? Consts["/go/token/FLOAT"] = go_token.FLOAT
//# OLD <{tFLOAT}> 0
//# NEW <{tFLOAT}> 1
//? Consts["/go/token/XOR_ASSIGN"] = go_token.XOR_ASSIGN
//# OLD <{tXOR_ASSIGN}> 0
//# NEW <{tXOR_ASSIGN}> 1
//? Consts["/go/token/GO"] = go_token.GO
//# OLD <{tGO}> 0
//# NEW <{tGO}> 1
//? Consts["/go/token/COMMA"] = go_token.COMMA
//# OLD <{tCOMMA}> 0
//# NEW <{tCOMMA}> 1
//? Consts["/go/token/STRING"] = go_token.STRING
//# OLD <{tSTRING}> 0
//# NEW <{tSTRING}> 1
//? Consts["/go/token/ILLEGAL"] = go_token.ILLEGAL
//# OLD <{tILLEGAL}> 0
//# NEW <{tILLEGAL}> 1
//? Consts["/go/token/CHAR"] = go_token.CHAR
//# OLD <{tCHAR}> 0
//# NEW <{tCHAR}> 1
//? Consts["/go/token/EOF"] = go_token.EOF
//# OLD <{tEOF}> 0
//# NEW <{tEOF}> 1
//? Consts["/go/token/ELSE"] = go_token.ELSE
//# OLD <{tELSE}> 0
//# NEW <{tELSE}> 1
//? Consts["/go/token/AND_NOT"] = go_token.AND_NOT
//# OLD <{tAND_NOT}> 0
//# NEW <{tAND_NOT}> 1
//? Consts["/go/token/GTR"] = go_token.GTR
//# OLD <{tGTR}> 0
//# NEW <{tGTR}> 1
//? Consts["/go/token/NoPos"] = go_token.NoPos
//# OLD <{tNoPos}> 0
//# NEW <{tNoPos}> 1
//? Consts["/go/token/QUO_ASSIGN"] = go_token.QUO_ASSIGN
//# OLD <{tQUO_ASSIGN}> 0
//# NEW <{tQUO_ASSIGN}> 1
Types["/go/token/FileSet"] = new(*go_token.FileSet)
//# OLD <{tFileSet}> 0
//# NEW <{tFileSet}> 1
//? Consts["/go/token/AND_NOT_ASSIGN"] = go_token.AND_NOT_ASSIGN
//# OLD <{tAND_NOT_ASSIGN}> 0
//# NEW <{tAND_NOT_ASSIGN}> 1
//? Consts["/go/token/SUB"] = go_token.SUB
//# OLD <{tSUB}> 0
//# NEW <{tSUB}> 1
//? Consts["/go/token/MUL"] = go_token.MUL
//# OLD <{tMUL}> 0
//# NEW <{tMUL}> 1
//? Consts["/go/token/ADD"] = go_token.ADD
//# OLD <{tADD}> 0
//# NEW <{tADD}> 1
//? Consts["/go/token/CONST"] = go_token.CONST
//# OLD <{tCONST}> 0
//# NEW <{tCONST}> 1
//? Consts["/go/token/LPAREN"] = go_token.LPAREN
//# OLD <{tLPAREN}> 0
//# NEW <{tLPAREN}> 1
Types["/go/token/Pos"] = new(*go_token.Pos)
//# OLD <{tPos}> 0
//# NEW <{tPos}> 1
//? Consts["/go/token/AND"] = go_token.AND
//# OLD <{tAND}> 0
//# NEW <{tAND}> 1
//? Consts["/go/token/OR"] = go_token.OR
//# OLD <{tOR}> 0
//# NEW <{tOR}> 1
//? Consts["/go/token/GOTO"] = go_token.GOTO
//# OLD <{tGOTO}> 0
//# NEW <{tGOTO}> 1
Funcs["/go/token/Lookup"] = go_token.Lookup
//# OLD <{tLookup}> 0
//# NEW <{tLookup}> 1
//? Consts["/go/token/RPAREN"] = go_token.RPAREN
//# OLD <{tRPAREN}> 0
//# NEW <{tRPAREN}> 1
//? Consts["/go/token/PERIOD"] = go_token.PERIOD
//# OLD <{tPERIOD}> 0
//# NEW <{tPERIOD}> 1
//? Consts["/go/token/LBRACE"] = go_token.LBRACE
//# OLD <{tLBRACE}> 0
//# NEW <{tLBRACE}> 1
//? Consts["/go/token/SHL"] = go_token.SHL
//# OLD <{tSHL}> 0
//# NEW <{tSHL}> 1
//? Consts["/go/token/IMPORT"] = go_token.IMPORT
//# OLD <{tIMPORT}> 0
//# NEW <{tIMPORT}> 1
//? Consts["/go/token/REM"] = go_token.REM
//# OLD <{tREM}> 0
//# NEW <{tREM}> 1
//? Consts["/go/token/COLON"] = go_token.COLON
//# OLD <{tCOLON}> 0
//# NEW <{tCOLON}> 1
//? Consts["/go/token/LAND"] = go_token.LAND
//# OLD <{tLAND}> 0
//# NEW <{tLAND}> 1
//? Consts["/go/token/INT"] = go_token.INT
//# OLD <{tINT}> 0
//# NEW <{tINT}> 1
//? Consts["/go/token/DEFER"] = go_token.DEFER
//# OLD <{tDEFER}> 0
//# NEW <{tDEFER}> 1
//? Consts["/go/token/COMMENT"] = go_token.COMMENT
//# OLD <{tCOMMENT}> 0
//# NEW <{tCOMMENT}> 1
//? Consts["/go/token/MUL_ASSIGN"] = go_token.MUL_ASSIGN
//# OLD <{tMUL_ASSIGN}> 0
//# NEW <{tMUL_ASSIGN}> 1
//? Consts["/go/token/ASSIGN"] = go_token.ASSIGN
//# OLD <{tASSIGN}> 0
//# NEW <{tASSIGN}> 1
//? Consts["/go/token/INTERFACE"] = go_token.INTERFACE
//# OLD <{tINTERFACE}> 0
//# NEW <{tINTERFACE}> 1
//? Consts["/go/token/LSS"] = go_token.LSS
//# OLD <{tLSS}> 0
//# NEW <{tLSS}> 1
//? Consts["/go/token/EQL"] = go_token.EQL
//# OLD <{tEQL}> 0
//# NEW <{tEQL}> 1
//? Consts["/go/token/SHR"] = go_token.SHR
//# OLD <{tSHR}> 0
//# NEW <{tSHR}> 1
//? Consts["/go/token/OR_ASSIGN"] = go_token.OR_ASSIGN
//# OLD <{tOR_ASSIGN}> 0
//# NEW <{tOR_ASSIGN}> 1
//? Consts["/go/token/NEQ"] = go_token.NEQ
//# OLD <{tNEQ}> 0
//# NEW <{tNEQ}> 1
Types["/go/token/Position"] = new(*go_token.Position)
//# OLD <{tPosition}> 0
//# NEW <{tPosition}> 1
//? Consts["/go/token/RBRACE"] = go_token.RBRACE
//# OLD <{tRBRACE}> 0
//# NEW <{tRBRACE}> 1
//? Consts["/go/token/INC"] = go_token.INC
//# OLD <{tINC}> 0
//# NEW <{tINC}> 1
//? Consts["/go/token/BREAK"] = go_token.BREAK
//# OLD <{tBREAK}> 0
//# NEW <{tBREAK}> 1
Types["/go/token/File"] = new(*go_token.File)
//# OLD <{tFile}> 0
//# NEW <{tFile}> 1
//? Consts["/go/token/QUO"] = go_token.QUO
//# OLD <{tQUO}> 0
//# NEW <{tQUO}> 1
//? Consts["/go/token/GEQ"] = go_token.GEQ
//# OLD <{tGEQ}> 0
//# NEW <{tGEQ}> 1
//? Consts["/go/token/FOR"] = go_token.FOR
//# OLD <{tFOR}> 0
//# NEW <{tFOR}> 1
//? Consts["/go/token/REM_ASSIGN"] = go_token.REM_ASSIGN
//# OLD <{tREM_ASSIGN}> 0
//# NEW <{tREM_ASSIGN}> 1


//     type hash.Hash64
//     type hash.Hash32
//     type hash.Hash

Types["/hash/Hash32"] = new(*hash.Hash32)
//# OLD <{hHash32}> 0
//# NEW <{hHash32}> 1
Types["/hash/Hash"] = new(*hash.Hash)
//# OLD <{hHash}> 0
//# NEW <{hHash}> 1
Types["/hash/Hash64"] = new(*hash.Hash64)
//# OLD <{hHash64}> 0
//# NEW <{hHash64}> 1


//     func hash/adler32.New
//    const hash/adler32.Size
//     func hash/adler32.Checksum

//? Consts["/hash/adler32/Size"] = hash_adler32.Size
//# OLD <{aSize}> 0
//# NEW <{aSize}> 1
Funcs["/hash/adler32/Checksum"] = hash_adler32.Checksum
//# OLD <{aChecksum}> 0
//# NEW <{aChecksum}> 1
Funcs["/hash/adler32/New"] = hash_adler32.New
//# OLD <{aNew}> 0
//# NEW <{aNew}> 1


//     func hash/crc32.Checksum
//     type hash/crc32.Table
//    const hash/crc32.IEEE
//    const hash/crc32.Size
//     func hash/crc32.ChecksumIEEE
//    const hash/crc32.Koopman
//     func hash/crc32.Update
//     func hash/crc32.NewIEEE
//     func hash/crc32.New
//     func hash/crc32.MakeTable
//    const hash/crc32.Castagnoli
//      var hash/crc32.IEEETable

Funcs["/hash/crc32/Checksum"] = hash_crc32.Checksum
//# OLD <{cChecksum}> 0
//# NEW <{cChecksum}> 1
Types["/hash/crc32/Table"] = new(*hash_crc32.Table)
//# OLD <{cTable}> 0
//# NEW <{cTable}> 1
//? Consts["/hash/crc32/IEEE"] = hash_crc32.IEEE
//# OLD <{cIEEE}> 0
//# NEW <{cIEEE}> 1
//? Consts["/hash/crc32/Size"] = hash_crc32.Size
//# OLD <{cSize}> 0
//# NEW <{cSize}> 1
Funcs["/hash/crc32/ChecksumIEEE"] = hash_crc32.ChecksumIEEE
//# OLD <{cChecksumIEEE}> 0
//# NEW <{cChecksumIEEE}> 1
//? Consts["/hash/crc32/Koopman"] = hash_crc32.Koopman
//# OLD <{cKoopman}> 0
//# NEW <{cKoopman}> 1
Funcs["/hash/crc32/Update"] = hash_crc32.Update
//# OLD <{cUpdate}> 0
//# NEW <{cUpdate}> 1
Funcs["/hash/crc32/NewIEEE"] = hash_crc32.NewIEEE
//# OLD <{cNewIEEE}> 0
//# NEW <{cNewIEEE}> 1
Funcs["/hash/crc32/New"] = hash_crc32.New
//# OLD <{cNew}> 0
//# NEW <{cNew}> 1
Funcs["/hash/crc32/MakeTable"] = hash_crc32.MakeTable
//# OLD <{cMakeTable}> 0
//# NEW <{cMakeTable}> 1
//? Consts["/hash/crc32/Castagnoli"] = hash_crc32.Castagnoli
//# OLD <{cCastagnoli}> 0
//# NEW <{cCastagnoli}> 1
Vars["/hash/crc32/IEEETable"] = &hash_crc32.IEEETable
//# OLD <{cIEEETable}> 0
//# NEW <{cIEEETable}> 1


//    const hash/crc64.ECMA
//     type hash/crc64.Table
//    const hash/crc64.Size
//    const hash/crc64.ISO
//     func hash/crc64.Checksum
//     func hash/crc64.MakeTable
//     func hash/crc64.New
//     func hash/crc64.Update

//? Consts["/hash/crc64/ISO"] = hash_crc64.ISO
//# OLD <{cISO}> 0
//# NEW <{cISO}> 1
Funcs["/hash/crc64/Checksum"] = hash_crc64.Checksum
//# OLD <{cChecksum}> 1
//# NEW <{cChecksum}> 2
Funcs["/hash/crc64/MakeTable"] = hash_crc64.MakeTable
//# OLD <{cMakeTable}> 1
//# NEW <{cMakeTable}> 2
Funcs["/hash/crc64/New"] = hash_crc64.New
//# OLD <{cNew}> 1
//# NEW <{cNew}> 2
Funcs["/hash/crc64/Update"] = hash_crc64.Update
//# OLD <{cUpdate}> 1
//# NEW <{cUpdate}> 2
//? Consts["/hash/crc64/ECMA"] = hash_crc64.ECMA
//# OLD <{cECMA}> 0
//# NEW <{cECMA}> 1
Types["/hash/crc64/Table"] = new(*hash_crc64.Table)
//# OLD <{cTable}> 1
//# NEW <{cTable}> 2
//? Consts["/hash/crc64/Size"] = hash_crc64.Size
//# OLD <{cSize}> 1
//# NEW <{cSize}> 2


//     func hash/fnv.New64
//     func hash/fnv.New32a
//     func hash/fnv.New64a
//     func hash/fnv.New32

Funcs["/hash/fnv/New64"] = hash_fnv.New64
//# OLD <{fNew64}> 0
//# NEW <{fNew64}> 1
Funcs["/hash/fnv/New32a"] = hash_fnv.New32a
//# OLD <{fNew32a}> 0
//# NEW <{fNew32a}> 1
Funcs["/hash/fnv/New64a"] = hash_fnv.New64a
//# OLD <{fNew64a}> 0
//# NEW <{fNew64a}> 1
Funcs["/hash/fnv/New32"] = hash_fnv.New32
//# OLD <{fNew32}> 0
//# NEW <{fNew32}> 1


//     func html.UnescapeString
//     func html.EscapeString

Funcs["/html/EscapeString"] = html.EscapeString
//# OLD <{hEscapeString}> 0
//# NEW <{hEscapeString}> 1
Funcs["/html/UnescapeString"] = html.UnescapeString
//# OLD <{hUnescapeString}> 0
//# NEW <{hUnescapeString}> 1


//     func html/template.New
//     func html/template.JSEscape
//    const html/template.ErrPartialEscape
//    const html/template.ErrAmbigContext
//    const html/template.ErrBadHTML
//     func html/template.HTMLEscaper
//     func html/template.ParseGlob
//     func html/template.ParseFiles
//     type html/template.Template
//    const html/template.ErrNoSuchTemplate
//     func html/template.Must
//     type html/template.HTMLAttr
//     type html/template.FuncMap
//     func html/template.JSEscapeString
//     func html/template.URLQueryEscaper
//     func html/template.HTMLEscape
//     type html/template.JS
//    const html/template.ErrEndContext
//    const html/template.ErrOutputContext
//    const html/template.ErrSlashAmbig
//    const html/template.OK
//    const html/template.ErrBranchEnd
//     func html/template.JSEscaper
//     type html/template.HTML
//     type html/template.Error
//    const html/template.ErrPartialCharset
//     type html/template.CSS
//     func html/template.HTMLEscapeString
//     type html/template.URL
//     type html/template.ErrorCode
//    const html/template.ErrRangeLoopReentry
//     type html/template.JSStr

Types["/html/template/ErrorCode"] = new(*html_template.ErrorCode)
//# OLD <{tErrorCode}> 0
//# NEW <{tErrorCode}> 1
//? Consts["/html/template/ErrRangeLoopReentry"] = html_template.ErrRangeLoopReentry
//# OLD <{tErrRangeLoopReentry}> 0
//# NEW <{tErrRangeLoopReentry}> 1
Types["/html/template/JSStr"] = new(*html_template.JSStr)
//# OLD <{tJSStr}> 0
//# NEW <{tJSStr}> 1
Funcs["/html/template/New"] = html_template.New
//# OLD <{tNew}> 0
//# NEW <{tNew}> 1
Funcs["/html/template/JSEscape"] = html_template.JSEscape
//# OLD <{tJSEscape}> 0
//# NEW <{tJSEscape}> 1
//? Consts["/html/template/ErrPartialEscape"] = html_template.ErrPartialEscape
//# OLD <{tErrPartialEscape}> 0
//# NEW <{tErrPartialEscape}> 1
//? Consts["/html/template/ErrAmbigContext"] = html_template.ErrAmbigContext
//# OLD <{tErrAmbigContext}> 0
//# NEW <{tErrAmbigContext}> 1
//? Consts["/html/template/ErrBadHTML"] = html_template.ErrBadHTML
//# OLD <{tErrBadHTML}> 0
//# NEW <{tErrBadHTML}> 1
Funcs["/html/template/HTMLEscaper"] = html_template.HTMLEscaper
//# OLD <{tHTMLEscaper}> 0
//# NEW <{tHTMLEscaper}> 1
Funcs["/html/template/ParseGlob"] = html_template.ParseGlob
//# OLD <{tParseGlob}> 0
//# NEW <{tParseGlob}> 1
Funcs["/html/template/ParseFiles"] = html_template.ParseFiles
//# OLD <{tParseFiles}> 0
//# NEW <{tParseFiles}> 1
Types["/html/template/Template"] = new(*html_template.Template)
//# OLD <{tTemplate}> 0
//# NEW <{tTemplate}> 1
//? Consts["/html/template/ErrNoSuchTemplate"] = html_template.ErrNoSuchTemplate
//# OLD <{tErrNoSuchTemplate}> 0
//# NEW <{tErrNoSuchTemplate}> 1
Funcs["/html/template/Must"] = html_template.Must
//# OLD <{tMust}> 0
//# NEW <{tMust}> 1
Types["/html/template/HTMLAttr"] = new(*html_template.HTMLAttr)
//# OLD <{tHTMLAttr}> 0
//# NEW <{tHTMLAttr}> 1
Types["/html/template/FuncMap"] = new(*html_template.FuncMap)
//# OLD <{tFuncMap}> 0
//# NEW <{tFuncMap}> 1
Funcs["/html/template/JSEscapeString"] = html_template.JSEscapeString
//# OLD <{tJSEscapeString}> 0
//# NEW <{tJSEscapeString}> 1
Funcs["/html/template/URLQueryEscaper"] = html_template.URLQueryEscaper
//# OLD <{tURLQueryEscaper}> 0
//# NEW <{tURLQueryEscaper}> 1
Funcs["/html/template/HTMLEscape"] = html_template.HTMLEscape
//# OLD <{tHTMLEscape}> 0
//# NEW <{tHTMLEscape}> 1
Types["/html/template/JS"] = new(*html_template.JS)
//# OLD <{tJS}> 0
//# NEW <{tJS}> 1
//? Consts["/html/template/ErrEndContext"] = html_template.ErrEndContext
//# OLD <{tErrEndContext}> 0
//# NEW <{tErrEndContext}> 1
//? Consts["/html/template/ErrOutputContext"] = html_template.ErrOutputContext
//# OLD <{tErrOutputContext}> 0
//# NEW <{tErrOutputContext}> 1
//? Consts["/html/template/ErrSlashAmbig"] = html_template.ErrSlashAmbig
//# OLD <{tErrSlashAmbig}> 0
//# NEW <{tErrSlashAmbig}> 1
//? Consts["/html/template/OK"] = html_template.OK
//# OLD <{tOK}> 0
//# NEW <{tOK}> 1
//? Consts["/html/template/ErrBranchEnd"] = html_template.ErrBranchEnd
//# OLD <{tErrBranchEnd}> 0
//# NEW <{tErrBranchEnd}> 1
Funcs["/html/template/JSEscaper"] = html_template.JSEscaper
//# OLD <{tJSEscaper}> 0
//# NEW <{tJSEscaper}> 1
Types["/html/template/HTML"] = new(*html_template.HTML)
//# OLD <{tHTML}> 0
//# NEW <{tHTML}> 1
Types["/html/template/Error"] = new(*html_template.Error)
//# OLD <{tError}> 0
//# NEW <{tError}> 1
//? Consts["/html/template/ErrPartialCharset"] = html_template.ErrPartialCharset
//# OLD <{tErrPartialCharset}> 0
//# NEW <{tErrPartialCharset}> 1
Types["/html/template/CSS"] = new(*html_template.CSS)
//# OLD <{tCSS}> 0
//# NEW <{tCSS}> 1
Funcs["/html/template/HTMLEscapeString"] = html_template.HTMLEscapeString
//# OLD <{tHTMLEscapeString}> 0
//# NEW <{tHTMLEscapeString}> 1
Types["/html/template/URL"] = new(*html_template.URL)
//# OLD <{tURL}> 0
//# NEW <{tURL}> 1


//     func image.NewUniform
//     func image.NewPaletted
//     func image.NewAlpha16
//     func image.NewAlpha
//     func image.RegisterFormat
//     type image.Alpha
//      var image.White
//     func image.NewRGBA
//     func image.NewNRGBA
//     func image.NewGray16
//     type image.YCbCrSubsampleRatio
//     type image.NRGBA
//     type image.Gray16
//     type image.Point
//      var image.ErrFormat
//      var image.Black
//     type image.Gray
//    const image.YCbCrSubsampleRatio444
//      var image.Transparent
//     func image.NewNRGBA64
//     type image.Alpha16
//    const image.YCbCrSubsampleRatio420
//      var image.Opaque
//     func image.NewRGBA64
//     type image.RGBA64
//     func image.DecodeConfig
//     func image.NewYCbCr
//     func image.Decode
//     type image.Config
//     type image.Paletted
//      var image.ZR
//     type image.Uniform
//     type image.YCbCr
//     func image.NewGray
//     type image.Image
//    const image.YCbCrSubsampleRatio422
//     type image.PalettedImage
//      var image.ZP
//     func image.Pt
//     func image.Rect
//     type image.NRGBA64
//     type image.RGBA
//     type image.Rectangle

Funcs["/image/NewAlpha16"] = image.NewAlpha16
//# OLD <{iNewAlpha16}> 0
//# NEW <{iNewAlpha16}> 1
Funcs["/image/NewAlpha"] = image.NewAlpha
//# OLD <{iNewAlpha}> 0
//# NEW <{iNewAlpha}> 1
Funcs["/image/RegisterFormat"] = image.RegisterFormat
//# OLD <{iRegisterFormat}> 0
//# NEW <{iRegisterFormat}> 1
Types["/image/Alpha"] = new(*image.Alpha)
//# OLD <{iAlpha}> 0
//# NEW <{iAlpha}> 1
Vars["/image/White"] = &image.White
//# OLD <{iWhite}> 0
//# NEW <{iWhite}> 1
Funcs["/image/NewRGBA"] = image.NewRGBA
//# OLD <{iNewRGBA}> 0
//# NEW <{iNewRGBA}> 1
Funcs["/image/NewNRGBA"] = image.NewNRGBA
//# OLD <{iNewNRGBA}> 0
//# NEW <{iNewNRGBA}> 1
Funcs["/image/NewGray16"] = image.NewGray16
//# OLD <{iNewGray16}> 0
//# NEW <{iNewGray16}> 1
Types["/image/YCbCrSubsampleRatio"] = new(*image.YCbCrSubsampleRatio)
//# OLD <{iYCbCrSubsampleRatio}> 0
//# NEW <{iYCbCrSubsampleRatio}> 1
Types["/image/NRGBA"] = new(*image.NRGBA)
//# OLD <{iNRGBA}> 0
//# NEW <{iNRGBA}> 1
Types["/image/Gray16"] = new(*image.Gray16)
//# OLD <{iGray16}> 0
//# NEW <{iGray16}> 1
Types["/image/Point"] = new(*image.Point)
//# OLD <{iPoint}> 0
//# NEW <{iPoint}> 1
Vars["/image/ErrFormat"] = &image.ErrFormat
//# OLD <{iErrFormat}> 0
//# NEW <{iErrFormat}> 1
Vars["/image/Black"] = &image.Black
//# OLD <{iBlack}> 0
//# NEW <{iBlack}> 1
Types["/image/Gray"] = new(*image.Gray)
//# OLD <{iGray}> 0
//# NEW <{iGray}> 1
//? Consts["/image/YCbCrSubsampleRatio444"] = image.YCbCrSubsampleRatio444
//# OLD <{iYCbCrSubsampleRatio444}> 0
//# NEW <{iYCbCrSubsampleRatio444}> 1
Vars["/image/Transparent"] = &image.Transparent
//# OLD <{iTransparent}> 0
//# NEW <{iTransparent}> 1
Funcs["/image/NewNRGBA64"] = image.NewNRGBA64
//# OLD <{iNewNRGBA64}> 0
//# NEW <{iNewNRGBA64}> 1
Types["/image/Alpha16"] = new(*image.Alpha16)
//# OLD <{iAlpha16}> 0
//# NEW <{iAlpha16}> 1
//? Consts["/image/YCbCrSubsampleRatio420"] = image.YCbCrSubsampleRatio420
//# OLD <{iYCbCrSubsampleRatio420}> 0
//# NEW <{iYCbCrSubsampleRatio420}> 1
Vars["/image/Opaque"] = &image.Opaque
//# OLD <{iOpaque}> 0
//# NEW <{iOpaque}> 1
Funcs["/image/NewRGBA64"] = image.NewRGBA64
//# OLD <{iNewRGBA64}> 0
//# NEW <{iNewRGBA64}> 1
Types["/image/RGBA64"] = new(*image.RGBA64)
//# OLD <{iRGBA64}> 0
//# NEW <{iRGBA64}> 1
Funcs["/image/DecodeConfig"] = image.DecodeConfig
//# OLD <{iDecodeConfig}> 0
//# NEW <{iDecodeConfig}> 1
Funcs["/image/NewYCbCr"] = image.NewYCbCr
//# OLD <{iNewYCbCr}> 0
//# NEW <{iNewYCbCr}> 1
Funcs["/image/Decode"] = image.Decode
//# OLD <{iDecode}> 0
//# NEW <{iDecode}> 1
Types["/image/Config"] = new(*image.Config)
//# OLD <{iConfig}> 0
//# NEW <{iConfig}> 1
Types["/image/Paletted"] = new(*image.Paletted)
//# OLD <{iPaletted}> 0
//# NEW <{iPaletted}> 1
Vars["/image/ZR"] = &image.ZR
//# OLD <{iZR}> 0
//# NEW <{iZR}> 1
Types["/image/Uniform"] = new(*image.Uniform)
//# OLD <{iUniform}> 0
//# NEW <{iUniform}> 1
Types["/image/YCbCr"] = new(*image.YCbCr)
//# OLD <{iYCbCr}> 0
//# NEW <{iYCbCr}> 1
Funcs["/image/NewGray"] = image.NewGray
//# OLD <{iNewGray}> 0
//# NEW <{iNewGray}> 1
Types["/image/Image"] = new(*image.Image)
//# OLD <{iImage}> 0
//# NEW <{iImage}> 1
//? Consts["/image/YCbCrSubsampleRatio422"] = image.YCbCrSubsampleRatio422
//# OLD <{iYCbCrSubsampleRatio422}> 0
//# NEW <{iYCbCrSubsampleRatio422}> 1
Types["/image/PalettedImage"] = new(*image.PalettedImage)
//# OLD <{iPalettedImage}> 0
//# NEW <{iPalettedImage}> 1
Vars["/image/ZP"] = &image.ZP
//# OLD <{iZP}> 0
//# NEW <{iZP}> 1
Funcs["/image/Pt"] = image.Pt
//# OLD <{iPt}> 0
//# NEW <{iPt}> 1
Funcs["/image/Rect"] = image.Rect
//# OLD <{iRect}> 0
//# NEW <{iRect}> 1
Types["/image/NRGBA64"] = new(*image.NRGBA64)
//# OLD <{iNRGBA64}> 0
//# NEW <{iNRGBA64}> 1
Types["/image/RGBA"] = new(*image.RGBA)
//# OLD <{iRGBA}> 0
//# NEW <{iRGBA}> 1
Types["/image/Rectangle"] = new(*image.Rectangle)
//# OLD <{iRectangle}> 0
//# NEW <{iRectangle}> 1
Funcs["/image/NewUniform"] = image.NewUniform
//# OLD <{iNewUniform}> 0
//# NEW <{iNewUniform}> 1
Funcs["/image/NewPaletted"] = image.NewPaletted
//# OLD <{iNewPaletted}> 0
//# NEW <{iNewPaletted}> 1


//      var image/color.Black
//      var image/color.NRGBA64Model
//     type image/color.Color
//      var image/color.GrayModel
//     type image/color.Alpha
//      var image/color.Alpha16Model
//     func image/color.YCbCrToRGB
//     type image/color.NRGBA64
//      var image/color.YCbCrModel
//      var image/color.White
//     type image/color.Palette
//      var image/color.AlphaModel
//      var image/color.Gray16Model
//     type image/color.YCbCr
//     type image/color.NRGBA
//     type image/color.Alpha16
//      var image/color.RGBA64Model
//     type image/color.Gray16
//     type image/color.RGBA64
//     func image/color.ModelFunc
//      var image/color.Opaque
//     type image/color.Gray
//      var image/color.NRGBAModel
//     type image/color.RGBA
//      var image/color.Transparent
//     type image/color.Model
//      var image/color.RGBAModel
//     func image/color.RGBToYCbCr

Types["/image/color/Color"] = new(*image_color.Color)
//# OLD <{cColor}> 0
//# NEW <{cColor}> 1
Vars["/image/color/GrayModel"] = &image_color.GrayModel
//# OLD <{cGrayModel}> 0
//# NEW <{cGrayModel}> 1
Types["/image/color/Alpha"] = new(*image_color.Alpha)
//# OLD <{cAlpha}> 0
//# NEW <{cAlpha}> 1
Vars["/image/color/Alpha16Model"] = &image_color.Alpha16Model
//# OLD <{cAlpha16Model}> 0
//# NEW <{cAlpha16Model}> 1
Funcs["/image/color/YCbCrToRGB"] = image_color.YCbCrToRGB
//# OLD <{cYCbCrToRGB}> 0
//# NEW <{cYCbCrToRGB}> 1
Types["/image/color/NRGBA64"] = new(*image_color.NRGBA64)
//# OLD <{cNRGBA64}> 0
//# NEW <{cNRGBA64}> 1
Vars["/image/color/YCbCrModel"] = &image_color.YCbCrModel
//# OLD <{cYCbCrModel}> 0
//# NEW <{cYCbCrModel}> 1
Vars["/image/color/White"] = &image_color.White
//# OLD <{cWhite}> 0
//# NEW <{cWhite}> 1
Types["/image/color/Palette"] = new(*image_color.Palette)
//# OLD <{cPalette}> 0
//# NEW <{cPalette}> 1
Vars["/image/color/AlphaModel"] = &image_color.AlphaModel
//# OLD <{cAlphaModel}> 0
//# NEW <{cAlphaModel}> 1
Vars["/image/color/Gray16Model"] = &image_color.Gray16Model
//# OLD <{cGray16Model}> 0
//# NEW <{cGray16Model}> 1
Types["/image/color/YCbCr"] = new(*image_color.YCbCr)
//# OLD <{cYCbCr}> 0
//# NEW <{cYCbCr}> 1
Types["/image/color/NRGBA"] = new(*image_color.NRGBA)
//# OLD <{cNRGBA}> 0
//# NEW <{cNRGBA}> 1
Types["/image/color/Alpha16"] = new(*image_color.Alpha16)
//# OLD <{cAlpha16}> 0
//# NEW <{cAlpha16}> 1
Vars["/image/color/RGBA64Model"] = &image_color.RGBA64Model
//# OLD <{cRGBA64Model}> 0
//# NEW <{cRGBA64Model}> 1
Types["/image/color/Gray16"] = new(*image_color.Gray16)
//# OLD <{cGray16}> 0
//# NEW <{cGray16}> 1
Types["/image/color/RGBA64"] = new(*image_color.RGBA64)
//# OLD <{cRGBA64}> 0
//# NEW <{cRGBA64}> 1
Funcs["/image/color/ModelFunc"] = image_color.ModelFunc
//# OLD <{cModelFunc}> 0
//# NEW <{cModelFunc}> 1
Vars["/image/color/Opaque"] = &image_color.Opaque
//# OLD <{cOpaque}> 0
//# NEW <{cOpaque}> 1
Types["/image/color/Gray"] = new(*image_color.Gray)
//# OLD <{cGray}> 0
//# NEW <{cGray}> 1
Vars["/image/color/NRGBAModel"] = &image_color.NRGBAModel
//# OLD <{cNRGBAModel}> 0
//# NEW <{cNRGBAModel}> 1
Types["/image/color/RGBA"] = new(*image_color.RGBA)
//# OLD <{cRGBA}> 0
//# NEW <{cRGBA}> 1
Vars["/image/color/Transparent"] = &image_color.Transparent
//# OLD <{cTransparent}> 0
//# NEW <{cTransparent}> 1
Types["/image/color/Model"] = new(*image_color.Model)
//# OLD <{cModel}> 0
//# NEW <{cModel}> 1
Vars["/image/color/RGBAModel"] = &image_color.RGBAModel
//# OLD <{cRGBAModel}> 0
//# NEW <{cRGBAModel}> 1
Funcs["/image/color/RGBToYCbCr"] = image_color.RGBToYCbCr
//# OLD <{cRGBToYCbCr}> 0
//# NEW <{cRGBToYCbCr}> 1
Vars["/image/color/Black"] = &image_color.Black
//# OLD <{cBlack}> 0
//# NEW <{cBlack}> 1
Vars["/image/color/NRGBA64Model"] = &image_color.NRGBA64Model
//# OLD <{cNRGBA64Model}> 0
//# NEW <{cNRGBA64Model}> 1


//     func image/draw.Draw
//    const image/draw.Src
//     func image/draw.DrawMask
//    const image/draw.Over
//     type image/draw.Image
//     type image/draw.Op

Funcs["/image/draw/DrawMask"] = image_draw.DrawMask
//# OLD <{dDrawMask}> 0
//# NEW <{dDrawMask}> 1
//? Consts["/image/draw/Over"] = image_draw.Over
//# OLD <{dOver}> 0
//# NEW <{dOver}> 1
Types["/image/draw/Image"] = new(*image_draw.Image)
//# OLD <{dImage}> 0
//# NEW <{dImage}> 1
Types["/image/draw/Op"] = new(*image_draw.Op)
//# OLD <{dOp}> 0
//# NEW <{dOp}> 1
Funcs["/image/draw/Draw"] = image_draw.Draw
//# OLD <{dDraw}> 0
//# NEW <{dDraw}> 1
//? Consts["/image/draw/Src"] = image_draw.Src
//# OLD <{dSrc}> 0
//# NEW <{dSrc}> 1


//     func image/gif.DecodeConfig
//     func image/gif.DecodeAll
//     func image/gif.Decode
//     type image/gif.GIF

Funcs["/image/gif/DecodeConfig"] = image_gif.DecodeConfig
//# OLD <{gDecodeConfig}> 0
//# NEW <{gDecodeConfig}> 1
Funcs["/image/gif/DecodeAll"] = image_gif.DecodeAll
//# OLD <{gDecodeAll}> 0
//# NEW <{gDecodeAll}> 1
Funcs["/image/gif/Decode"] = image_gif.Decode
//# OLD <{gDecode}> 0
//# NEW <{gDecode}> 1
Types["/image/gif/GIF"] = new(*image_gif.GIF)
//# OLD <{gGIF}> 0
//# NEW <{gGIF}> 1


//    const image/jpeg.DefaultQuality
//     type image/jpeg.Reader
//     func image/jpeg.DecodeConfig
//     type image/jpeg.Options
//     type image/jpeg.FormatError
//     func image/jpeg.Decode
//     func image/jpeg.Encode
//     type image/jpeg.UnsupportedError

Types["/image/jpeg/Options"] = new(*image_jpeg.Options)
//# OLD <{jOptions}> 0
//# NEW <{jOptions}> 1
Types["/image/jpeg/FormatError"] = new(*image_jpeg.FormatError)
//# OLD <{jFormatError}> 0
//# NEW <{jFormatError}> 1
Funcs["/image/jpeg/Decode"] = image_jpeg.Decode
//# OLD <{jDecode}> 0
//# NEW <{jDecode}> 1
Funcs["/image/jpeg/Encode"] = image_jpeg.Encode
//# OLD <{jEncode}> 0
//# NEW <{jEncode}> 1
Types["/image/jpeg/UnsupportedError"] = new(*image_jpeg.UnsupportedError)
//# OLD <{jUnsupportedError}> 0
//# NEW <{jUnsupportedError}> 1
//? Consts["/image/jpeg/DefaultQuality"] = image_jpeg.DefaultQuality
//# OLD <{jDefaultQuality}> 0
//# NEW <{jDefaultQuality}> 1
Types["/image/jpeg/Reader"] = new(*image_jpeg.Reader)
//# OLD <{jReader}> 0
//# NEW <{jReader}> 1
Funcs["/image/jpeg/DecodeConfig"] = image_jpeg.DecodeConfig
//# OLD <{jDecodeConfig}> 0
//# NEW <{jDecodeConfig}> 1


//     func image/png.DecodeConfig
//     func image/png.Encode
//     type image/png.FormatError
//     func image/png.Decode
//     type image/png.UnsupportedError

Funcs["/image/png/DecodeConfig"] = image_png.DecodeConfig
//# OLD <{pDecodeConfig}> 0
//# NEW <{pDecodeConfig}> 1
Funcs["/image/png/Encode"] = image_png.Encode
//# OLD <{pEncode}> 1
//# NEW <{pEncode}> 2
Types["/image/png/FormatError"] = new(*image_png.FormatError)
//# OLD <{pFormatError}> 1
//# NEW <{pFormatError}> 2
Funcs["/image/png/Decode"] = image_png.Decode
//# OLD <{pDecode}> 1
//# NEW <{pDecode}> 2
Types["/image/png/UnsupportedError"] = new(*image_png.UnsupportedError)
//# OLD <{pUnsupportedError}> 0
//# NEW <{pUnsupportedError}> 1


//     type index/suffixarray.Index
//     func index/suffixarray.New

Types["/index/suffixarray/Index"] = new(*index_suffixarray.Index)
//# OLD <{sIndex}> 0
//# NEW <{sIndex}> 1
Funcs["/index/suffixarray/New"] = index_suffixarray.New
//# OLD <{sNew}> 3
//# NEW <{sNew}> 4


//     type io.ByteReader
//     type io.ReadSeeker
//     type io.Seeker
//     type io.Closer
//     type io.WriteSeeker
//      var io.ErrUnexpectedEOF
//     func io.TeeReader
//     type io.ReadCloser
//     type io.SectionReader
//     func io.WriteString
//     type io.ReaderAt
//      var io.ErrShortWrite
//     type io.WriterTo
//     func io.MultiReader
//     type io.ReaderFrom
//     type io.ReadWriter
//     type io.PipeReader
//     func io.ReadFull
//     type io.WriteCloser
//     func io.LimitReader
//     type io.PipeWriter
//     type io.Reader
//     type io.LimitedReader
//     type io.ByteScanner
//     type io.RuneReader
//     func io.NewSectionReader
//     func io.MultiWriter
//     func io.Pipe
//     func io.CopyN
//      var io.ErrClosedPipe
//      var io.EOF
//     type io.ReadWriteCloser
//     type io.RuneScanner
//      var io.ErrShortBuffer
//     type io.WriterAt
//     func io.Copy
//     func io.ReadAtLeast
//     type io.Writer
//     type io.ReadWriteSeeker

Funcs["/io/MultiWriter"] = io.MultiWriter
//# OLD <{iMultiWriter}> 0
//# NEW <{iMultiWriter}> 1
Funcs["/io/Pipe"] = io.Pipe
//# OLD <{iPipe}> 0
//# NEW <{iPipe}> 1
Funcs["/io/CopyN"] = io.CopyN
//# OLD <{iCopyN}> 0
//# NEW <{iCopyN}> 1
Vars["/io/ErrClosedPipe"] = &io.ErrClosedPipe
//# OLD <{iErrClosedPipe}> 0
//# NEW <{iErrClosedPipe}> 1
Vars["/io/EOF"] = &io.EOF
//# OLD <{iEOF}> 0
//# NEW <{iEOF}> 1
Types["/io/ReadWriteCloser"] = new(*io.ReadWriteCloser)
//# OLD <{iReadWriteCloser}> 0
//# NEW <{iReadWriteCloser}> 1
Types["/io/RuneScanner"] = new(*io.RuneScanner)
//# OLD <{iRuneScanner}> 0
//# NEW <{iRuneScanner}> 1
Vars["/io/ErrShortBuffer"] = &io.ErrShortBuffer
//# OLD <{iErrShortBuffer}> 0
//# NEW <{iErrShortBuffer}> 1
Types["/io/WriterAt"] = new(*io.WriterAt)
//# OLD <{iWriterAt}> 0
//# NEW <{iWriterAt}> 1
Funcs["/io/Copy"] = io.Copy
//# OLD <{iCopy}> 0
//# NEW <{iCopy}> 1
Funcs["/io/ReadAtLeast"] = io.ReadAtLeast
//# OLD <{iReadAtLeast}> 0
//# NEW <{iReadAtLeast}> 1
Types["/io/Writer"] = new(*io.Writer)
//# OLD <{iWriter}> 0
//# NEW <{iWriter}> 1
Types["/io/ReadWriteSeeker"] = new(*io.ReadWriteSeeker)
//# OLD <{iReadWriteSeeker}> 0
//# NEW <{iReadWriteSeeker}> 1
Types["/io/ByteReader"] = new(*io.ByteReader)
//# OLD <{iByteReader}> 0
//# NEW <{iByteReader}> 1
Types["/io/ReadSeeker"] = new(*io.ReadSeeker)
//# OLD <{iReadSeeker}> 0
//# NEW <{iReadSeeker}> 1
Types["/io/Seeker"] = new(*io.Seeker)
//# OLD <{iSeeker}> 0
//# NEW <{iSeeker}> 1
Types["/io/Closer"] = new(*io.Closer)
//# OLD <{iCloser}> 0
//# NEW <{iCloser}> 1
Types["/io/WriteSeeker"] = new(*io.WriteSeeker)
//# OLD <{iWriteSeeker}> 0
//# NEW <{iWriteSeeker}> 1
Vars["/io/ErrUnexpectedEOF"] = &io.ErrUnexpectedEOF
//# OLD <{iErrUnexpectedEOF}> 0
//# NEW <{iErrUnexpectedEOF}> 1
Funcs["/io/TeeReader"] = io.TeeReader
//# OLD <{iTeeReader}> 0
//# NEW <{iTeeReader}> 1
Types["/io/ReadCloser"] = new(*io.ReadCloser)
//# OLD <{iReadCloser}> 0
//# NEW <{iReadCloser}> 1
Types["/io/SectionReader"] = new(*io.SectionReader)
//# OLD <{iSectionReader}> 0
//# NEW <{iSectionReader}> 1
Funcs["/io/WriteString"] = io.WriteString
//# OLD <{iWriteString}> 0
//# NEW <{iWriteString}> 1
Types["/io/ReaderAt"] = new(*io.ReaderAt)
//# OLD <{iReaderAt}> 0
//# NEW <{iReaderAt}> 1
Vars["/io/ErrShortWrite"] = &io.ErrShortWrite
//# OLD <{iErrShortWrite}> 0
//# NEW <{iErrShortWrite}> 1
Types["/io/WriterTo"] = new(*io.WriterTo)
//# OLD <{iWriterTo}> 0
//# NEW <{iWriterTo}> 1
Funcs["/io/MultiReader"] = io.MultiReader
//# OLD <{iMultiReader}> 0
//# NEW <{iMultiReader}> 1
Types["/io/ReaderFrom"] = new(*io.ReaderFrom)
//# OLD <{iReaderFrom}> 0
//# NEW <{iReaderFrom}> 1
Types["/io/ReadWriter"] = new(*io.ReadWriter)
//# OLD <{iReadWriter}> 0
//# NEW <{iReadWriter}> 1
Types["/io/PipeReader"] = new(*io.PipeReader)
//# OLD <{iPipeReader}> 0
//# NEW <{iPipeReader}> 1
Funcs["/io/ReadFull"] = io.ReadFull
//# OLD <{iReadFull}> 0
//# NEW <{iReadFull}> 1
Types["/io/WriteCloser"] = new(*io.WriteCloser)
//# OLD <{iWriteCloser}> 0
//# NEW <{iWriteCloser}> 1
Funcs["/io/LimitReader"] = io.LimitReader
//# OLD <{iLimitReader}> 0
//# NEW <{iLimitReader}> 1
Types["/io/PipeWriter"] = new(*io.PipeWriter)
//# OLD <{iPipeWriter}> 0
//# NEW <{iPipeWriter}> 1
Types["/io/Reader"] = new(*io.Reader)
//# OLD <{iReader}> 0
//# NEW <{iReader}> 1
Types["/io/LimitedReader"] = new(*io.LimitedReader)
//# OLD <{iLimitedReader}> 0
//# NEW <{iLimitedReader}> 1
Types["/io/ByteScanner"] = new(*io.ByteScanner)
//# OLD <{iByteScanner}> 0
//# NEW <{iByteScanner}> 1
Types["/io/RuneReader"] = new(*io.RuneReader)
//# OLD <{iRuneReader}> 0
//# NEW <{iRuneReader}> 1
Funcs["/io/NewSectionReader"] = io.NewSectionReader
//# OLD <{iNewSectionReader}> 0
//# NEW <{iNewSectionReader}> 1


//     func io/ioutil.WriteFile
//     func io/ioutil.ReadAll
//     func io/ioutil.NopCloser
//      var io/ioutil.Discard
//     func io/ioutil.TempFile
//     func io/ioutil.ReadDir
//     func io/ioutil.ReadFile
//     func io/ioutil.TempDir

Funcs["/io/ioutil/ReadAll"] = io_ioutil.ReadAll
//# OLD <{iReadAll}> 0
//# NEW <{iReadAll}> 1
Funcs["/io/ioutil/NopCloser"] = io_ioutil.NopCloser
//# OLD <{iNopCloser}> 0
//# NEW <{iNopCloser}> 1
Vars["/io/ioutil/Discard"] = &io_ioutil.Discard
//# OLD <{iDiscard}> 0
//# NEW <{iDiscard}> 1
Funcs["/io/ioutil/TempFile"] = io_ioutil.TempFile
//# OLD <{iTempFile}> 0
//# NEW <{iTempFile}> 1
Funcs["/io/ioutil/ReadDir"] = io_ioutil.ReadDir
//# OLD <{iReadDir}> 0
//# NEW <{iReadDir}> 1
Funcs["/io/ioutil/ReadFile"] = io_ioutil.ReadFile
//# OLD <{iReadFile}> 0
//# NEW <{iReadFile}> 1
Funcs["/io/ioutil/TempDir"] = io_ioutil.TempDir
//# OLD <{iTempDir}> 0
//# NEW <{iTempDir}> 1
Funcs["/io/ioutil/WriteFile"] = io_ioutil.WriteFile
//# OLD <{iWriteFile}> 0
//# NEW <{iWriteFile}> 1


//     func log.Panicf
//     func log.Prefix
//    const log.Ltime
//     func log.SetOutput
//     func log.Panic
//    const log.Lshortfile
//     func log.Print
//     func log.Println
//     func log.Panicln
//     func log.SetFlags
//     func log.Fatalf
//    const log.Llongfile
//     func log.SetPrefix
//    const log.Lmicroseconds
//     func log.Fatalln
//     type log.Logger
//     func log.Flags
//    const log.LstdFlags
//     func log.Fatal
//    const log.Ldate
//     func log.Printf
//     func log.New

Funcs["/log/Print"] = log.Print
//# OLD <{lPrint}> 0
//# NEW <{lPrint}> 1
Funcs["/log/Println"] = log.Println
//# OLD <{lPrintln}> 0
//# NEW <{lPrintln}> 1
Funcs["/log/Panicln"] = log.Panicln
//# OLD <{lPanicln}> 0
//# NEW <{lPanicln}> 1
Funcs["/log/SetFlags"] = log.SetFlags
//# OLD <{lSetFlags}> 0
//# NEW <{lSetFlags}> 1
Funcs["/log/Fatalf"] = log.Fatalf
//# OLD <{lFatalf}> 0
//# NEW <{lFatalf}> 1
//? Consts["/log/Llongfile"] = log.Llongfile
//# OLD <{lLlongfile}> 0
//# NEW <{lLlongfile}> 1
Funcs["/log/SetPrefix"] = log.SetPrefix
//# OLD <{lSetPrefix}> 0
//# NEW <{lSetPrefix}> 1
//? Consts["/log/Lmicroseconds"] = log.Lmicroseconds
//# OLD <{lLmicroseconds}> 0
//# NEW <{lLmicroseconds}> 1
Funcs["/log/Fatalln"] = log.Fatalln
//# OLD <{lFatalln}> 0
//# NEW <{lFatalln}> 1
Types["/log/Logger"] = new(*log.Logger)
//# OLD <{lLogger}> 0
//# NEW <{lLogger}> 1
Funcs["/log/Flags"] = log.Flags
//# OLD <{lFlags}> 0
//# NEW <{lFlags}> 1
//? Consts["/log/LstdFlags"] = log.LstdFlags
//# OLD <{lLstdFlags}> 0
//# NEW <{lLstdFlags}> 1
Funcs["/log/Fatal"] = log.Fatal
//# OLD <{lFatal}> 0
//# NEW <{lFatal}> 1
//? Consts["/log/Ldate"] = log.Ldate
//# OLD <{lLdate}> 0
//# NEW <{lLdate}> 1
Funcs["/log/Printf"] = log.Printf
//# OLD <{lPrintf}> 0
//# NEW <{lPrintf}> 1
Funcs["/log/New"] = log.New
//# OLD <{lNew}> 1
//# NEW <{lNew}> 2
Funcs["/log/Panicf"] = log.Panicf
//# OLD <{lPanicf}> 0
//# NEW <{lPanicf}> 1
Funcs["/log/Prefix"] = log.Prefix
//# OLD <{lPrefix}> 0
//# NEW <{lPrefix}> 1
//? Consts["/log/Ltime"] = log.Ltime
//# OLD <{lLtime}> 0
//# NEW <{lLtime}> 1
Funcs["/log/SetOutput"] = log.SetOutput
//# OLD <{lSetOutput}> 0
//# NEW <{lSetOutput}> 1
Funcs["/log/Panic"] = log.Panic
//# OLD <{lPanic}> 0
//# NEW <{lPanic}> 1
//? Consts["/log/Lshortfile"] = log.Lshortfile
//# OLD <{lLshortfile}> 0
//# NEW <{lLshortfile}> 1


//    const log/syslog.LOG_EMERG
//     func log/syslog.NewLogger
//    const log/syslog.LOG_NOTICE
//    const log/syslog.LOG_INFO
//    const log/syslog.LOG_ERR
//    const log/syslog.LOG_ALERT
//    const log/syslog.LOG_CRIT
//    const log/syslog.LOG_DEBUG
//     func log/syslog.New
//     type log/syslog.Writer
//     func log/syslog.Dial
//     type log/syslog.Priority
//    const log/syslog.LOG_WARNING

//? Consts["/log/syslog/LOG_DEBUG"] = log_syslog.LOG_DEBUG
//# OLD <{sLOG_DEBUG}> 0
//# NEW <{sLOG_DEBUG}> 1
Funcs["/log/syslog/New"] = log_syslog.New
//# OLD <{sNew}> 4
//# NEW <{sNew}> 5
Types["/log/syslog/Writer"] = new(*log_syslog.Writer)
//# OLD <{sWriter}> 0
//# NEW <{sWriter}> 1
Funcs["/log/syslog/Dial"] = log_syslog.Dial
//# OLD <{sDial}> 0
//# NEW <{sDial}> 1
Types["/log/syslog/Priority"] = new(*log_syslog.Priority)
//# OLD <{sPriority}> 0
//# NEW <{sPriority}> 1
//? Consts["/log/syslog/LOG_WARNING"] = log_syslog.LOG_WARNING
//# OLD <{sLOG_WARNING}> 0
//# NEW <{sLOG_WARNING}> 1
//? Consts["/log/syslog/LOG_EMERG"] = log_syslog.LOG_EMERG
//# OLD <{sLOG_EMERG}> 0
//# NEW <{sLOG_EMERG}> 1
Funcs["/log/syslog/NewLogger"] = log_syslog.NewLogger
//# OLD <{sNewLogger}> 0
//# NEW <{sNewLogger}> 1
//? Consts["/log/syslog/LOG_NOTICE"] = log_syslog.LOG_NOTICE
//# OLD <{sLOG_NOTICE}> 0
//# NEW <{sLOG_NOTICE}> 1
//? Consts["/log/syslog/LOG_INFO"] = log_syslog.LOG_INFO
//# OLD <{sLOG_INFO}> 0
//# NEW <{sLOG_INFO}> 1
//? Consts["/log/syslog/LOG_ERR"] = log_syslog.LOG_ERR
//# OLD <{sLOG_ERR}> 0
//# NEW <{sLOG_ERR}> 1
//? Consts["/log/syslog/LOG_ALERT"] = log_syslog.LOG_ALERT
//# OLD <{sLOG_ALERT}> 0
//# NEW <{sLOG_ALERT}> 1
//? Consts["/log/syslog/LOG_CRIT"] = log_syslog.LOG_CRIT
//# OLD <{sLOG_CRIT}> 0
//# NEW <{sLOG_CRIT}> 1


//    const math.MaxUint8
//     func math.Sinh
//    const math.MaxUint64
//     func math.Atanh
//     func math.Float32frombits
//     func math.Floor
//     func math.Y1
//    const math.SqrtPhi
//    const math.SmallestNonzeroFloat32
//     func math.Y0
//     func math.Asinh
//     func math.Log
//     func math.Log1p
//     func math.Exp
//    const math.SqrtPi
//    const math.MaxInt16
//     func math.IsNaN
//     func math.Pow10
//    const math.MinInt8
//     func math.Hypot
//     func math.Atan2
//     func math.Acosh
//     func math.Nextafter
//    const math.MaxFloat32
//     func math.Gamma
//     func math.Min
//     func math.Pow
//    const math.MaxInt8
//    const math.MaxInt32
//     func math.Cosh
//    const math.SqrtE
//     func math.Erfc
//     func math.Log2
//    const math.MaxUint32
//     func math.IsInf
//     func math.NaN
//    const math.Ln10
//     func math.Copysign
//    const math.MinInt32
//     func math.Sqrt
//     func math.J0
//     func math.Abs
//     func math.Ldexp
//     func math.Exp2
//     func math.Erf
//     func math.Cos
//    const math.Phi
//     func math.Frexp
//     func math.Signbit
//     func math.Yn
//     func math.Dim
//    const math.MaxInt64
//     func math.Float32bits
//    const math.SmallestNonzeroFloat64
//     func math.Mod
//     func math.Sin
//     func math.Jn
//     func math.Ceil
//    const math.MaxFloat64
//    const math.Pi
//    const math.MaxUint16
//     func math.Float64bits
//     func math.Trunc
//    const math.E
//     func math.Float64frombits
//    const math.MinInt64
//     func math.Ilogb
//    const math.MinInt16
//     func math.Atan
//    const math.Log10E
//     func math.Max
//     func math.Remainder
//     func math.Lgamma
//    const math.Sqrt2
//     func math.Tanh
//     func math.Logb
//     func math.Expm1
//     func math.Tan
//    const math.Log2E
//     func math.Acos
//     func math.Modf
//     func math.Log10
//     func math.J1
//     func math.Inf
//     func math.Asin
//    const math.Ln2
//     func math.Sincos
//     func math.Cbrt

Funcs["/math/Floor"] = math.Floor
//# OLD <{mFloor}> 0
//# NEW <{mFloor}> 1
Funcs["/math/Y1"] = math.Y1
//# OLD <{mY1}> 0
//# NEW <{mY1}> 1
//? Consts["/math/SqrtPhi"] = math.SqrtPhi
//# OLD <{mSqrtPhi}> 0
//# NEW <{mSqrtPhi}> 1
//? Consts["/math/SmallestNonzeroFloat32"] = math.SmallestNonzeroFloat32
//# OLD <{mSmallestNonzeroFloat32}> 0
//# NEW <{mSmallestNonzeroFloat32}> 1
Funcs["/math/Y0"] = math.Y0
//# OLD <{mY0}> 0
//# NEW <{mY0}> 1
Funcs["/math/Asinh"] = math.Asinh
//# OLD <{mAsinh}> 0
//# NEW <{mAsinh}> 1
Funcs["/math/Log"] = math.Log
//# OLD <{mLog}> 0
//# NEW <{mLog}> 1
Funcs["/math/Log1p"] = math.Log1p
//# OLD <{mLog1p}> 0
//# NEW <{mLog1p}> 1
Funcs["/math/Exp"] = math.Exp
//# OLD <{mExp}> 0
//# NEW <{mExp}> 1
//? Consts["/math/SqrtPi"] = math.SqrtPi
//# OLD <{mSqrtPi}> 0
//# NEW <{mSqrtPi}> 1
//? Consts["/math/MaxInt16"] = math.MaxInt16
//# OLD <{mMaxInt16}> 0
//# NEW <{mMaxInt16}> 1
Funcs["/math/IsNaN"] = math.IsNaN
//# OLD <{mIsNaN}> 0
//# NEW <{mIsNaN}> 1
Funcs["/math/Pow10"] = math.Pow10
//# OLD <{mPow10}> 0
//# NEW <{mPow10}> 1
//? Consts["/math/MinInt8"] = math.MinInt8
//# OLD <{mMinInt8}> 0
//# NEW <{mMinInt8}> 1
Funcs["/math/Hypot"] = math.Hypot
//# OLD <{mHypot}> 0
//# NEW <{mHypot}> 1
Funcs["/math/Atan2"] = math.Atan2
//# OLD <{mAtan2}> 0
//# NEW <{mAtan2}> 1
Funcs["/math/Acosh"] = math.Acosh
//# OLD <{mAcosh}> 0
//# NEW <{mAcosh}> 1
Funcs["/math/Nextafter"] = math.Nextafter
//# OLD <{mNextafter}> 0
//# NEW <{mNextafter}> 1
//? Consts["/math/MaxFloat32"] = math.MaxFloat32
//# OLD <{mMaxFloat32}> 0
//# NEW <{mMaxFloat32}> 1
Funcs["/math/Gamma"] = math.Gamma
//# OLD <{mGamma}> 0
//# NEW <{mGamma}> 1
Funcs["/math/Min"] = math.Min
//# OLD <{mMin}> 0
//# NEW <{mMin}> 1
Funcs["/math/Pow"] = math.Pow
//# OLD <{mPow}> 0
//# NEW <{mPow}> 1
//? Consts["/math/MaxInt8"] = math.MaxInt8
//# OLD <{mMaxInt8}> 0
//# NEW <{mMaxInt8}> 1
//? Consts["/math/MaxInt32"] = math.MaxInt32
//# OLD <{mMaxInt32}> 0
//# NEW <{mMaxInt32}> 1
Funcs["/math/Cosh"] = math.Cosh
//# OLD <{mCosh}> 0
//# NEW <{mCosh}> 1
//? Consts["/math/SqrtE"] = math.SqrtE
//# OLD <{mSqrtE}> 0
//# NEW <{mSqrtE}> 1
Funcs["/math/Erfc"] = math.Erfc
//# OLD <{mErfc}> 0
//# NEW <{mErfc}> 1
Funcs["/math/Log2"] = math.Log2
//# OLD <{mLog2}> 0
//# NEW <{mLog2}> 1
//? Consts["/math/MaxUint32"] = math.MaxUint32
//# OLD <{mMaxUint32}> 0
//# NEW <{mMaxUint32}> 1
Funcs["/math/IsInf"] = math.IsInf
//# OLD <{mIsInf}> 0
//# NEW <{mIsInf}> 1
Funcs["/math/NaN"] = math.NaN
//# OLD <{mNaN}> 0
//# NEW <{mNaN}> 1
//? Consts["/math/Ln10"] = math.Ln10
//# OLD <{mLn10}> 0
//# NEW <{mLn10}> 1
Funcs["/math/Copysign"] = math.Copysign
//# OLD <{mCopysign}> 0
//# NEW <{mCopysign}> 1
//? Consts["/math/MinInt32"] = math.MinInt32
//# OLD <{mMinInt32}> 0
//# NEW <{mMinInt32}> 1
Funcs["/math/Sqrt"] = math.Sqrt
//# OLD <{mSqrt}> 0
//# NEW <{mSqrt}> 1
Funcs["/math/J0"] = math.J0
//# OLD <{mJ0}> 0
//# NEW <{mJ0}> 1
Funcs["/math/Abs"] = math.Abs
//# OLD <{mAbs}> 0
//# NEW <{mAbs}> 1
Funcs["/math/Ldexp"] = math.Ldexp
//# OLD <{mLdexp}> 0
//# NEW <{mLdexp}> 1
Funcs["/math/Exp2"] = math.Exp2
//# OLD <{mExp2}> 0
//# NEW <{mExp2}> 1
Funcs["/math/Erf"] = math.Erf
//# OLD <{mErf}> 0
//# NEW <{mErf}> 1
Funcs["/math/Cos"] = math.Cos
//# OLD <{mCos}> 0
//# NEW <{mCos}> 1
//? Consts["/math/Phi"] = math.Phi
//# OLD <{mPhi}> 0
//# NEW <{mPhi}> 1
Funcs["/math/Frexp"] = math.Frexp
//# OLD <{mFrexp}> 0
//# NEW <{mFrexp}> 1
Funcs["/math/Signbit"] = math.Signbit
//# OLD <{mSignbit}> 0
//# NEW <{mSignbit}> 1
Funcs["/math/Yn"] = math.Yn
//# OLD <{mYn}> 0
//# NEW <{mYn}> 1
Funcs["/math/Dim"] = math.Dim
//# OLD <{mDim}> 0
//# NEW <{mDim}> 1
//? Consts["/math/MaxInt64"] = math.MaxInt64
//# OLD <{mMaxInt64}> 0
//# NEW <{mMaxInt64}> 1
Funcs["/math/Float32bits"] = math.Float32bits
//# OLD <{mFloat32bits}> 0
//# NEW <{mFloat32bits}> 1
//? Consts["/math/SmallestNonzeroFloat64"] = math.SmallestNonzeroFloat64
//# OLD <{mSmallestNonzeroFloat64}> 0
//# NEW <{mSmallestNonzeroFloat64}> 1
Funcs["/math/Mod"] = math.Mod
//# OLD <{mMod}> 0
//# NEW <{mMod}> 1
Funcs["/math/Sin"] = math.Sin
//# OLD <{mSin}> 0
//# NEW <{mSin}> 1
Funcs["/math/Jn"] = math.Jn
//# OLD <{mJn}> 0
//# NEW <{mJn}> 1
Funcs["/math/Ceil"] = math.Ceil
//# OLD <{mCeil}> 0
//# NEW <{mCeil}> 1
//? Consts["/math/MaxFloat64"] = math.MaxFloat64
//# OLD <{mMaxFloat64}> 0
//# NEW <{mMaxFloat64}> 1
//? Consts["/math/Pi"] = math.Pi
//# OLD <{mPi}> 0
//# NEW <{mPi}> 1
//? Consts["/math/MaxUint16"] = math.MaxUint16
//# OLD <{mMaxUint16}> 0
//# NEW <{mMaxUint16}> 1
Funcs["/math/Float64bits"] = math.Float64bits
//# OLD <{mFloat64bits}> 0
//# NEW <{mFloat64bits}> 1
Funcs["/math/Trunc"] = math.Trunc
//# OLD <{mTrunc}> 0
//# NEW <{mTrunc}> 1
//? Consts["/math/E"] = math.E
//# OLD <{mE}> 0
//# NEW <{mE}> 1
Funcs["/math/Float64frombits"] = math.Float64frombits
//# OLD <{mFloat64frombits}> 0
//# NEW <{mFloat64frombits}> 1
//? Consts["/math/MinInt64"] = math.MinInt64
//# OLD <{mMinInt64}> 0
//# NEW <{mMinInt64}> 1
Funcs["/math/Ilogb"] = math.Ilogb
//# OLD <{mIlogb}> 0
//# NEW <{mIlogb}> 1
//? Consts["/math/MinInt16"] = math.MinInt16
//# OLD <{mMinInt16}> 0
//# NEW <{mMinInt16}> 1
Funcs["/math/Atan"] = math.Atan
//# OLD <{mAtan}> 0
//# NEW <{mAtan}> 1
//? Consts["/math/Log10E"] = math.Log10E
//# OLD <{mLog10E}> 0
//# NEW <{mLog10E}> 1
Funcs["/math/Max"] = math.Max
//# OLD <{mMax}> 0
//# NEW <{mMax}> 1
Funcs["/math/Remainder"] = math.Remainder
//# OLD <{mRemainder}> 0
//# NEW <{mRemainder}> 1
Funcs["/math/Lgamma"] = math.Lgamma
//# OLD <{mLgamma}> 0
//# NEW <{mLgamma}> 1
//? Consts["/math/Sqrt2"] = math.Sqrt2
//# OLD <{mSqrt2}> 0
//# NEW <{mSqrt2}> 1
Funcs["/math/Tanh"] = math.Tanh
//# OLD <{mTanh}> 0
//# NEW <{mTanh}> 1
Funcs["/math/Logb"] = math.Logb
//# OLD <{mLogb}> 0
//# NEW <{mLogb}> 1
Funcs["/math/Expm1"] = math.Expm1
//# OLD <{mExpm1}> 0
//# NEW <{mExpm1}> 1
Funcs["/math/Tan"] = math.Tan
//# OLD <{mTan}> 0
//# NEW <{mTan}> 1
//? Consts["/math/Log2E"] = math.Log2E
//# OLD <{mLog2E}> 0
//# NEW <{mLog2E}> 1
Funcs["/math/Acos"] = math.Acos
//# OLD <{mAcos}> 0
//# NEW <{mAcos}> 1
Funcs["/math/Modf"] = math.Modf
//# OLD <{mModf}> 0
//# NEW <{mModf}> 1
Funcs["/math/Log10"] = math.Log10
//# OLD <{mLog10}> 0
//# NEW <{mLog10}> 1
Funcs["/math/J1"] = math.J1
//# OLD <{mJ1}> 0
//# NEW <{mJ1}> 1
Funcs["/math/Inf"] = math.Inf
//# OLD <{mInf}> 0
//# NEW <{mInf}> 1
Funcs["/math/Asin"] = math.Asin
//# OLD <{mAsin}> 0
//# NEW <{mAsin}> 1
//? Consts["/math/Ln2"] = math.Ln2
//# OLD <{mLn2}> 0
//# NEW <{mLn2}> 1
Funcs["/math/Sincos"] = math.Sincos
//# OLD <{mSincos}> 0
//# NEW <{mSincos}> 1
Funcs["/math/Cbrt"] = math.Cbrt
//# OLD <{mCbrt}> 0
//# NEW <{mCbrt}> 1
//? Consts["/math/MaxUint8"] = math.MaxUint8
//# OLD <{mMaxUint8}> 0
//# NEW <{mMaxUint8}> 1
Funcs["/math/Sinh"] = math.Sinh
//# OLD <{mSinh}> 0
//# NEW <{mSinh}> 1
//? Consts["/math/MaxUint64"] = math.MaxUint64
//# OLD <{mMaxUint64}> 0
//# NEW <{mMaxUint64}> 1
Funcs["/math/Atanh"] = math.Atanh
//# OLD <{mAtanh}> 0
//# NEW <{mAtanh}> 1
Funcs["/math/Float32frombits"] = math.Float32frombits
//# OLD <{mFloat32frombits}> 0
//# NEW <{mFloat32frombits}> 1


//     type math/big.Int
//     type math/big.Rat
//     type math/big.Word
//     func math/big.NewRat
//    const math/big.MaxBase
//     func math/big.NewInt

//? Consts["/math/big/MaxBase"] = math_big.MaxBase
//# OLD <{bMaxBase}> 0
//# NEW <{bMaxBase}> 1
Funcs["/math/big/NewInt"] = math_big.NewInt
//# OLD <{bNewInt}> 0
//# NEW <{bNewInt}> 1
Types["/math/big/Int"] = new(*math_big.Int)
//# OLD <{bInt}> 0
//# NEW <{bInt}> 1
Types["/math/big/Rat"] = new(*math_big.Rat)
//# OLD <{bRat}> 0
//# NEW <{bRat}> 1
Types["/math/big/Word"] = new(*math_big.Word)
//# OLD <{bWord}> 0
//# NEW <{bWord}> 1
Funcs["/math/big/NewRat"] = math_big.NewRat
//# OLD <{bNewRat}> 0
//# NEW <{bNewRat}> 1


//     func math/cmplx.Asinh
//     func math/cmplx.Tan
//     func math/cmplx.Log10
//     func math/cmplx.Conj
//     func math/cmplx.Cot
//     func math/cmplx.Cosh
//     func math/cmplx.Sqrt
//     func math/cmplx.IsNaN
//     func math/cmplx.Atanh
//     func math/cmplx.Phase
//     func math/cmplx.Inf
//     func math/cmplx.Acosh
//     func math/cmplx.Tanh
//     func math/cmplx.Polar
//     func math/cmplx.Exp
//     func math/cmplx.IsInf
//     func math/cmplx.Acos
//     func math/cmplx.Asin
//     func math/cmplx.Rect
//     func math/cmplx.Abs
//     func math/cmplx.Sinh
//     func math/cmplx.NaN
//     func math/cmplx.Log
//     func math/cmplx.Sin
//     func math/cmplx.Pow
//     func math/cmplx.Atan
//     func math/cmplx.Cos

Funcs["/math/cmplx/Cot"] = math_cmplx.Cot
//# OLD <{cCot}> 0
//# NEW <{cCot}> 1
Funcs["/math/cmplx/Cosh"] = math_cmplx.Cosh
//# OLD <{cCosh}> 0
//# NEW <{cCosh}> 1
Funcs["/math/cmplx/Sqrt"] = math_cmplx.Sqrt
//# OLD <{cSqrt}> 0
//# NEW <{cSqrt}> 1
Funcs["/math/cmplx/IsNaN"] = math_cmplx.IsNaN
//# OLD <{cIsNaN}> 0
//# NEW <{cIsNaN}> 1
Funcs["/math/cmplx/Atanh"] = math_cmplx.Atanh
//# OLD <{cAtanh}> 0
//# NEW <{cAtanh}> 1
Funcs["/math/cmplx/Phase"] = math_cmplx.Phase
//# OLD <{cPhase}> 0
//# NEW <{cPhase}> 1
Funcs["/math/cmplx/Inf"] = math_cmplx.Inf
//# OLD <{cInf}> 0
//# NEW <{cInf}> 1
Funcs["/math/cmplx/Acosh"] = math_cmplx.Acosh
//# OLD <{cAcosh}> 0
//# NEW <{cAcosh}> 1
Funcs["/math/cmplx/Tanh"] = math_cmplx.Tanh
//# OLD <{cTanh}> 0
//# NEW <{cTanh}> 1
Funcs["/math/cmplx/Polar"] = math_cmplx.Polar
//# OLD <{cPolar}> 0
//# NEW <{cPolar}> 1
Funcs["/math/cmplx/Exp"] = math_cmplx.Exp
//# OLD <{cExp}> 0
//# NEW <{cExp}> 1
Funcs["/math/cmplx/IsInf"] = math_cmplx.IsInf
//# OLD <{cIsInf}> 0
//# NEW <{cIsInf}> 1
Funcs["/math/cmplx/Acos"] = math_cmplx.Acos
//# OLD <{cAcos}> 0
//# NEW <{cAcos}> 1
Funcs["/math/cmplx/Asin"] = math_cmplx.Asin
//# OLD <{cAsin}> 0
//# NEW <{cAsin}> 1
Funcs["/math/cmplx/Rect"] = math_cmplx.Rect
//# OLD <{cRect}> 0
//# NEW <{cRect}> 1
Funcs["/math/cmplx/Abs"] = math_cmplx.Abs
//# OLD <{cAbs}> 0
//# NEW <{cAbs}> 1
Funcs["/math/cmplx/Sinh"] = math_cmplx.Sinh
//# OLD <{cSinh}> 0
//# NEW <{cSinh}> 1
Funcs["/math/cmplx/NaN"] = math_cmplx.NaN
//# OLD <{cNaN}> 0
//# NEW <{cNaN}> 1
Funcs["/math/cmplx/Log"] = math_cmplx.Log
//# OLD <{cLog}> 0
//# NEW <{cLog}> 1
Funcs["/math/cmplx/Sin"] = math_cmplx.Sin
//# OLD <{cSin}> 0
//# NEW <{cSin}> 1
Funcs["/math/cmplx/Pow"] = math_cmplx.Pow
//# OLD <{cPow}> 0
//# NEW <{cPow}> 1
Funcs["/math/cmplx/Atan"] = math_cmplx.Atan
//# OLD <{cAtan}> 0
//# NEW <{cAtan}> 1
Funcs["/math/cmplx/Cos"] = math_cmplx.Cos
//# OLD <{cCos}> 0
//# NEW <{cCos}> 1
Funcs["/math/cmplx/Asinh"] = math_cmplx.Asinh
//# OLD <{cAsinh}> 0
//# NEW <{cAsinh}> 1
Funcs["/math/cmplx/Tan"] = math_cmplx.Tan
//# OLD <{cTan}> 0
//# NEW <{cTan}> 1
Funcs["/math/cmplx/Log10"] = math_cmplx.Log10
//# OLD <{cLog10}> 0
//# NEW <{cLog10}> 1
Funcs["/math/cmplx/Conj"] = math_cmplx.Conj
//# OLD <{cConj}> 0
//# NEW <{cConj}> 1


//     func math/rand.NewZipf
//     func math/rand.Int31n
//     type math/rand.Rand
//     type math/rand.Zipf
//     func math/rand.Seed
//     func math/rand.Int63
//     func math/rand.Intn
//     func math/rand.Int31
//     type math/rand.Source
//     func math/rand.Float64
//     func math/rand.New
//     func math/rand.ExpFloat64
//     func math/rand.Perm
//     func math/rand.NewSource
//     func math/rand.Int
//     func math/rand.Uint32
//     func math/rand.Float32
//     func math/rand.Int63n
//     func math/rand.NormFloat64

Types["/math/rand/Zipf"] = new(*math_rand.Zipf)
//# OLD <{rZipf}> 0
//# NEW <{rZipf}> 1
Funcs["/math/rand/Seed"] = math_rand.Seed
//# OLD <{rSeed}> 0
//# NEW <{rSeed}> 1
Funcs["/math/rand/Int63"] = math_rand.Int63
//# OLD <{rInt63}> 0
//# NEW <{rInt63}> 1
Funcs["/math/rand/Intn"] = math_rand.Intn
//# OLD <{rIntn}> 0
//# NEW <{rIntn}> 1
Funcs["/math/rand/Int31"] = math_rand.Int31
//# OLD <{rInt31}> 0
//# NEW <{rInt31}> 1
Types["/math/rand/Source"] = new(*math_rand.Source)
//# OLD <{rSource}> 0
//# NEW <{rSource}> 1
Funcs["/math/rand/Float64"] = math_rand.Float64
//# OLD <{rFloat64}> 0
//# NEW <{rFloat64}> 1
Funcs["/math/rand/New"] = math_rand.New
//# OLD <{rNew}> 1
//# NEW <{rNew}> 2
Funcs["/math/rand/ExpFloat64"] = math_rand.ExpFloat64
//# OLD <{rExpFloat64}> 0
//# NEW <{rExpFloat64}> 1
Funcs["/math/rand/Perm"] = math_rand.Perm
//# OLD <{rPerm}> 0
//# NEW <{rPerm}> 1
Funcs["/math/rand/NewSource"] = math_rand.NewSource
//# OLD <{rNewSource}> 0
//# NEW <{rNewSource}> 1
Funcs["/math/rand/Int"] = math_rand.Int
//# OLD <{rInt}> 1
//# NEW <{rInt}> 2
Funcs["/math/rand/Uint32"] = math_rand.Uint32
//# OLD <{rUint32}> 0
//# NEW <{rUint32}> 1
Funcs["/math/rand/Float32"] = math_rand.Float32
//# OLD <{rFloat32}> 0
//# NEW <{rFloat32}> 1
Funcs["/math/rand/Int63n"] = math_rand.Int63n
//# OLD <{rInt63n}> 0
//# NEW <{rInt63n}> 1
Funcs["/math/rand/NormFloat64"] = math_rand.NormFloat64
//# OLD <{rNormFloat64}> 0
//# NEW <{rNormFloat64}> 1
Funcs["/math/rand/NewZipf"] = math_rand.NewZipf
//# OLD <{rNewZipf}> 0
//# NEW <{rNewZipf}> 1
Funcs["/math/rand/Int31n"] = math_rand.Int31n
//# OLD <{rInt31n}> 0
//# NEW <{rInt31n}> 1
Types["/math/rand/Rand"] = new(*math_rand.Rand)
//# OLD <{rRand}> 0
//# NEW <{rRand}> 1


//     func mime.TypeByExtension
//     func mime.AddExtensionType
//     func mime.FormatMediaType
//     func mime.ParseMediaType

Funcs["/mime/AddExtensionType"] = mime.AddExtensionType
//# OLD <{mAddExtensionType}> 0
//# NEW <{mAddExtensionType}> 1
Funcs["/mime/FormatMediaType"] = mime.FormatMediaType
//# OLD <{mFormatMediaType}> 0
//# NEW <{mFormatMediaType}> 1
Funcs["/mime/ParseMediaType"] = mime.ParseMediaType
//# OLD <{mParseMediaType}> 0
//# NEW <{mParseMediaType}> 1
Funcs["/mime/TypeByExtension"] = mime.TypeByExtension
//# OLD <{mTypeByExtension}> 0
//# NEW <{mTypeByExtension}> 1


//     type mime/multipart.Part
//     func mime/multipart.NewWriter
//     type mime/multipart.Form
//     func mime/multipart.NewReader
//     type mime/multipart.Reader
//     type mime/multipart.FileHeader
//     type mime/multipart.Writer
//     type mime/multipart.File

Funcs["/mime/multipart/NewReader"] = mime_multipart.NewReader
//# OLD <{mNewReader}> 0
//# NEW <{mNewReader}> 1
Types["/mime/multipart/Reader"] = new(*mime_multipart.Reader)
//# OLD <{mReader}> 0
//# NEW <{mReader}> 1
Types["/mime/multipart/FileHeader"] = new(*mime_multipart.FileHeader)
//# OLD <{mFileHeader}> 1
//# NEW <{mFileHeader}> 2
Types["/mime/multipart/Writer"] = new(*mime_multipart.Writer)
//# OLD <{mWriter}> 0
//# NEW <{mWriter}> 1
Types["/mime/multipart/File"] = new(*mime_multipart.File)
//# OLD <{mFile}> 1
//# NEW <{mFile}> 2
Types["/mime/multipart/Part"] = new(*mime_multipart.Part)
//# OLD <{mPart}> 0
//# NEW <{mPart}> 1
Funcs["/mime/multipart/NewWriter"] = mime_multipart.NewWriter
//# OLD <{mNewWriter}> 0
//# NEW <{mNewWriter}> 1
Types["/mime/multipart/Form"] = new(*mime_multipart.Form)
//# OLD <{mForm}> 0
//# NEW <{mForm}> 1


//     func net.InterfaceAddrs
//     func net.DialTCP
//    const net.FlagBroadcast
//     type net.AddrError
//     type net.HardwareAddr
//     func net.FileListener
//     type net.TCPListener
//     type net.Listener
//     type net.ParseError
//     func net.ParseIP
//     func net.ParseMAC
//     func net.DialUDP
//     func net.ResolveTCPAddr
//     type net.Addr
//     func net.ListenPacket
//      var net.IPv6unspecified
//     func net.LookupAddr
//    const net.IPv6len
//     func net.ListenUnixgram
//     type net.DNSConfigError
//     func net.JoinHostPort
//     func net.ListenIP
//     func net.ResolveUDPAddr
//    const net.FlagUp
//     type net.IPAddr
//     type net.SRV
//     type net.MX
//     type net.Conn
//     type net.UnixConn
//      var net.ErrWriteToConnected
//     type net.TCPAddr
//     func net.LookupIP
//     func net.FileConn
//     func net.ListenUDP
//     type net.IP
//     func net.IPv4
//     func net.LookupMX
//     func net.ResolveUnixAddr
//      var net.IPv6linklocalallrouters
//     func net.ListenTCP
//      var net.IPv6interfacelocalallnodes
//     type net.OpError
//     type net.TCPConn
//     func net.ParseCIDR
//     func net.IPv4Mask
//     type net.IPMask
//      var net.IPv4allrouter
//     func net.InterfaceByName
//     func net.LookupTXT
//    const net.FlagPointToPoint
//     func net.LookupHost
//     func net.LookupSRV
//      var net.IPv4bcast
//     type net.DNSError
//     type net.Flags
//     func net.FilePacketConn
//     type net.UnixAddr
//     type net.IPConn
//     func net.InterfaceByIndex
//     type net.Error
//     func net.SplitHostPort
//    const net.FlagMulticast
//     type net.IPNet
//    const net.IPv4len
//      var net.IPv6loopback
//     func net.Pipe
//    const net.FlagLoopback
//      var net.IPv6zero
//     func net.CIDRMask
//     type net.UnixListener
//     func net.ListenMulticastUDP
//     type net.InvalidAddrError
//     type net.UDPAddr
//     type net.UDPConn
//      var net.IPv4allsys
//     func net.DialTimeout
//     func net.LookupCNAME
//     func net.DialIP
//     func net.Interfaces
//     type net.PacketConn
//     func net.LookupPort
//     type net.Interface
//      var net.IPv4zero
//      var net.IPv6linklocalallnodes
//     func net.ResolveIPAddr
//     func net.Listen
//     func net.DialUnix
//     func net.Dial
//     func net.ListenUnix
//     type net.UnknownNetworkError

Types["/net/Error"] = new(*net.Error)
//# OLD <{nError}> 0
//# NEW <{nError}> 1
Funcs["/net/SplitHostPort"] = net.SplitHostPort
//# OLD <{nSplitHostPort}> 0
//# NEW <{nSplitHostPort}> 1
//? Consts["/net/FlagMulticast"] = net.FlagMulticast
//# OLD <{nFlagMulticast}> 0
//# NEW <{nFlagMulticast}> 1
Types["/net/IPNet"] = new(*net.IPNet)
//# OLD <{nIPNet}> 0
//# NEW <{nIPNet}> 1
//? Consts["/net/IPv4len"] = net.IPv4len
//# OLD <{nIPv4len}> 0
//# NEW <{nIPv4len}> 1
Vars["/net/IPv6loopback"] = &net.IPv6loopback
//# OLD <{nIPv6loopback}> 0
//# NEW <{nIPv6loopback}> 1
Funcs["/net/Pipe"] = net.Pipe
//# OLD <{nPipe}> 0
//# NEW <{nPipe}> 1
//? Consts["/net/FlagLoopback"] = net.FlagLoopback
//# OLD <{nFlagLoopback}> 0
//# NEW <{nFlagLoopback}> 1
Vars["/net/IPv6zero"] = &net.IPv6zero
//# OLD <{nIPv6zero}> 0
//# NEW <{nIPv6zero}> 1
Funcs["/net/CIDRMask"] = net.CIDRMask
//# OLD <{nCIDRMask}> 0
//# NEW <{nCIDRMask}> 1
Types["/net/UnixListener"] = new(*net.UnixListener)
//# OLD <{nUnixListener}> 0
//# NEW <{nUnixListener}> 1
Funcs["/net/ListenMulticastUDP"] = net.ListenMulticastUDP
//# OLD <{nListenMulticastUDP}> 0
//# NEW <{nListenMulticastUDP}> 1
Types["/net/InvalidAddrError"] = new(*net.InvalidAddrError)
//# OLD <{nInvalidAddrError}> 0
//# NEW <{nInvalidAddrError}> 1
Types["/net/UDPAddr"] = new(*net.UDPAddr)
//# OLD <{nUDPAddr}> 0
//# NEW <{nUDPAddr}> 1
Types["/net/UDPConn"] = new(*net.UDPConn)
//# OLD <{nUDPConn}> 0
//# NEW <{nUDPConn}> 1
Vars["/net/IPv4allsys"] = &net.IPv4allsys
//# OLD <{nIPv4allsys}> 0
//# NEW <{nIPv4allsys}> 1
Funcs["/net/DialTimeout"] = net.DialTimeout
//# OLD <{nDialTimeout}> 0
//# NEW <{nDialTimeout}> 1
Funcs["/net/LookupCNAME"] = net.LookupCNAME
//# OLD <{nLookupCNAME}> 0
//# NEW <{nLookupCNAME}> 1
Funcs["/net/DialIP"] = net.DialIP
//# OLD <{nDialIP}> 0
//# NEW <{nDialIP}> 1
Funcs["/net/Interfaces"] = net.Interfaces
//# OLD <{nInterfaces}> 0
//# NEW <{nInterfaces}> 1
Types["/net/PacketConn"] = new(*net.PacketConn)
//# OLD <{nPacketConn}> 0
//# NEW <{nPacketConn}> 1
Funcs["/net/LookupPort"] = net.LookupPort
//# OLD <{nLookupPort}> 0
//# NEW <{nLookupPort}> 1
Types["/net/Interface"] = new(*net.Interface)
//# OLD <{nInterface}> 0
//# NEW <{nInterface}> 1
Vars["/net/IPv4zero"] = &net.IPv4zero
//# OLD <{nIPv4zero}> 0
//# NEW <{nIPv4zero}> 1
Vars["/net/IPv6linklocalallnodes"] = &net.IPv6linklocalallnodes
//# OLD <{nIPv6linklocalallnodes}> 0
//# NEW <{nIPv6linklocalallnodes}> 1
Funcs["/net/ResolveIPAddr"] = net.ResolveIPAddr
//# OLD <{nResolveIPAddr}> 0
//# NEW <{nResolveIPAddr}> 1
Funcs["/net/Listen"] = net.Listen
//# OLD <{nListen}> 0
//# NEW <{nListen}> 1
Funcs["/net/DialUnix"] = net.DialUnix
//# OLD <{nDialUnix}> 0
//# NEW <{nDialUnix}> 1
Funcs["/net/Dial"] = net.Dial
//# OLD <{nDial}> 0
//# NEW <{nDial}> 1
Funcs["/net/ListenUnix"] = net.ListenUnix
//# OLD <{nListenUnix}> 0
//# NEW <{nListenUnix}> 1
Types["/net/UnknownNetworkError"] = new(*net.UnknownNetworkError)
//# OLD <{nUnknownNetworkError}> 0
//# NEW <{nUnknownNetworkError}> 1
Funcs["/net/InterfaceAddrs"] = net.InterfaceAddrs
//# OLD <{nInterfaceAddrs}> 0
//# NEW <{nInterfaceAddrs}> 1
Funcs["/net/DialTCP"] = net.DialTCP
//# OLD <{nDialTCP}> 0
//# NEW <{nDialTCP}> 1
//? Consts["/net/FlagBroadcast"] = net.FlagBroadcast
//# OLD <{nFlagBroadcast}> 0
//# NEW <{nFlagBroadcast}> 1
Types["/net/AddrError"] = new(*net.AddrError)
//# OLD <{nAddrError}> 0
//# NEW <{nAddrError}> 1
Types["/net/HardwareAddr"] = new(*net.HardwareAddr)
//# OLD <{nHardwareAddr}> 0
//# NEW <{nHardwareAddr}> 1
Funcs["/net/FileListener"] = net.FileListener
//# OLD <{nFileListener}> 0
//# NEW <{nFileListener}> 1
Types["/net/TCPListener"] = new(*net.TCPListener)
//# OLD <{nTCPListener}> 0
//# NEW <{nTCPListener}> 1
Types["/net/Listener"] = new(*net.Listener)
//# OLD <{nListener}> 0
//# NEW <{nListener}> 1
Types["/net/ParseError"] = new(*net.ParseError)
//# OLD <{nParseError}> 0
//# NEW <{nParseError}> 1
Funcs["/net/ParseIP"] = net.ParseIP
//# OLD <{nParseIP}> 0
//# NEW <{nParseIP}> 1
Funcs["/net/ParseMAC"] = net.ParseMAC
//# OLD <{nParseMAC}> 0
//# NEW <{nParseMAC}> 1
Funcs["/net/DialUDP"] = net.DialUDP
//# OLD <{nDialUDP}> 0
//# NEW <{nDialUDP}> 1
Funcs["/net/ResolveTCPAddr"] = net.ResolveTCPAddr
//# OLD <{nResolveTCPAddr}> 0
//# NEW <{nResolveTCPAddr}> 1
Types["/net/Addr"] = new(*net.Addr)
//# OLD <{nAddr}> 0
//# NEW <{nAddr}> 1
Funcs["/net/ListenPacket"] = net.ListenPacket
//# OLD <{nListenPacket}> 0
//# NEW <{nListenPacket}> 1
Vars["/net/IPv6unspecified"] = &net.IPv6unspecified
//# OLD <{nIPv6unspecified}> 0
//# NEW <{nIPv6unspecified}> 1
Funcs["/net/LookupAddr"] = net.LookupAddr
//# OLD <{nLookupAddr}> 0
//# NEW <{nLookupAddr}> 1
//? Consts["/net/IPv6len"] = net.IPv6len
//# OLD <{nIPv6len}> 0
//# NEW <{nIPv6len}> 1
Funcs["/net/ListenUnixgram"] = net.ListenUnixgram
//# OLD <{nListenUnixgram}> 0
//# NEW <{nListenUnixgram}> 1
Types["/net/DNSConfigError"] = new(*net.DNSConfigError)
//# OLD <{nDNSConfigError}> 0
//# NEW <{nDNSConfigError}> 1
Funcs["/net/JoinHostPort"] = net.JoinHostPort
//# OLD <{nJoinHostPort}> 0
//# NEW <{nJoinHostPort}> 1
Funcs["/net/ListenIP"] = net.ListenIP
//# OLD <{nListenIP}> 0
//# NEW <{nListenIP}> 1
Funcs["/net/ResolveUDPAddr"] = net.ResolveUDPAddr
//# OLD <{nResolveUDPAddr}> 0
//# NEW <{nResolveUDPAddr}> 1
//? Consts["/net/FlagUp"] = net.FlagUp
//# OLD <{nFlagUp}> 0
//# NEW <{nFlagUp}> 1
Types["/net/IPAddr"] = new(*net.IPAddr)
//# OLD <{nIPAddr}> 0
//# NEW <{nIPAddr}> 1
Types["/net/SRV"] = new(*net.SRV)
//# OLD <{nSRV}> 0
//# NEW <{nSRV}> 1
Types["/net/MX"] = new(*net.MX)
//# OLD <{nMX}> 0
//# NEW <{nMX}> 1
Types["/net/Conn"] = new(*net.Conn)
//# OLD <{nConn}> 0
//# NEW <{nConn}> 1
Types["/net/UnixConn"] = new(*net.UnixConn)
//# OLD <{nUnixConn}> 0
//# NEW <{nUnixConn}> 1
Vars["/net/ErrWriteToConnected"] = &net.ErrWriteToConnected
//# OLD <{nErrWriteToConnected}> 0
//# NEW <{nErrWriteToConnected}> 1
Types["/net/TCPAddr"] = new(*net.TCPAddr)
//# OLD <{nTCPAddr}> 0
//# NEW <{nTCPAddr}> 1
Funcs["/net/LookupIP"] = net.LookupIP
//# OLD <{nLookupIP}> 0
//# NEW <{nLookupIP}> 1
Funcs["/net/FileConn"] = net.FileConn
//# OLD <{nFileConn}> 0
//# NEW <{nFileConn}> 1
Funcs["/net/ListenUDP"] = net.ListenUDP
//# OLD <{nListenUDP}> 0
//# NEW <{nListenUDP}> 1
Types["/net/IP"] = new(*net.IP)
//# OLD <{nIP}> 0
//# NEW <{nIP}> 1
Funcs["/net/IPv4"] = net.IPv4
//# OLD <{nIPv4}> 0
//# NEW <{nIPv4}> 1
Funcs["/net/LookupMX"] = net.LookupMX
//# OLD <{nLookupMX}> 0
//# NEW <{nLookupMX}> 1
Funcs["/net/ResolveUnixAddr"] = net.ResolveUnixAddr
//# OLD <{nResolveUnixAddr}> 0
//# NEW <{nResolveUnixAddr}> 1
Vars["/net/IPv6linklocalallrouters"] = &net.IPv6linklocalallrouters
//# OLD <{nIPv6linklocalallrouters}> 0
//# NEW <{nIPv6linklocalallrouters}> 1
Funcs["/net/ListenTCP"] = net.ListenTCP
//# OLD <{nListenTCP}> 0
//# NEW <{nListenTCP}> 1
Vars["/net/IPv6interfacelocalallnodes"] = &net.IPv6interfacelocalallnodes
//# OLD <{nIPv6interfacelocalallnodes}> 0
//# NEW <{nIPv6interfacelocalallnodes}> 1
Types["/net/OpError"] = new(*net.OpError)
//# OLD <{nOpError}> 0
//# NEW <{nOpError}> 1
Types["/net/TCPConn"] = new(*net.TCPConn)
//# OLD <{nTCPConn}> 0
//# NEW <{nTCPConn}> 1
Funcs["/net/ParseCIDR"] = net.ParseCIDR
//# OLD <{nParseCIDR}> 0
//# NEW <{nParseCIDR}> 1
Funcs["/net/IPv4Mask"] = net.IPv4Mask
//# OLD <{nIPv4Mask}> 0
//# NEW <{nIPv4Mask}> 1
Types["/net/IPMask"] = new(*net.IPMask)
//# OLD <{nIPMask}> 0
//# NEW <{nIPMask}> 1
Vars["/net/IPv4allrouter"] = &net.IPv4allrouter
//# OLD <{nIPv4allrouter}> 0
//# NEW <{nIPv4allrouter}> 1
Funcs["/net/InterfaceByName"] = net.InterfaceByName
//# OLD <{nInterfaceByName}> 0
//# NEW <{nInterfaceByName}> 1
Funcs["/net/LookupTXT"] = net.LookupTXT
//# OLD <{nLookupTXT}> 0
//# NEW <{nLookupTXT}> 1
//? Consts["/net/FlagPointToPoint"] = net.FlagPointToPoint
//# OLD <{nFlagPointToPoint}> 0
//# NEW <{nFlagPointToPoint}> 1
Funcs["/net/LookupHost"] = net.LookupHost
//# OLD <{nLookupHost}> 0
//# NEW <{nLookupHost}> 1
Funcs["/net/LookupSRV"] = net.LookupSRV
//# OLD <{nLookupSRV}> 0
//# NEW <{nLookupSRV}> 1
Vars["/net/IPv4bcast"] = &net.IPv4bcast
//# OLD <{nIPv4bcast}> 0
//# NEW <{nIPv4bcast}> 1
Types["/net/DNSError"] = new(*net.DNSError)
//# OLD <{nDNSError}> 0
//# NEW <{nDNSError}> 1
Types["/net/Flags"] = new(*net.Flags)
//# OLD <{nFlags}> 0
//# NEW <{nFlags}> 1
Funcs["/net/FilePacketConn"] = net.FilePacketConn
//# OLD <{nFilePacketConn}> 0
//# NEW <{nFilePacketConn}> 1
Types["/net/UnixAddr"] = new(*net.UnixAddr)
//# OLD <{nUnixAddr}> 0
//# NEW <{nUnixAddr}> 1
Types["/net/IPConn"] = new(*net.IPConn)
//# OLD <{nIPConn}> 0
//# NEW <{nIPConn}> 1
Funcs["/net/InterfaceByIndex"] = net.InterfaceByIndex
//# OLD <{nInterfaceByIndex}> 0
//# NEW <{nInterfaceByIndex}> 1


//     func net/http.ServeContent
//      var net/http.ErrNotMultipart
//    const net/http.StatusLengthRequired
//     func net/http.HandleFunc
//     func net/http.NewFileTransport
//    const net/http.DefaultMaxHeaderBytes
//    const net/http.StatusUnsupportedMediaType
//    const net/http.StatusRequestURITooLong
//     func net/http.MaxBytesReader
//    const net/http.StatusAccepted
//    const net/http.StatusNonAuthoritativeInfo
//     func net/http.SetCookie
//     type net/http.Flusher
//      var net/http.ErrContentLength
//    const net/http.StatusGatewayTimeout
//    const net/http.StatusPartialContent
//     func net/http.ReadRequest
//     type net/http.Request
//      var net/http.ErrUnexpectedTrailer
//    const net/http.StatusRequestedRangeNotSatisfiable
//     type net/http.Transport
//    const net/http.StatusBadGateway
//     func net/http.ProxyFromEnvironment
//     type net/http.Client
//    const net/http.StatusHTTPVersionNotSupported
//      var net/http.ErrHijacked
//    const net/http.StatusBadRequest
//     type net/http.Server
//     func net/http.PostForm
//    const net/http.StatusPaymentRequired
//    const net/http.StatusProxyAuthRequired
//     type net/http.ResponseWriter
//     func net/http.ServeFile
//    const net/http.StatusUseProxy
//     type net/http.HandlerFunc
//      var net/http.ErrNotSupported
//      var net/http.ErrHandlerTimeout
//    const net/http.StatusServiceUnavailable
//    const net/http.StatusUnauthorized
//     type net/http.ProtocolError
//    const net/http.StatusSwitchingProtocols
//      var net/http.ErrShortBody
//    const net/http.StatusResetContent
//    const net/http.StatusRequestEntityTooLarge
//     type net/http.Handler
//     func net/http.ListenAndServe
//      var net/http.ErrNoLocation
//     func net/http.FileServer
//     type net/http.Hijacker
//    const net/http.StatusConflict
//     func net/http.RedirectHandler
//     func net/http.Head
//     func net/http.Get
//      var net/http.ErrBodyNotAllowed
//      var net/http.ErrWriteAfterFlush
//    const net/http.StatusForbidden
//      var net/http.DefaultClient
//    const net/http.StatusGone
//    const net/http.StatusFound
//     func net/http.NewServeMux
//    const net/http.StatusContinue
//     type net/http.Header
//     func net/http.Error
//    const net/http.StatusNotImplemented
//     type net/http.ServeMux
//    const net/http.StatusOK
//     func net/http.CanonicalHeaderKey
//     func net/http.ListenAndServeTLS
//    const net/http.StatusMultipleChoices
//     type net/http.FileSystem
//     func net/http.ReadResponse
//      var net/http.DefaultServeMux
//    const net/http.StatusInternalServerError
//     func net/http.Redirect
//    const net/http.StatusMovedPermanently
//      var net/http.DefaultTransport
//     type net/http.Cookie
//      var net/http.ErrBodyReadAfterClose
//     func net/http.ParseHTTPVersion
//     func net/http.Serve
//     func net/http.StatusText
//    const net/http.StatusTemporaryRedirect
//     func net/http.NewRequest
//    const net/http.StatusNotFound
//     type net/http.RoundTripper
//      var net/http.ErrLineTooLong
//     func net/http.StripPrefix
//    const net/http.StatusNotAcceptable
//     func net/http.NotFoundHandler
//      var net/http.ErrHeaderTooLong
//     func net/http.NotFound
//     func net/http.TimeoutHandler
//     func net/http.Handle
//      var net/http.ErrMissingFile
//     type net/http.Response
//    const net/http.StatusSeeOther
//    const net/http.StatusExpectationFailed
//      var net/http.ErrMissingContentLength
//     type net/http.CookieJar
//    const net/http.TimeFormat
//     type net/http.Dir
//     type net/http.File
//    const net/http.StatusTeapot
//     func net/http.Post
//    const net/http.StatusNotModified
//     func net/http.DetectContentType
//    const net/http.StatusPreconditionFailed
//    const net/http.StatusCreated
//      var net/http.ErrNoCookie
//      var net/http.ErrMissingBoundary
//    const net/http.StatusNoContent
//    const net/http.StatusRequestTimeout
//    const net/http.StatusMethodNotAllowed
//    const net/http.DefaultMaxIdleConnsPerHost
//     func net/http.ProxyURL

//? Consts["/net/http/StatusUnsupportedMediaType"] = net_http.StatusUnsupportedMediaType
//# OLD <{hStatusUnsupportedMediaType}> 0
//# NEW <{hStatusUnsupportedMediaType}> 1
//? Consts["/net/http/StatusRequestURITooLong"] = net_http.StatusRequestURITooLong
//# OLD <{hStatusRequestURITooLong}> 0
//# NEW <{hStatusRequestURITooLong}> 1
Funcs["/net/http/MaxBytesReader"] = net_http.MaxBytesReader
//# OLD <{hMaxBytesReader}> 0
//# NEW <{hMaxBytesReader}> 1
//? Consts["/net/http/StatusAccepted"] = net_http.StatusAccepted
//# OLD <{hStatusAccepted}> 0
//# NEW <{hStatusAccepted}> 1
//? Consts["/net/http/StatusNonAuthoritativeInfo"] = net_http.StatusNonAuthoritativeInfo
//# OLD <{hStatusNonAuthoritativeInfo}> 0
//# NEW <{hStatusNonAuthoritativeInfo}> 1
Funcs["/net/http/SetCookie"] = net_http.SetCookie
//# OLD <{hSetCookie}> 0
//# NEW <{hSetCookie}> 1
Types["/net/http/Flusher"] = new(*net_http.Flusher)
//# OLD <{hFlusher}> 0
//# NEW <{hFlusher}> 1
Vars["/net/http/ErrContentLength"] = &net_http.ErrContentLength
//# OLD <{hErrContentLength}> 0
//# NEW <{hErrContentLength}> 1
//? Consts["/net/http/StatusGatewayTimeout"] = net_http.StatusGatewayTimeout
//# OLD <{hStatusGatewayTimeout}> 0
//# NEW <{hStatusGatewayTimeout}> 1
//? Consts["/net/http/StatusPartialContent"] = net_http.StatusPartialContent
//# OLD <{hStatusPartialContent}> 0
//# NEW <{hStatusPartialContent}> 1
Funcs["/net/http/ReadRequest"] = net_http.ReadRequest
//# OLD <{hReadRequest}> 0
//# NEW <{hReadRequest}> 1
Types["/net/http/Request"] = new(*net_http.Request)
//# OLD <{hRequest}> 0
//# NEW <{hRequest}> 1
Vars["/net/http/ErrUnexpectedTrailer"] = &net_http.ErrUnexpectedTrailer
//# OLD <{hErrUnexpectedTrailer}> 0
//# NEW <{hErrUnexpectedTrailer}> 1
//? Consts["/net/http/StatusRequestedRangeNotSatisfiable"] = net_http.StatusRequestedRangeNotSatisfiable
//# OLD <{hStatusRequestedRangeNotSatisfiable}> 0
//# NEW <{hStatusRequestedRangeNotSatisfiable}> 1
Types["/net/http/Transport"] = new(*net_http.Transport)
//# OLD <{hTransport}> 0
//# NEW <{hTransport}> 1
//? Consts["/net/http/StatusBadGateway"] = net_http.StatusBadGateway
//# OLD <{hStatusBadGateway}> 0
//# NEW <{hStatusBadGateway}> 1
Funcs["/net/http/ProxyFromEnvironment"] = net_http.ProxyFromEnvironment
//# OLD <{hProxyFromEnvironment}> 0
//# NEW <{hProxyFromEnvironment}> 1
Types["/net/http/Client"] = new(*net_http.Client)
//# OLD <{hClient}> 0
//# NEW <{hClient}> 1
//? Consts["/net/http/StatusHTTPVersionNotSupported"] = net_http.StatusHTTPVersionNotSupported
//# OLD <{hStatusHTTPVersionNotSupported}> 0
//# NEW <{hStatusHTTPVersionNotSupported}> 1
Vars["/net/http/ErrHijacked"] = &net_http.ErrHijacked
//# OLD <{hErrHijacked}> 0
//# NEW <{hErrHijacked}> 1
//? Consts["/net/http/StatusBadRequest"] = net_http.StatusBadRequest
//# OLD <{hStatusBadRequest}> 0
//# NEW <{hStatusBadRequest}> 1
Types["/net/http/Server"] = new(*net_http.Server)
//# OLD <{hServer}> 0
//# NEW <{hServer}> 1
Funcs["/net/http/PostForm"] = net_http.PostForm
//# OLD <{hPostForm}> 0
//# NEW <{hPostForm}> 1
//? Consts["/net/http/StatusPaymentRequired"] = net_http.StatusPaymentRequired
//# OLD <{hStatusPaymentRequired}> 0
//# NEW <{hStatusPaymentRequired}> 1
//? Consts["/net/http/StatusProxyAuthRequired"] = net_http.StatusProxyAuthRequired
//# OLD <{hStatusProxyAuthRequired}> 0
//# NEW <{hStatusProxyAuthRequired}> 1
Types["/net/http/ResponseWriter"] = new(*net_http.ResponseWriter)
//# OLD <{hResponseWriter}> 0
//# NEW <{hResponseWriter}> 1
Funcs["/net/http/ServeFile"] = net_http.ServeFile
//# OLD <{hServeFile}> 0
//# NEW <{hServeFile}> 1
//? Consts["/net/http/StatusUseProxy"] = net_http.StatusUseProxy
//# OLD <{hStatusUseProxy}> 0
//# NEW <{hStatusUseProxy}> 1
Types["/net/http/HandlerFunc"] = new(*net_http.HandlerFunc)
//# OLD <{hHandlerFunc}> 0
//# NEW <{hHandlerFunc}> 1
Vars["/net/http/ErrNotSupported"] = &net_http.ErrNotSupported
//# OLD <{hErrNotSupported}> 0
//# NEW <{hErrNotSupported}> 1
Vars["/net/http/ErrHandlerTimeout"] = &net_http.ErrHandlerTimeout
//# OLD <{hErrHandlerTimeout}> 0
//# NEW <{hErrHandlerTimeout}> 1
//? Consts["/net/http/StatusServiceUnavailable"] = net_http.StatusServiceUnavailable
//# OLD <{hStatusServiceUnavailable}> 0
//# NEW <{hStatusServiceUnavailable}> 1
//? Consts["/net/http/StatusUnauthorized"] = net_http.StatusUnauthorized
//# OLD <{hStatusUnauthorized}> 0
//# NEW <{hStatusUnauthorized}> 1
Types["/net/http/ProtocolError"] = new(*net_http.ProtocolError)
//# OLD <{hProtocolError}> 0
//# NEW <{hProtocolError}> 1
//? Consts["/net/http/StatusSwitchingProtocols"] = net_http.StatusSwitchingProtocols
//# OLD <{hStatusSwitchingProtocols}> 0
//# NEW <{hStatusSwitchingProtocols}> 1
Vars["/net/http/ErrShortBody"] = &net_http.ErrShortBody
//# OLD <{hErrShortBody}> 0
//# NEW <{hErrShortBody}> 1
//? Consts["/net/http/StatusResetContent"] = net_http.StatusResetContent
//# OLD <{hStatusResetContent}> 0
//# NEW <{hStatusResetContent}> 1
//? Consts["/net/http/StatusRequestEntityTooLarge"] = net_http.StatusRequestEntityTooLarge
//# OLD <{hStatusRequestEntityTooLarge}> 0
//# NEW <{hStatusRequestEntityTooLarge}> 1
Types["/net/http/Handler"] = new(*net_http.Handler)
//# OLD <{hHandler}> 0
//# NEW <{hHandler}> 1
Funcs["/net/http/ListenAndServe"] = net_http.ListenAndServe
//# OLD <{hListenAndServe}> 0
//# NEW <{hListenAndServe}> 1
Vars["/net/http/ErrNoLocation"] = &net_http.ErrNoLocation
//# OLD <{hErrNoLocation}> 0
//# NEW <{hErrNoLocation}> 1
Funcs["/net/http/FileServer"] = net_http.FileServer
//# OLD <{hFileServer}> 0
//# NEW <{hFileServer}> 1
Types["/net/http/Hijacker"] = new(*net_http.Hijacker)
//# OLD <{hHijacker}> 0
//# NEW <{hHijacker}> 1
//? Consts["/net/http/StatusConflict"] = net_http.StatusConflict
//# OLD <{hStatusConflict}> 0
//# NEW <{hStatusConflict}> 1
Funcs["/net/http/RedirectHandler"] = net_http.RedirectHandler
//# OLD <{hRedirectHandler}> 0
//# NEW <{hRedirectHandler}> 1
Funcs["/net/http/Head"] = net_http.Head
//# OLD <{hHead}> 0
//# NEW <{hHead}> 1
Funcs["/net/http/Get"] = net_http.Get
//# OLD <{hGet}> 0
//# NEW <{hGet}> 1
Vars["/net/http/ErrBodyNotAllowed"] = &net_http.ErrBodyNotAllowed
//# OLD <{hErrBodyNotAllowed}> 0
//# NEW <{hErrBodyNotAllowed}> 1
Vars["/net/http/ErrWriteAfterFlush"] = &net_http.ErrWriteAfterFlush
//# OLD <{hErrWriteAfterFlush}> 0
//# NEW <{hErrWriteAfterFlush}> 1
//? Consts["/net/http/StatusForbidden"] = net_http.StatusForbidden
//# OLD <{hStatusForbidden}> 0
//# NEW <{hStatusForbidden}> 1
Vars["/net/http/DefaultClient"] = &net_http.DefaultClient
//# OLD <{hDefaultClient}> 0
//# NEW <{hDefaultClient}> 1
//? Consts["/net/http/StatusGone"] = net_http.StatusGone
//# OLD <{hStatusGone}> 0
//# NEW <{hStatusGone}> 1
//? Consts["/net/http/StatusFound"] = net_http.StatusFound
//# OLD <{hStatusFound}> 0
//# NEW <{hStatusFound}> 1
Funcs["/net/http/NewServeMux"] = net_http.NewServeMux
//# OLD <{hNewServeMux}> 0
//# NEW <{hNewServeMux}> 1
//? Consts["/net/http/StatusContinue"] = net_http.StatusContinue
//# OLD <{hStatusContinue}> 0
//# NEW <{hStatusContinue}> 1
Types["/net/http/Header"] = new(*net_http.Header)
//# OLD <{hHeader}> 0
//# NEW <{hHeader}> 1
Funcs["/net/http/Error"] = net_http.Error
//# OLD <{hError}> 0
//# NEW <{hError}> 1
//? Consts["/net/http/StatusNotImplemented"] = net_http.StatusNotImplemented
//# OLD <{hStatusNotImplemented}> 0
//# NEW <{hStatusNotImplemented}> 1
Types["/net/http/ServeMux"] = new(*net_http.ServeMux)
//# OLD <{hServeMux}> 0
//# NEW <{hServeMux}> 1
//? Consts["/net/http/StatusOK"] = net_http.StatusOK
//# OLD <{hStatusOK}> 0
//# NEW <{hStatusOK}> 1
Funcs["/net/http/CanonicalHeaderKey"] = net_http.CanonicalHeaderKey
//# OLD <{hCanonicalHeaderKey}> 0
//# NEW <{hCanonicalHeaderKey}> 1
Funcs["/net/http/ListenAndServeTLS"] = net_http.ListenAndServeTLS
//# OLD <{hListenAndServeTLS}> 0
//# NEW <{hListenAndServeTLS}> 1
//? Consts["/net/http/StatusMultipleChoices"] = net_http.StatusMultipleChoices
//# OLD <{hStatusMultipleChoices}> 0
//# NEW <{hStatusMultipleChoices}> 1
Types["/net/http/FileSystem"] = new(*net_http.FileSystem)
//# OLD <{hFileSystem}> 0
//# NEW <{hFileSystem}> 1
Funcs["/net/http/ReadResponse"] = net_http.ReadResponse
//# OLD <{hReadResponse}> 0
//# NEW <{hReadResponse}> 1
Vars["/net/http/DefaultServeMux"] = &net_http.DefaultServeMux
//# OLD <{hDefaultServeMux}> 0
//# NEW <{hDefaultServeMux}> 1
//? Consts["/net/http/StatusInternalServerError"] = net_http.StatusInternalServerError
//# OLD <{hStatusInternalServerError}> 0
//# NEW <{hStatusInternalServerError}> 1
Funcs["/net/http/Redirect"] = net_http.Redirect
//# OLD <{hRedirect}> 0
//# NEW <{hRedirect}> 1
//? Consts["/net/http/StatusMovedPermanently"] = net_http.StatusMovedPermanently
//# OLD <{hStatusMovedPermanently}> 0
//# NEW <{hStatusMovedPermanently}> 1
Vars["/net/http/DefaultTransport"] = &net_http.DefaultTransport
//# OLD <{hDefaultTransport}> 0
//# NEW <{hDefaultTransport}> 1
Types["/net/http/Cookie"] = new(*net_http.Cookie)
//# OLD <{hCookie}> 0
//# NEW <{hCookie}> 1
Vars["/net/http/ErrBodyReadAfterClose"] = &net_http.ErrBodyReadAfterClose
//# OLD <{hErrBodyReadAfterClose}> 0
//# NEW <{hErrBodyReadAfterClose}> 1
Funcs["/net/http/ParseHTTPVersion"] = net_http.ParseHTTPVersion
//# OLD <{hParseHTTPVersion}> 0
//# NEW <{hParseHTTPVersion}> 1
Funcs["/net/http/Serve"] = net_http.Serve
//# OLD <{hServe}> 0
//# NEW <{hServe}> 1
Funcs["/net/http/StatusText"] = net_http.StatusText
//# OLD <{hStatusText}> 0
//# NEW <{hStatusText}> 1
//? Consts["/net/http/StatusTemporaryRedirect"] = net_http.StatusTemporaryRedirect
//# OLD <{hStatusTemporaryRedirect}> 0
//# NEW <{hStatusTemporaryRedirect}> 1
Funcs["/net/http/NewRequest"] = net_http.NewRequest
//# OLD <{hNewRequest}> 0
//# NEW <{hNewRequest}> 1
//? Consts["/net/http/StatusNotFound"] = net_http.StatusNotFound
//# OLD <{hStatusNotFound}> 0
//# NEW <{hStatusNotFound}> 1
Types["/net/http/RoundTripper"] = new(*net_http.RoundTripper)
//# OLD <{hRoundTripper}> 0
//# NEW <{hRoundTripper}> 1
Vars["/net/http/ErrLineTooLong"] = &net_http.ErrLineTooLong
//# OLD <{hErrLineTooLong}> 0
//# NEW <{hErrLineTooLong}> 1
Funcs["/net/http/StripPrefix"] = net_http.StripPrefix
//# OLD <{hStripPrefix}> 0
//# NEW <{hStripPrefix}> 1
//? Consts["/net/http/StatusNotAcceptable"] = net_http.StatusNotAcceptable
//# OLD <{hStatusNotAcceptable}> 0
//# NEW <{hStatusNotAcceptable}> 1
Funcs["/net/http/NotFoundHandler"] = net_http.NotFoundHandler
//# OLD <{hNotFoundHandler}> 0
//# NEW <{hNotFoundHandler}> 1
Vars["/net/http/ErrHeaderTooLong"] = &net_http.ErrHeaderTooLong
//# OLD <{hErrHeaderTooLong}> 0
//# NEW <{hErrHeaderTooLong}> 1
Funcs["/net/http/NotFound"] = net_http.NotFound
//# OLD <{hNotFound}> 0
//# NEW <{hNotFound}> 1
Funcs["/net/http/TimeoutHandler"] = net_http.TimeoutHandler
//# OLD <{hTimeoutHandler}> 0
//# NEW <{hTimeoutHandler}> 1
Funcs["/net/http/Handle"] = net_http.Handle
//# OLD <{hHandle}> 0
//# NEW <{hHandle}> 1
Vars["/net/http/ErrMissingFile"] = &net_http.ErrMissingFile
//# OLD <{hErrMissingFile}> 0
//# NEW <{hErrMissingFile}> 1
Types["/net/http/Response"] = new(*net_http.Response)
//# OLD <{hResponse}> 0
//# NEW <{hResponse}> 1
//? Consts["/net/http/StatusSeeOther"] = net_http.StatusSeeOther
//# OLD <{hStatusSeeOther}> 0
//# NEW <{hStatusSeeOther}> 1
//? Consts["/net/http/StatusExpectationFailed"] = net_http.StatusExpectationFailed
//# OLD <{hStatusExpectationFailed}> 0
//# NEW <{hStatusExpectationFailed}> 1
Vars["/net/http/ErrMissingContentLength"] = &net_http.ErrMissingContentLength
//# OLD <{hErrMissingContentLength}> 0
//# NEW <{hErrMissingContentLength}> 1
Types["/net/http/CookieJar"] = new(*net_http.CookieJar)
//# OLD <{hCookieJar}> 0
//# NEW <{hCookieJar}> 1
//? Consts["/net/http/TimeFormat"] = net_http.TimeFormat
//# OLD <{hTimeFormat}> 0
//# NEW <{hTimeFormat}> 1
Types["/net/http/Dir"] = new(*net_http.Dir)
//# OLD <{hDir}> 0
//# NEW <{hDir}> 1
Types["/net/http/File"] = new(*net_http.File)
//# OLD <{hFile}> 0
//# NEW <{hFile}> 1
//? Consts["/net/http/StatusTeapot"] = net_http.StatusTeapot
//# OLD <{hStatusTeapot}> 0
//# NEW <{hStatusTeapot}> 1
Funcs["/net/http/Post"] = net_http.Post
//# OLD <{hPost}> 0
//# NEW <{hPost}> 1
//? Consts["/net/http/StatusNotModified"] = net_http.StatusNotModified
//# OLD <{hStatusNotModified}> 0
//# NEW <{hStatusNotModified}> 1
Funcs["/net/http/DetectContentType"] = net_http.DetectContentType
//# OLD <{hDetectContentType}> 0
//# NEW <{hDetectContentType}> 1
//? Consts["/net/http/StatusPreconditionFailed"] = net_http.StatusPreconditionFailed
//# OLD <{hStatusPreconditionFailed}> 0
//# NEW <{hStatusPreconditionFailed}> 1
//? Consts["/net/http/StatusCreated"] = net_http.StatusCreated
//# OLD <{hStatusCreated}> 0
//# NEW <{hStatusCreated}> 1
Vars["/net/http/ErrNoCookie"] = &net_http.ErrNoCookie
//# OLD <{hErrNoCookie}> 0
//# NEW <{hErrNoCookie}> 1
Vars["/net/http/ErrMissingBoundary"] = &net_http.ErrMissingBoundary
//# OLD <{hErrMissingBoundary}> 0
//# NEW <{hErrMissingBoundary}> 1
//? Consts["/net/http/StatusNoContent"] = net_http.StatusNoContent
//# OLD <{hStatusNoContent}> 0
//# NEW <{hStatusNoContent}> 1
//? Consts["/net/http/StatusRequestTimeout"] = net_http.StatusRequestTimeout
//# OLD <{hStatusRequestTimeout}> 0
//# NEW <{hStatusRequestTimeout}> 1
//? Consts["/net/http/StatusMethodNotAllowed"] = net_http.StatusMethodNotAllowed
//# OLD <{hStatusMethodNotAllowed}> 0
//# NEW <{hStatusMethodNotAllowed}> 1
//? Consts["/net/http/DefaultMaxIdleConnsPerHost"] = net_http.DefaultMaxIdleConnsPerHost
//# OLD <{hDefaultMaxIdleConnsPerHost}> 0
//# NEW <{hDefaultMaxIdleConnsPerHost}> 1
Funcs["/net/http/ProxyURL"] = net_http.ProxyURL
//# OLD <{hProxyURL}> 0
//# NEW <{hProxyURL}> 1
Funcs["/net/http/ServeContent"] = net_http.ServeContent
//# OLD <{hServeContent}> 0
//# NEW <{hServeContent}> 1
Vars["/net/http/ErrNotMultipart"] = &net_http.ErrNotMultipart
//# OLD <{hErrNotMultipart}> 0
//# NEW <{hErrNotMultipart}> 1
//? Consts["/net/http/StatusLengthRequired"] = net_http.StatusLengthRequired
//# OLD <{hStatusLengthRequired}> 0
//# NEW <{hStatusLengthRequired}> 1
Funcs["/net/http/HandleFunc"] = net_http.HandleFunc
//# OLD <{hHandleFunc}> 0
//# NEW <{hHandleFunc}> 1
Funcs["/net/http/NewFileTransport"] = net_http.NewFileTransport
//# OLD <{hNewFileTransport}> 0
//# NEW <{hNewFileTransport}> 1
//? Consts["/net/http/DefaultMaxHeaderBytes"] = net_http.DefaultMaxHeaderBytes
//# OLD <{hDefaultMaxHeaderBytes}> 0
//# NEW <{hDefaultMaxHeaderBytes}> 1


//     func net/http/cgi.RequestFromMap
//     func net/http/cgi.Serve
//     func net/http/cgi.Request
//     type net/http/cgi.Handler

Funcs["/net/http/cgi/Serve"] = net_http_cgi.Serve
//# OLD <{cServe}> 0
//# NEW <{cServe}> 1
Funcs["/net/http/cgi/Request"] = net_http_cgi.Request
//# OLD <{cRequest}> 0
//# NEW <{cRequest}> 1
Types["/net/http/cgi/Handler"] = new(*net_http_cgi.Handler)
//# OLD <{cHandler}> 0
//# NEW <{cHandler}> 1
Funcs["/net/http/cgi/RequestFromMap"] = net_http_cgi.RequestFromMap
//# OLD <{cRequestFromMap}> 0
//# NEW <{cRequestFromMap}> 1


//     func net/http/fcgi.Serve

Funcs["/net/http/fcgi/Serve"] = net_http_fcgi.Serve
//# OLD <{fServe}> 0
//# NEW <{fServe}> 1


//     type net/http/httptest.ResponseRecorder
//     type net/http/httptest.Server
//     func net/http/httptest.NewUnstartedServer
//     func net/http/httptest.NewServer
//     func net/http/httptest.NewRecorder
//    const net/http/httptest.DefaultRemoteAddr
//     func net/http/httptest.NewTLSServer

Types["/net/http/httptest/Server"] = new(*net_http_httptest.Server)
//# OLD <{hServer}> 1
//# NEW <{hServer}> 2
Funcs["/net/http/httptest/NewUnstartedServer"] = net_http_httptest.NewUnstartedServer
//# OLD <{hNewUnstartedServer}> 0
//# NEW <{hNewUnstartedServer}> 1
Funcs["/net/http/httptest/NewServer"] = net_http_httptest.NewServer
//# OLD <{hNewServer}> 0
//# NEW <{hNewServer}> 1
Funcs["/net/http/httptest/NewRecorder"] = net_http_httptest.NewRecorder
//# OLD <{hNewRecorder}> 0
//# NEW <{hNewRecorder}> 1
//? Consts["/net/http/httptest/DefaultRemoteAddr"] = net_http_httptest.DefaultRemoteAddr
//# OLD <{hDefaultRemoteAddr}> 0
//# NEW <{hDefaultRemoteAddr}> 1
Funcs["/net/http/httptest/NewTLSServer"] = net_http_httptest.NewTLSServer
//# OLD <{hNewTLSServer}> 0
//# NEW <{hNewTLSServer}> 1
Types["/net/http/httptest/ResponseRecorder"] = new(*net_http_httptest.ResponseRecorder)
//# OLD <{hResponseRecorder}> 0
//# NEW <{hResponseRecorder}> 1


//      var net/http/httputil.ErrPersistEOF
//     func net/http/httputil.NewChunkedWriter
//     type net/http/httputil.ReverseProxy
//      var net/http/httputil.ErrLineTooLong
//     func net/http/httputil.DumpRequestOut
//     func net/http/httputil.NewClientConn
//     func net/http/httputil.NewServerConn
//     func net/http/httputil.DumpResponse
//      var net/http/httputil.ErrClosed
//      var net/http/httputil.ErrPipeline
//     func net/http/httputil.DumpRequest
//     func net/http/httputil.NewProxyClientConn
//     type net/http/httputil.ServerConn
//     func net/http/httputil.NewChunkedReader
//     func net/http/httputil.NewSingleHostReverseProxy
//     type net/http/httputil.ClientConn

Funcs["/net/http/httputil/NewChunkedReader"] = net_http_httputil.NewChunkedReader
//# OLD <{hNewChunkedReader}> 0
//# NEW <{hNewChunkedReader}> 1
Funcs["/net/http/httputil/NewSingleHostReverseProxy"] = net_http_httputil.NewSingleHostReverseProxy
//# OLD <{hNewSingleHostReverseProxy}> 0
//# NEW <{hNewSingleHostReverseProxy}> 1
Types["/net/http/httputil/ClientConn"] = new(*net_http_httputil.ClientConn)
//# OLD <{hClientConn}> 0
//# NEW <{hClientConn}> 1
Vars["/net/http/httputil/ErrPersistEOF"] = &net_http_httputil.ErrPersistEOF
//# OLD <{hErrPersistEOF}> 0
//# NEW <{hErrPersistEOF}> 1
Funcs["/net/http/httputil/NewChunkedWriter"] = net_http_httputil.NewChunkedWriter
//# OLD <{hNewChunkedWriter}> 0
//# NEW <{hNewChunkedWriter}> 1
Types["/net/http/httputil/ReverseProxy"] = new(*net_http_httputil.ReverseProxy)
//# OLD <{hReverseProxy}> 0
//# NEW <{hReverseProxy}> 1
Vars["/net/http/httputil/ErrLineTooLong"] = &net_http_httputil.ErrLineTooLong
//# OLD <{hErrLineTooLong}> 1
//# NEW <{hErrLineTooLong}> 2
Funcs["/net/http/httputil/DumpRequestOut"] = net_http_httputil.DumpRequestOut
//# OLD <{hDumpRequestOut}> 0
//# NEW <{hDumpRequestOut}> 1
Funcs["/net/http/httputil/NewClientConn"] = net_http_httputil.NewClientConn
//# OLD <{hNewClientConn}> 0
//# NEW <{hNewClientConn}> 1
Funcs["/net/http/httputil/NewServerConn"] = net_http_httputil.NewServerConn
//# OLD <{hNewServerConn}> 0
//# NEW <{hNewServerConn}> 1
Funcs["/net/http/httputil/DumpResponse"] = net_http_httputil.DumpResponse
//# OLD <{hDumpResponse}> 0
//# NEW <{hDumpResponse}> 1
Vars["/net/http/httputil/ErrClosed"] = &net_http_httputil.ErrClosed
//# OLD <{hErrClosed}> 0
//# NEW <{hErrClosed}> 1
Vars["/net/http/httputil/ErrPipeline"] = &net_http_httputil.ErrPipeline
//# OLD <{hErrPipeline}> 0
//# NEW <{hErrPipeline}> 1
Funcs["/net/http/httputil/DumpRequest"] = net_http_httputil.DumpRequest
//# OLD <{hDumpRequest}> 0
//# NEW <{hDumpRequest}> 1
Funcs["/net/http/httputil/NewProxyClientConn"] = net_http_httputil.NewProxyClientConn
//# OLD <{hNewProxyClientConn}> 0
//# NEW <{hNewProxyClientConn}> 1
Types["/net/http/httputil/ServerConn"] = new(*net_http_httputil.ServerConn)
//# OLD <{hServerConn}> 0
//# NEW <{hServerConn}> 1


//     func net/http/pprof.Symbol
//     func net/http/pprof.Profile
//     func net/http/pprof.Index
//     func net/http/pprof.Cmdline
//     func net/http/pprof.Handler

Funcs["/net/http/pprof/Symbol"] = net_http_pprof.Symbol
//# OLD <{pSymbol}> 0
//# NEW <{pSymbol}> 1
Funcs["/net/http/pprof/Profile"] = net_http_pprof.Profile
//# OLD <{pProfile}> 0
//# NEW <{pProfile}> 1
Funcs["/net/http/pprof/Index"] = net_http_pprof.Index
//# OLD <{pIndex}> 0
//# NEW <{pIndex}> 1
Funcs["/net/http/pprof/Cmdline"] = net_http_pprof.Cmdline
//# OLD <{pCmdline}> 0
//# NEW <{pCmdline}> 1
Funcs["/net/http/pprof/Handler"] = net_http_pprof.Handler
//# OLD <{pHandler}> 0
//# NEW <{pHandler}> 1


//      var net/mail.ErrHeaderNotPresent
//     type net/mail.Header
//     type net/mail.Address
//     func net/mail.ReadMessage
//     type net/mail.Message

Types["/net/mail/Address"] = new(*net_mail.Address)
//# OLD <{mAddress}> 0
//# NEW <{mAddress}> 1
Funcs["/net/mail/ReadMessage"] = net_mail.ReadMessage
//# OLD <{mReadMessage}> 0
//# NEW <{mReadMessage}> 1
Types["/net/mail/Message"] = new(*net_mail.Message)
//# OLD <{mMessage}> 0
//# NEW <{mMessage}> 1
Vars["/net/mail/ErrHeaderNotPresent"] = &net_mail.ErrHeaderNotPresent
//# OLD <{mErrHeaderNotPresent}> 0
//# NEW <{mErrHeaderNotPresent}> 1
Types["/net/mail/Header"] = new(*net_mail.Header)
//# OLD <{mHeader}> 0
//# NEW <{mHeader}> 1


//     func net/rpc.Accept
//     func net/rpc.Register
//     func net/rpc.DialHTTPPath
//     func net/rpc.ServeConn
//     type net/rpc.Request
//     type net/rpc.ServerError
//     func net/rpc.RegisterName
//    const net/rpc.DefaultDebugPath
//     type net/rpc.ServerCodec
//      var net/rpc.DefaultServer
//     func net/rpc.NewClient
//     func net/rpc.DialHTTP
//     func net/rpc.NewClientWithCodec
//    const net/rpc.DefaultRPCPath
//      var net/rpc.ErrShutdown
//     type net/rpc.Call
//     type net/rpc.ClientCodec
//     func net/rpc.NewServer
//     type net/rpc.Client
//     type net/rpc.Server
//     func net/rpc.ServeRequest
//     type net/rpc.Response
//     func net/rpc.HandleHTTP
//     func net/rpc.Dial
//     func net/rpc.ServeCodec

Funcs["/net/rpc/Accept"] = net_rpc.Accept
//# OLD <{rAccept}> 0
//# NEW <{rAccept}> 1
Funcs["/net/rpc/Register"] = net_rpc.Register
//# OLD <{rRegister}> 0
//# NEW <{rRegister}> 1
Funcs["/net/rpc/DialHTTPPath"] = net_rpc.DialHTTPPath
//# OLD <{rDialHTTPPath}> 0
//# NEW <{rDialHTTPPath}> 1
Funcs["/net/rpc/ServeConn"] = net_rpc.ServeConn
//# OLD <{rServeConn}> 0
//# NEW <{rServeConn}> 1
Types["/net/rpc/Request"] = new(*net_rpc.Request)
//# OLD <{rRequest}> 0
//# NEW <{rRequest}> 1
Types["/net/rpc/ServerError"] = new(*net_rpc.ServerError)
//# OLD <{rServerError}> 0
//# NEW <{rServerError}> 1
Funcs["/net/rpc/RegisterName"] = net_rpc.RegisterName
//# OLD <{rRegisterName}> 0
//# NEW <{rRegisterName}> 1
//? Consts["/net/rpc/DefaultDebugPath"] = net_rpc.DefaultDebugPath
//# OLD <{rDefaultDebugPath}> 0
//# NEW <{rDefaultDebugPath}> 1
Types["/net/rpc/ServerCodec"] = new(*net_rpc.ServerCodec)
//# OLD <{rServerCodec}> 0
//# NEW <{rServerCodec}> 1
Vars["/net/rpc/DefaultServer"] = &net_rpc.DefaultServer
//# OLD <{rDefaultServer}> 0
//# NEW <{rDefaultServer}> 1
Funcs["/net/rpc/NewClient"] = net_rpc.NewClient
//# OLD <{rNewClient}> 0
//# NEW <{rNewClient}> 1
Funcs["/net/rpc/DialHTTP"] = net_rpc.DialHTTP
//# OLD <{rDialHTTP}> 0
//# NEW <{rDialHTTP}> 1
Funcs["/net/rpc/NewClientWithCodec"] = net_rpc.NewClientWithCodec
//# OLD <{rNewClientWithCodec}> 0
//# NEW <{rNewClientWithCodec}> 1
//? Consts["/net/rpc/DefaultRPCPath"] = net_rpc.DefaultRPCPath
//# OLD <{rDefaultRPCPath}> 0
//# NEW <{rDefaultRPCPath}> 1
Vars["/net/rpc/ErrShutdown"] = &net_rpc.ErrShutdown
//# OLD <{rErrShutdown}> 0
//# NEW <{rErrShutdown}> 1
Types["/net/rpc/Call"] = new(*net_rpc.Call)
//# OLD <{rCall}> 0
//# NEW <{rCall}> 1
Types["/net/rpc/ClientCodec"] = new(*net_rpc.ClientCodec)
//# OLD <{rClientCodec}> 0
//# NEW <{rClientCodec}> 1
Funcs["/net/rpc/NewServer"] = net_rpc.NewServer
//# OLD <{rNewServer}> 0
//# NEW <{rNewServer}> 1
Types["/net/rpc/Client"] = new(*net_rpc.Client)
//# OLD <{rClient}> 0
//# NEW <{rClient}> 1
Types["/net/rpc/Server"] = new(*net_rpc.Server)
//# OLD <{rServer}> 0
//# NEW <{rServer}> 1
Funcs["/net/rpc/ServeRequest"] = net_rpc.ServeRequest
//# OLD <{rServeRequest}> 0
//# NEW <{rServeRequest}> 1
Types["/net/rpc/Response"] = new(*net_rpc.Response)
//# OLD <{rResponse}> 0
//# NEW <{rResponse}> 1
Funcs["/net/rpc/HandleHTTP"] = net_rpc.HandleHTTP
//# OLD <{rHandleHTTP}> 0
//# NEW <{rHandleHTTP}> 1
Funcs["/net/rpc/Dial"] = net_rpc.Dial
//# OLD <{rDial}> 0
//# NEW <{rDial}> 1
Funcs["/net/rpc/ServeCodec"] = net_rpc.ServeCodec
//# OLD <{rServeCodec}> 0
//# NEW <{rServeCodec}> 1


//     func net/rpc/jsonrpc.NewClient
//     func net/rpc/jsonrpc.Dial
//     func net/rpc/jsonrpc.ServeConn
//     func net/rpc/jsonrpc.NewClientCodec
//     func net/rpc/jsonrpc.NewServerCodec

Funcs["/net/rpc/jsonrpc/NewServerCodec"] = net_rpc_jsonrpc.NewServerCodec
//# OLD <{jNewServerCodec}> 0
//# NEW <{jNewServerCodec}> 1
Funcs["/net/rpc/jsonrpc/NewClient"] = net_rpc_jsonrpc.NewClient
//# OLD <{jNewClient}> 0
//# NEW <{jNewClient}> 1
Funcs["/net/rpc/jsonrpc/Dial"] = net_rpc_jsonrpc.Dial
//# OLD <{jDial}> 0
//# NEW <{jDial}> 1
Funcs["/net/rpc/jsonrpc/ServeConn"] = net_rpc_jsonrpc.ServeConn
//# OLD <{jServeConn}> 0
//# NEW <{jServeConn}> 1
Funcs["/net/rpc/jsonrpc/NewClientCodec"] = net_rpc_jsonrpc.NewClientCodec
//# OLD <{jNewClientCodec}> 0
//# NEW <{jNewClientCodec}> 1


//     func net/smtp.Dial
//     type net/smtp.Auth
//     type net/smtp.ServerInfo
//     func net/smtp.PlainAuth
//     func net/smtp.SendMail
//     type net/smtp.Client
//     func net/smtp.CRAMMD5Auth
//     func net/smtp.NewClient

Types["/net/smtp/ServerInfo"] = new(*net_smtp.ServerInfo)
//# OLD <{sServerInfo}> 0
//# NEW <{sServerInfo}> 1
Funcs["/net/smtp/PlainAuth"] = net_smtp.PlainAuth
//# OLD <{sPlainAuth}> 0
//# NEW <{sPlainAuth}> 1
Funcs["/net/smtp/SendMail"] = net_smtp.SendMail
//# OLD <{sSendMail}> 0
//# NEW <{sSendMail}> 1
Types["/net/smtp/Client"] = new(*net_smtp.Client)
//# OLD <{sClient}> 0
//# NEW <{sClient}> 1
Funcs["/net/smtp/CRAMMD5Auth"] = net_smtp.CRAMMD5Auth
//# OLD <{sCRAMMD5Auth}> 0
//# NEW <{sCRAMMD5Auth}> 1
Funcs["/net/smtp/NewClient"] = net_smtp.NewClient
//# OLD <{sNewClient}> 0
//# NEW <{sNewClient}> 1
Funcs["/net/smtp/Dial"] = net_smtp.Dial
//# OLD <{sDial}> 1
//# NEW <{sDial}> 2
Types["/net/smtp/Auth"] = new(*net_smtp.Auth)
//# OLD <{sAuth}> 0
//# NEW <{sAuth}> 1


//     type net/textproto.MIMEHeader
//     type net/textproto.ProtocolError
//     type net/textproto.Writer
//     type net/textproto.Pipeline
//     type net/textproto.Error
//     func net/textproto.NewConn
//     func net/textproto.NewReader
//     type net/textproto.Conn
//     func net/textproto.NewWriter
//     type net/textproto.Reader
//     func net/textproto.Dial
//     func net/textproto.CanonicalMIMEHeaderKey

Types["/net/textproto/MIMEHeader"] = new(*net_textproto.MIMEHeader)
//# OLD <{tMIMEHeader}> 0
//# NEW <{tMIMEHeader}> 1
Types["/net/textproto/ProtocolError"] = new(*net_textproto.ProtocolError)
//# OLD <{tProtocolError}> 0
//# NEW <{tProtocolError}> 1
Types["/net/textproto/Writer"] = new(*net_textproto.Writer)
//# OLD <{tWriter}> 1
//# NEW <{tWriter}> 2
Types["/net/textproto/Pipeline"] = new(*net_textproto.Pipeline)
//# OLD <{tPipeline}> 0
//# NEW <{tPipeline}> 1
Types["/net/textproto/Error"] = new(*net_textproto.Error)
//# OLD <{tError}> 1
//# NEW <{tError}> 2
Funcs["/net/textproto/NewConn"] = net_textproto.NewConn
//# OLD <{tNewConn}> 0
//# NEW <{tNewConn}> 1
Funcs["/net/textproto/NewReader"] = net_textproto.NewReader
//# OLD <{tNewReader}> 1
//# NEW <{tNewReader}> 2
Types["/net/textproto/Conn"] = new(*net_textproto.Conn)
//# OLD <{tConn}> 1
//# NEW <{tConn}> 2
Funcs["/net/textproto/NewWriter"] = net_textproto.NewWriter
//# OLD <{tNewWriter}> 1
//# NEW <{tNewWriter}> 2
Types["/net/textproto/Reader"] = new(*net_textproto.Reader)
//# OLD <{tReader}> 1
//# NEW <{tReader}> 2
Funcs["/net/textproto/Dial"] = net_textproto.Dial
//# OLD <{tDial}> 1
//# NEW <{tDial}> 2
Funcs["/net/textproto/CanonicalMIMEHeaderKey"] = net_textproto.CanonicalMIMEHeaderKey
//# OLD <{tCanonicalMIMEHeaderKey}> 0
//# NEW <{tCanonicalMIMEHeaderKey}> 1


//     func net/url.Parse
//     func net/url.ParseQuery
//     type net/url.URL
//     func net/url.QueryEscape
//     type net/url.Userinfo
//     type net/url.EscapeError
//     func net/url.QueryUnescape
//     func net/url.UserPassword
//     func net/url.User
//     type net/url.Error
//     type net/url.Values
//     func net/url.ParseRequestURI

Funcs["/net/url/ParseQuery"] = net_url.ParseQuery
//# OLD <{uParseQuery}> 0
//# NEW <{uParseQuery}> 1
Types["/net/url/URL"] = new(*net_url.URL)
//# OLD <{uURL}> 0
//# NEW <{uURL}> 1
Funcs["/net/url/QueryEscape"] = net_url.QueryEscape
//# OLD <{uQueryEscape}> 0
//# NEW <{uQueryEscape}> 1
Types["/net/url/Userinfo"] = new(*net_url.Userinfo)
//# OLD <{uUserinfo}> 0
//# NEW <{uUserinfo}> 1
Types["/net/url/EscapeError"] = new(*net_url.EscapeError)
//# OLD <{uEscapeError}> 0
//# NEW <{uEscapeError}> 1
Funcs["/net/url/QueryUnescape"] = net_url.QueryUnescape
//# OLD <{uQueryUnescape}> 0
//# NEW <{uQueryUnescape}> 1
Funcs["/net/url/UserPassword"] = net_url.UserPassword
//# OLD <{uUserPassword}> 0
//# NEW <{uUserPassword}> 1
Funcs["/net/url/User"] = net_url.User
//# OLD <{uUser}> 0
//# NEW <{uUser}> 1
Types["/net/url/Error"] = new(*net_url.Error)
//# OLD <{uError}> 0
//# NEW <{uError}> 1
Types["/net/url/Values"] = new(*net_url.Values)
//# OLD <{uValues}> 0
//# NEW <{uValues}> 1
Funcs["/net/url/ParseRequestURI"] = net_url.ParseRequestURI
//# OLD <{uParseRequestURI}> 0
//# NEW <{uParseRequestURI}> 1
Funcs["/net/url/Parse"] = net_url.Parse
//# OLD <{uParse}> 0
//# NEW <{uParse}> 1


//    const os.O_WRONLY
//     func os.Getegid
//     func os.Clearenv
//     func os.Environ
//     type os.FileInfo
//     type os.ProcAttr
//     func os.RemoveAll
//     func os.ExpandEnv
//     func os.Getpid
//     func os.Create
//     func os.Chdir
//     func os.Open
//     func os.NewFile
//    const os.ModeTemporary
//    const os.ModeNamedPipe
//    const os.ModeCharDevice
//    const os.ModeType
//     func os.Getenv
//     type os.Signal
//     func os.Expand
//     type os.Process
//    const os.ModePerm
//    const os.O_RDONLY
//      var os.Stderr
//     func os.IsPathSeparator
//     type os.PathError
//     type os.SyscallError
//    const os.ModeSetuid
//     func os.FindProcess
//    const os.DevNull
//      var os.ErrExist
//    const os.ModeSetgid
//     func os.Getppid
//     func os.Rename
//     func os.Pipe
//    const os.SEEK_CUR
//     func os.Truncate
//     func os.Remove
//     func os.Mkdir
//      var os.Args
//      var os.Stdout
//    const os.O_RDWR
//     func os.Link
//      var os.ErrInvalid
//    const os.O_APPEND
//     func os.Getgid
//     func os.TempDir
//     type os.ProcessState
//     func os.Getuid
//    const os.O_TRUNC
//     func os.Getpagesize
//    const os.ModeSocket
//      var os.Stdin
//     type os.File
//     func os.Readlink
//    const os.O_EXCL
//     func os.Chmod
//     func os.StartProcess
//     func os.Lchown
//     func os.Hostname
//     type os.FileMode
//     func os.MkdirAll
//     func os.Stat
//    const os.ModeAppend
//     func os.Exit
//     func os.Symlink
//     func os.SameFile
//     func os.Getgroups
//     func os.Chown
//     func os.Chtimes
//     func os.IsPermission
//     func os.Lstat
//      var os.ErrNotExist
//     func os.IsNotExist
//     func os.Geteuid
//    const os.ModeExclusive
//     func os.IsExist
//     func os.Setenv
//     func os.OpenFile
//    const os.ModeSticky
//     func os.NewSyscallError
//      var os.Kill
//    const os.SEEK_SET
//    const os.O_CREATE
//      var os.Interrupt
//    const os.O_SYNC
//      var os.ErrPermission
//    const os.PathListSeparator
//    const os.ModeDevice
//    const os.ModeDir
//     func os.Getwd
//    const os.PathSeparator
//     type os.LinkError
//    const os.ModeSymlink
//    const os.SEEK_END

Funcs["/os/Exit"] = os.Exit
//# OLD <{oExit}> 0
//# NEW <{oExit}> 1
Funcs["/os/Symlink"] = os.Symlink
//# OLD <{oSymlink}> 0
//# NEW <{oSymlink}> 1
Funcs["/os/SameFile"] = os.SameFile
//# OLD <{oSameFile}> 0
//# NEW <{oSameFile}> 1
Funcs["/os/Getgroups"] = os.Getgroups
//# OLD <{oGetgroups}> 0
//# NEW <{oGetgroups}> 1
Funcs["/os/Chown"] = os.Chown
//# OLD <{oChown}> 0
//# NEW <{oChown}> 1
Funcs["/os/Chtimes"] = os.Chtimes
//# OLD <{oChtimes}> 0
//# NEW <{oChtimes}> 1
Funcs["/os/IsPermission"] = os.IsPermission
//# OLD <{oIsPermission}> 0
//# NEW <{oIsPermission}> 1
Funcs["/os/Lstat"] = os.Lstat
//# OLD <{oLstat}> 0
//# NEW <{oLstat}> 1
Vars["/os/ErrNotExist"] = &os.ErrNotExist
//# OLD <{oErrNotExist}> 0
//# NEW <{oErrNotExist}> 1
Funcs["/os/IsNotExist"] = os.IsNotExist
//# OLD <{oIsNotExist}> 0
//# NEW <{oIsNotExist}> 1
Funcs["/os/Geteuid"] = os.Geteuid
//# OLD <{oGeteuid}> 0
//# NEW <{oGeteuid}> 1
//? Consts["/os/ModeExclusive"] = os.ModeExclusive
//# OLD <{oModeExclusive}> 0
//# NEW <{oModeExclusive}> 1
Funcs["/os/IsExist"] = os.IsExist
//# OLD <{oIsExist}> 0
//# NEW <{oIsExist}> 1
Funcs["/os/Setenv"] = os.Setenv
//# OLD <{oSetenv}> 0
//# NEW <{oSetenv}> 1
Funcs["/os/OpenFile"] = os.OpenFile
//# OLD <{oOpenFile}> 0
//# NEW <{oOpenFile}> 1
//? Consts["/os/ModeSticky"] = os.ModeSticky
//# OLD <{oModeSticky}> 0
//# NEW <{oModeSticky}> 1
Funcs["/os/NewSyscallError"] = os.NewSyscallError
//# OLD <{oNewSyscallError}> 0
//# NEW <{oNewSyscallError}> 1
Vars["/os/Kill"] = &os.Kill
//# OLD <{oKill}> 0
//# NEW <{oKill}> 1
//? Consts["/os/SEEK_SET"] = os.SEEK_SET
//# OLD <{oSEEK_SET}> 0
//# NEW <{oSEEK_SET}> 1
//? Consts["/os/O_CREATE"] = os.O_CREATE
//# OLD <{oO_CREATE}> 0
//# NEW <{oO_CREATE}> 1
Vars["/os/Interrupt"] = &os.Interrupt
//# OLD <{oInterrupt}> 0
//# NEW <{oInterrupt}> 1
//? Consts["/os/O_SYNC"] = os.O_SYNC
//# OLD <{oO_SYNC}> 0
//# NEW <{oO_SYNC}> 1
Vars["/os/ErrPermission"] = &os.ErrPermission
//# OLD <{oErrPermission}> 0
//# NEW <{oErrPermission}> 1
//? Consts["/os/PathListSeparator"] = os.PathListSeparator
//# OLD <{oPathListSeparator}> 0
//# NEW <{oPathListSeparator}> 1
//? Consts["/os/ModeDevice"] = os.ModeDevice
//# OLD <{oModeDevice}> 0
//# NEW <{oModeDevice}> 1
//? Consts["/os/ModeDir"] = os.ModeDir
//# OLD <{oModeDir}> 0
//# NEW <{oModeDir}> 1
Funcs["/os/Getwd"] = os.Getwd
//# OLD <{oGetwd}> 0
//# NEW <{oGetwd}> 1
//? Consts["/os/PathSeparator"] = os.PathSeparator
//# OLD <{oPathSeparator}> 0
//# NEW <{oPathSeparator}> 1
Types["/os/LinkError"] = new(*os.LinkError)
//# OLD <{oLinkError}> 0
//# NEW <{oLinkError}> 1
//? Consts["/os/ModeSymlink"] = os.ModeSymlink
//# OLD <{oModeSymlink}> 0
//# NEW <{oModeSymlink}> 1
//? Consts["/os/SEEK_END"] = os.SEEK_END
//# OLD <{oSEEK_END}> 0
//# NEW <{oSEEK_END}> 1
//? Consts["/os/O_WRONLY"] = os.O_WRONLY
//# OLD <{oO_WRONLY}> 0
//# NEW <{oO_WRONLY}> 1
Funcs["/os/Getegid"] = os.Getegid
//# OLD <{oGetegid}> 0
//# NEW <{oGetegid}> 1
Funcs["/os/Clearenv"] = os.Clearenv
//# OLD <{oClearenv}> 0
//# NEW <{oClearenv}> 1
Funcs["/os/Environ"] = os.Environ
//# OLD <{oEnviron}> 0
//# NEW <{oEnviron}> 1
Types["/os/FileInfo"] = new(*os.FileInfo)
//# OLD <{oFileInfo}> 0
//# NEW <{oFileInfo}> 1
Types["/os/ProcAttr"] = new(*os.ProcAttr)
//# OLD <{oProcAttr}> 0
//# NEW <{oProcAttr}> 1
Funcs["/os/RemoveAll"] = os.RemoveAll
//# OLD <{oRemoveAll}> 0
//# NEW <{oRemoveAll}> 1
Funcs["/os/ExpandEnv"] = os.ExpandEnv
//# OLD <{oExpandEnv}> 0
//# NEW <{oExpandEnv}> 1
Funcs["/os/Getpid"] = os.Getpid
//# OLD <{oGetpid}> 0
//# NEW <{oGetpid}> 1
Funcs["/os/Create"] = os.Create
//# OLD <{oCreate}> 0
//# NEW <{oCreate}> 1
Funcs["/os/Chdir"] = os.Chdir
//# OLD <{oChdir}> 0
//# NEW <{oChdir}> 1
Funcs["/os/Open"] = os.Open
//# OLD <{oOpen}> 0
//# NEW <{oOpen}> 1
Funcs["/os/NewFile"] = os.NewFile
//# OLD <{oNewFile}> 0
//# NEW <{oNewFile}> 1
//? Consts["/os/ModeTemporary"] = os.ModeTemporary
//# OLD <{oModeTemporary}> 0
//# NEW <{oModeTemporary}> 1
//? Consts["/os/ModeNamedPipe"] = os.ModeNamedPipe
//# OLD <{oModeNamedPipe}> 0
//# NEW <{oModeNamedPipe}> 1
//? Consts["/os/ModeCharDevice"] = os.ModeCharDevice
//# OLD <{oModeCharDevice}> 0
//# NEW <{oModeCharDevice}> 1
//? Consts["/os/ModeType"] = os.ModeType
//# OLD <{oModeType}> 0
//# NEW <{oModeType}> 1
Funcs["/os/Getenv"] = os.Getenv
//# OLD <{oGetenv}> 0
//# NEW <{oGetenv}> 1
Types["/os/Signal"] = new(*os.Signal)
//# OLD <{oSignal}> 0
//# NEW <{oSignal}> 1
Funcs["/os/Expand"] = os.Expand
//# OLD <{oExpand}> 0
//# NEW <{oExpand}> 1
Types["/os/Process"] = new(*os.Process)
//# OLD <{oProcess}> 0
//# NEW <{oProcess}> 1
//? Consts["/os/ModePerm"] = os.ModePerm
//# OLD <{oModePerm}> 0
//# NEW <{oModePerm}> 1
//? Consts["/os/O_RDONLY"] = os.O_RDONLY
//# OLD <{oO_RDONLY}> 0
//# NEW <{oO_RDONLY}> 1
Vars["/os/Stderr"] = &os.Stderr
//# OLD <{oStderr}> 0
//# NEW <{oStderr}> 1
Funcs["/os/IsPathSeparator"] = os.IsPathSeparator
//# OLD <{oIsPathSeparator}> 0
//# NEW <{oIsPathSeparator}> 1
Types["/os/PathError"] = new(*os.PathError)
//# OLD <{oPathError}> 0
//# NEW <{oPathError}> 1
Types["/os/SyscallError"] = new(*os.SyscallError)
//# OLD <{oSyscallError}> 0
//# NEW <{oSyscallError}> 1
//? Consts["/os/ModeSetuid"] = os.ModeSetuid
//# OLD <{oModeSetuid}> 0
//# NEW <{oModeSetuid}> 1
Funcs["/os/FindProcess"] = os.FindProcess
//# OLD <{oFindProcess}> 0
//# NEW <{oFindProcess}> 1
//? Consts["/os/DevNull"] = os.DevNull
//# OLD <{oDevNull}> 0
//# NEW <{oDevNull}> 1
Vars["/os/ErrExist"] = &os.ErrExist
//# OLD <{oErrExist}> 0
//# NEW <{oErrExist}> 1
//? Consts["/os/ModeSetgid"] = os.ModeSetgid
//# OLD <{oModeSetgid}> 0
//# NEW <{oModeSetgid}> 1
Funcs["/os/Getppid"] = os.Getppid
//# OLD <{oGetppid}> 0
//# NEW <{oGetppid}> 1
Funcs["/os/Rename"] = os.Rename
//# OLD <{oRename}> 0
//# NEW <{oRename}> 1
Funcs["/os/Pipe"] = os.Pipe
//# OLD <{oPipe}> 0
//# NEW <{oPipe}> 1
//? Consts["/os/SEEK_CUR"] = os.SEEK_CUR
//# OLD <{oSEEK_CUR}> 0
//# NEW <{oSEEK_CUR}> 1
Funcs["/os/Truncate"] = os.Truncate
//# OLD <{oTruncate}> 0
//# NEW <{oTruncate}> 1
Funcs["/os/Remove"] = os.Remove
//# OLD <{oRemove}> 0
//# NEW <{oRemove}> 1
Funcs["/os/Mkdir"] = os.Mkdir
//# OLD <{oMkdir}> 0
//# NEW <{oMkdir}> 1
Vars["/os/Args"] = &os.Args
//# OLD <{oArgs}> 0
//# NEW <{oArgs}> 1
Vars["/os/Stdout"] = &os.Stdout
//# OLD <{oStdout}> 0
//# NEW <{oStdout}> 1
//? Consts["/os/O_RDWR"] = os.O_RDWR
//# OLD <{oO_RDWR}> 0
//# NEW <{oO_RDWR}> 1
Funcs["/os/Link"] = os.Link
//# OLD <{oLink}> 0
//# NEW <{oLink}> 1
Vars["/os/ErrInvalid"] = &os.ErrInvalid
//# OLD <{oErrInvalid}> 0
//# NEW <{oErrInvalid}> 1
//? Consts["/os/O_APPEND"] = os.O_APPEND
//# OLD <{oO_APPEND}> 0
//# NEW <{oO_APPEND}> 1
Funcs["/os/Getgid"] = os.Getgid
//# OLD <{oGetgid}> 0
//# NEW <{oGetgid}> 1
Funcs["/os/TempDir"] = os.TempDir
//# OLD <{oTempDir}> 0
//# NEW <{oTempDir}> 1
Types["/os/ProcessState"] = new(*os.ProcessState)
//# OLD <{oProcessState}> 0
//# NEW <{oProcessState}> 1
Funcs["/os/Getuid"] = os.Getuid
//# OLD <{oGetuid}> 0
//# NEW <{oGetuid}> 1
//? Consts["/os/O_TRUNC"] = os.O_TRUNC
//# OLD <{oO_TRUNC}> 0
//# NEW <{oO_TRUNC}> 1
Funcs["/os/Getpagesize"] = os.Getpagesize
//# OLD <{oGetpagesize}> 0
//# NEW <{oGetpagesize}> 1
//? Consts["/os/ModeSocket"] = os.ModeSocket
//# OLD <{oModeSocket}> 0
//# NEW <{oModeSocket}> 1
Vars["/os/Stdin"] = &os.Stdin
//# OLD <{oStdin}> 0
//# NEW <{oStdin}> 1
Types["/os/File"] = new(*os.File)
//# OLD <{oFile}> 0
//# NEW <{oFile}> 1
Funcs["/os/Readlink"] = os.Readlink
//# OLD <{oReadlink}> 0
//# NEW <{oReadlink}> 1
//? Consts["/os/O_EXCL"] = os.O_EXCL
//# OLD <{oO_EXCL}> 0
//# NEW <{oO_EXCL}> 1
Funcs["/os/Chmod"] = os.Chmod
//# OLD <{oChmod}> 0
//# NEW <{oChmod}> 1
Funcs["/os/StartProcess"] = os.StartProcess
//# OLD <{oStartProcess}> 0
//# NEW <{oStartProcess}> 1
Funcs["/os/Lchown"] = os.Lchown
//# OLD <{oLchown}> 0
//# NEW <{oLchown}> 1
Funcs["/os/Hostname"] = os.Hostname
//# OLD <{oHostname}> 0
//# NEW <{oHostname}> 1
Types["/os/FileMode"] = new(*os.FileMode)
//# OLD <{oFileMode}> 0
//# NEW <{oFileMode}> 1
Funcs["/os/MkdirAll"] = os.MkdirAll
//# OLD <{oMkdirAll}> 0
//# NEW <{oMkdirAll}> 1
Funcs["/os/Stat"] = os.Stat
//# OLD <{oStat}> 0
//# NEW <{oStat}> 1
//? Consts["/os/ModeAppend"] = os.ModeAppend
//# OLD <{oModeAppend}> 0
//# NEW <{oModeAppend}> 1


//     type os/exec.Cmd
//     type os/exec.ExitError
//     func os/exec.LookPath
//      var os/exec.ErrNotFound
//     type os/exec.Error
//     func os/exec.Command

Types["/os/exec/Cmd"] = new(*os_exec.Cmd)
//# OLD <{eCmd}> 0
//# NEW <{eCmd}> 1
Types["/os/exec/ExitError"] = new(*os_exec.ExitError)
//# OLD <{eExitError}> 0
//# NEW <{eExitError}> 1
Funcs["/os/exec/LookPath"] = os_exec.LookPath
//# OLD <{eLookPath}> 0
//# NEW <{eLookPath}> 1
Vars["/os/exec/ErrNotFound"] = &os_exec.ErrNotFound
//# OLD <{eErrNotFound}> 0
//# NEW <{eErrNotFound}> 1
Types["/os/exec/Error"] = new(*os_exec.Error)
//# OLD <{eError}> 0
//# NEW <{eError}> 1
Funcs["/os/exec/Command"] = os_exec.Command
//# OLD <{eCommand}> 0
//# NEW <{eCommand}> 1


//     func os/signal.Notify

Funcs["/os/signal/Notify"] = os_signal.Notify
//# OLD <{sNotify}> 0
//# NEW <{sNotify}> 1


//     func os/user.Lookup
//     type os/user.UnknownUserIdError
//     func os/user.Current
//     func os/user.LookupId
//     type os/user.UnknownUserError
//     type os/user.User

Funcs["/os/user/Lookup"] = os_user.Lookup
//# OLD <{uLookup}> 0
//# NEW <{uLookup}> 1
Types["/os/user/UnknownUserIdError"] = new(*os_user.UnknownUserIdError)
//# OLD <{uUnknownUserIdError}> 0
//# NEW <{uUnknownUserIdError}> 1
Funcs["/os/user/Current"] = os_user.Current
//# OLD <{uCurrent}> 0
//# NEW <{uCurrent}> 1
Funcs["/os/user/LookupId"] = os_user.LookupId
//# OLD <{uLookupId}> 0
//# NEW <{uLookupId}> 1
Types["/os/user/UnknownUserError"] = new(*os_user.UnknownUserError)
//# OLD <{uUnknownUserError}> 0
//# NEW <{uUnknownUserError}> 1
Types["/os/user/User"] = new(*os_user.User)
//# OLD <{uUser}> 1
//# NEW <{uUser}> 2


//     func path.Match
//     func path.Split
//     func path.Clean
//     func path.Join
//     func path.Base
//     func path.IsAbs
//     func path.Dir
//     func path.Ext
//      var path.ErrBadPattern

Funcs["/path/Match"] = path.Match
//# OLD <{pMatch}> 0
//# NEW <{pMatch}> 1
Funcs["/path/Split"] = path.Split
//# OLD <{pSplit}> 0
//# NEW <{pSplit}> 1
Funcs["/path/Clean"] = path.Clean
//# OLD <{pClean}> 0
//# NEW <{pClean}> 1
Funcs["/path/Join"] = path.Join
//# OLD <{pJoin}> 0
//# NEW <{pJoin}> 1
Funcs["/path/Base"] = path.Base
//# OLD <{pBase}> 0
//# NEW <{pBase}> 1
Funcs["/path/IsAbs"] = path.IsAbs
//# OLD <{pIsAbs}> 0
//# NEW <{pIsAbs}> 1
Funcs["/path/Dir"] = path.Dir
//# OLD <{pDir}> 0
//# NEW <{pDir}> 1
Funcs["/path/Ext"] = path.Ext
//# OLD <{pExt}> 0
//# NEW <{pExt}> 1
Vars["/path/ErrBadPattern"] = &path.ErrBadPattern
//# OLD <{pErrBadPattern}> 0
//# NEW <{pErrBadPattern}> 1


//     func path/filepath.Ext
//     func path/filepath.Match
//     func path/filepath.IsAbs
//     func path/filepath.ToSlash
//     func path/filepath.Base
//     func path/filepath.Glob
//     func path/filepath.Abs
//     type path/filepath.WalkFunc
//     func path/filepath.Clean
//     func path/filepath.EvalSymlinks
//    const path/filepath.ListSeparator
//     func path/filepath.VolumeName
//     func path/filepath.SplitList
//     func path/filepath.HasPrefix
//     func path/filepath.FromSlash
//     func path/filepath.Rel
//     func path/filepath.Walk
//     func path/filepath.Split
//      var path/filepath.SkipDir
//    const path/filepath.Separator
//     func path/filepath.Dir
//      var path/filepath.ErrBadPattern
//     func path/filepath.Join

Funcs["/path/filepath/Walk"] = path_filepath.Walk
//# OLD <{fWalk}> 0
//# NEW <{fWalk}> 1
Funcs["/path/filepath/Split"] = path_filepath.Split
//# OLD <{fSplit}> 0
//# NEW <{fSplit}> 1
Vars["/path/filepath/SkipDir"] = &path_filepath.SkipDir
//# OLD <{fSkipDir}> 0
//# NEW <{fSkipDir}> 1
//? Consts["/path/filepath/Separator"] = path_filepath.Separator
//# OLD <{fSeparator}> 0
//# NEW <{fSeparator}> 1
Funcs["/path/filepath/Dir"] = path_filepath.Dir
//# OLD <{fDir}> 0
//# NEW <{fDir}> 1
Vars["/path/filepath/ErrBadPattern"] = &path_filepath.ErrBadPattern
//# OLD <{fErrBadPattern}> 0
//# NEW <{fErrBadPattern}> 1
Funcs["/path/filepath/Join"] = path_filepath.Join
//# OLD <{fJoin}> 0
//# NEW <{fJoin}> 1
Funcs["/path/filepath/Ext"] = path_filepath.Ext
//# OLD <{fExt}> 0
//# NEW <{fExt}> 1
Funcs["/path/filepath/Match"] = path_filepath.Match
//# OLD <{fMatch}> 0
//# NEW <{fMatch}> 1
Funcs["/path/filepath/IsAbs"] = path_filepath.IsAbs
//# OLD <{fIsAbs}> 0
//# NEW <{fIsAbs}> 1
Funcs["/path/filepath/ToSlash"] = path_filepath.ToSlash
//# OLD <{fToSlash}> 0
//# NEW <{fToSlash}> 1
Funcs["/path/filepath/Base"] = path_filepath.Base
//# OLD <{fBase}> 0
//# NEW <{fBase}> 1
Funcs["/path/filepath/Glob"] = path_filepath.Glob
//# OLD <{fGlob}> 0
//# NEW <{fGlob}> 1
Funcs["/path/filepath/Abs"] = path_filepath.Abs
//# OLD <{fAbs}> 0
//# NEW <{fAbs}> 1
Types["/path/filepath/WalkFunc"] = new(*path_filepath.WalkFunc)
//# OLD <{fWalkFunc}> 0
//# NEW <{fWalkFunc}> 1
Funcs["/path/filepath/Clean"] = path_filepath.Clean
//# OLD <{fClean}> 0
//# NEW <{fClean}> 1
Funcs["/path/filepath/EvalSymlinks"] = path_filepath.EvalSymlinks
//# OLD <{fEvalSymlinks}> 0
//# NEW <{fEvalSymlinks}> 1
//? Consts["/path/filepath/ListSeparator"] = path_filepath.ListSeparator
//# OLD <{fListSeparator}> 0
//# NEW <{fListSeparator}> 1
Funcs["/path/filepath/VolumeName"] = path_filepath.VolumeName
//# OLD <{fVolumeName}> 0
//# NEW <{fVolumeName}> 1
Funcs["/path/filepath/SplitList"] = path_filepath.SplitList
//# OLD <{fSplitList}> 0
//# NEW <{fSplitList}> 1
Funcs["/path/filepath/HasPrefix"] = path_filepath.HasPrefix
//# OLD <{fHasPrefix}> 0
//# NEW <{fHasPrefix}> 1
Funcs["/path/filepath/FromSlash"] = path_filepath.FromSlash
//# OLD <{fFromSlash}> 0
//# NEW <{fFromSlash}> 1
Funcs["/path/filepath/Rel"] = path_filepath.Rel
//# OLD <{fRel}> 0
//# NEW <{fRel}> 1


//     type reflect.SliceHeader
//    const reflect.Uint
//     type reflect.Kind
//     func reflect.PtrTo
//     func reflect.DeepEqual
//     func reflect.Indirect
//     type reflect.Method
//    const reflect.Int32
//    const reflect.UnsafePointer
//    const reflect.Complex64
//     func reflect.Copy
//     type reflect.Type
//     func reflect.NewAt
//     func reflect.ValueOf
//    const reflect.Uint64
//    const reflect.Array
//    const reflect.Interface
//    const reflect.Map
//    const reflect.Int8
//    const reflect.BothDir
//    const reflect.Func
//    const reflect.Int64
//     type reflect.StringHeader
//    const reflect.SendDir
//     type reflect.Value
//    const reflect.Uint32
//     type reflect.ValueError
//     type reflect.ChanDir
//     func reflect.MakeSlice
//     type reflect.StructField
//     type reflect.StructTag
//    const reflect.Chan
//    const reflect.Float32
//    const reflect.Uint8
//    const reflect.Uintptr
//    const reflect.RecvDir
//     func reflect.AppendSlice
//    const reflect.Bool
//    const reflect.Ptr
//     func reflect.Zero
//     func reflect.MakeChan
//     func reflect.New
//    const reflect.Struct
//     func reflect.TypeOf
//     func reflect.Append
//    const reflect.String
//    const reflect.Complex128
//    const reflect.Int
//    const reflect.Float64
//    const reflect.Slice
//    const reflect.Int16
//    const reflect.Uint16
//     func reflect.MakeMap
//    const reflect.Invalid

Funcs["/reflect/PtrTo"] = reflect.PtrTo
//# OLD <{rPtrTo}> 0
//# NEW <{rPtrTo}> 1
Funcs["/reflect/DeepEqual"] = reflect.DeepEqual
//# OLD <{rDeepEqual}> 0
//# NEW <{rDeepEqual}> 1
Funcs["/reflect/Indirect"] = reflect.Indirect
//# OLD <{rIndirect}> 0
//# NEW <{rIndirect}> 1
Types["/reflect/Method"] = new(*reflect.Method)
//# OLD <{rMethod}> 0
//# NEW <{rMethod}> 1
//? Consts["/reflect/Int32"] = reflect.Int32
//# OLD <{rInt32}> 0
//# NEW <{rInt32}> 1
//? Consts["/reflect/UnsafePointer"] = reflect.UnsafePointer
//# OLD <{rUnsafePointer}> 0
//# NEW <{rUnsafePointer}> 1
//? Consts["/reflect/Complex64"] = reflect.Complex64
//# OLD <{rComplex64}> 0
//# NEW <{rComplex64}> 1
Funcs["/reflect/Copy"] = reflect.Copy
//# OLD <{rCopy}> 0
//# NEW <{rCopy}> 1
Types["/reflect/Type"] = new(*reflect.Type)
//# OLD <{rType}> 0
//# NEW <{rType}> 1
Funcs["/reflect/NewAt"] = reflect.NewAt
//# OLD <{rNewAt}> 0
//# NEW <{rNewAt}> 1
Funcs["/reflect/ValueOf"] = reflect.ValueOf
//# OLD <{rValueOf}> 0
//# NEW <{rValueOf}> 1
//? Consts["/reflect/Uint64"] = reflect.Uint64
//# OLD <{rUint64}> 0
//# NEW <{rUint64}> 1
//? Consts["/reflect/Array"] = reflect.Array
//# OLD <{rArray}> 0
//# NEW <{rArray}> 1
//? Consts["/reflect/Interface"] = reflect.Interface
//# OLD <{rInterface}> 0
//# NEW <{rInterface}> 1
//? Consts["/reflect/Map"] = reflect.Map
//# OLD <{rMap}> 0
//# NEW <{rMap}> 1
//? Consts["/reflect/Int8"] = reflect.Int8
//# OLD <{rInt8}> 0
//# NEW <{rInt8}> 1
//? Consts["/reflect/BothDir"] = reflect.BothDir
//# OLD <{rBothDir}> 0
//# NEW <{rBothDir}> 1
//? Consts["/reflect/Func"] = reflect.Func
//# OLD <{rFunc}> 0
//# NEW <{rFunc}> 1
//? Consts["/reflect/Int64"] = reflect.Int64
//# OLD <{rInt64}> 0
//# NEW <{rInt64}> 1
Types["/reflect/StringHeader"] = new(*reflect.StringHeader)
//# OLD <{rStringHeader}> 0
//# NEW <{rStringHeader}> 1
//? Consts["/reflect/SendDir"] = reflect.SendDir
//# OLD <{rSendDir}> 0
//# NEW <{rSendDir}> 1
Types["/reflect/Value"] = new(*reflect.Value)
//# OLD <{rValue}> 0
//# NEW <{rValue}> 1
//? Consts["/reflect/Uint32"] = reflect.Uint32
//# OLD <{rUint32}> 1
//# NEW <{rUint32}> 2
Types["/reflect/ValueError"] = new(*reflect.ValueError)
//# OLD <{rValueError}> 0
//# NEW <{rValueError}> 1
Types["/reflect/ChanDir"] = new(*reflect.ChanDir)
//# OLD <{rChanDir}> 0
//# NEW <{rChanDir}> 1
Funcs["/reflect/MakeSlice"] = reflect.MakeSlice
//# OLD <{rMakeSlice}> 0
//# NEW <{rMakeSlice}> 1
Types["/reflect/StructField"] = new(*reflect.StructField)
//# OLD <{rStructField}> 0
//# NEW <{rStructField}> 1
Types["/reflect/StructTag"] = new(*reflect.StructTag)
//# OLD <{rStructTag}> 0
//# NEW <{rStructTag}> 1
//? Consts["/reflect/Chan"] = reflect.Chan
//# OLD <{rChan}> 0
//# NEW <{rChan}> 1
//? Consts["/reflect/Float32"] = reflect.Float32
//# OLD <{rFloat32}> 1
//# NEW <{rFloat32}> 2
//? Consts["/reflect/Uint8"] = reflect.Uint8
//# OLD <{rUint8}> 0
//# NEW <{rUint8}> 1
//? Consts["/reflect/Uintptr"] = reflect.Uintptr
//# OLD <{rUintptr}> 0
//# NEW <{rUintptr}> 1
//? Consts["/reflect/RecvDir"] = reflect.RecvDir
//# OLD <{rRecvDir}> 0
//# NEW <{rRecvDir}> 1
Funcs["/reflect/AppendSlice"] = reflect.AppendSlice
//# OLD <{rAppendSlice}> 0
//# NEW <{rAppendSlice}> 1
//? Consts["/reflect/Bool"] = reflect.Bool
//# OLD <{rBool}> 0
//# NEW <{rBool}> 1
//? Consts["/reflect/Ptr"] = reflect.Ptr
//# OLD <{rPtr}> 0
//# NEW <{rPtr}> 1
Funcs["/reflect/Zero"] = reflect.Zero
//# OLD <{rZero}> 0
//# NEW <{rZero}> 1
Funcs["/reflect/MakeChan"] = reflect.MakeChan
//# OLD <{rMakeChan}> 0
//# NEW <{rMakeChan}> 1
Funcs["/reflect/New"] = reflect.New
//# OLD <{rNew}> 2
//# NEW <{rNew}> 3
//? Consts["/reflect/Struct"] = reflect.Struct
//# OLD <{rStruct}> 0
//# NEW <{rStruct}> 1
Funcs["/reflect/TypeOf"] = reflect.TypeOf
//# OLD <{rTypeOf}> 0
//# NEW <{rTypeOf}> 1
Funcs["/reflect/Append"] = reflect.Append
//# OLD <{rAppend}> 0
//# NEW <{rAppend}> 1
//? Consts["/reflect/String"] = reflect.String
//# OLD <{rString}> 0
//# NEW <{rString}> 1
//? Consts["/reflect/Complex128"] = reflect.Complex128
//# OLD <{rComplex128}> 0
//# NEW <{rComplex128}> 1
//? Consts["/reflect/Int"] = reflect.Int
//# OLD <{rInt}> 2
//# NEW <{rInt}> 3
//? Consts["/reflect/Float64"] = reflect.Float64
//# OLD <{rFloat64}> 1
//# NEW <{rFloat64}> 2
//? Consts["/reflect/Slice"] = reflect.Slice
//# OLD <{rSlice}> 0
//# NEW <{rSlice}> 1
//? Consts["/reflect/Int16"] = reflect.Int16
//# OLD <{rInt16}> 0
//# NEW <{rInt16}> 1
//? Consts["/reflect/Uint16"] = reflect.Uint16
//# OLD <{rUint16}> 0
//# NEW <{rUint16}> 1
Funcs["/reflect/MakeMap"] = reflect.MakeMap
//# OLD <{rMakeMap}> 0
//# NEW <{rMakeMap}> 1
//? Consts["/reflect/Invalid"] = reflect.Invalid
//# OLD <{rInvalid}> 0
//# NEW <{rInvalid}> 1
Types["/reflect/SliceHeader"] = new(*reflect.SliceHeader)
//# OLD <{rSliceHeader}> 0
//# NEW <{rSliceHeader}> 1
//? Consts["/reflect/Uint"] = reflect.Uint
//# OLD <{rUint}> 0
//# NEW <{rUint}> 1
Types["/reflect/Kind"] = new(*reflect.Kind)
//# OLD <{rKind}> 0
//# NEW <{rKind}> 1


//     func regexp.MatchString
//     func regexp.MustCompile
//     func regexp.MustCompilePOSIX
//     func regexp.MatchReader
//     type regexp.Regexp
//     func regexp.QuoteMeta
//     func regexp.CompilePOSIX
//     func regexp.Compile
//     func regexp.Match

Funcs["/regexp/MatchString"] = regexp.MatchString
//# OLD <{rMatchString}> 0
//# NEW <{rMatchString}> 1
Funcs["/regexp/MustCompile"] = regexp.MustCompile
//# OLD <{rMustCompile}> 0
//# NEW <{rMustCompile}> 1
Funcs["/regexp/MustCompilePOSIX"] = regexp.MustCompilePOSIX
//# OLD <{rMustCompilePOSIX}> 0
//# NEW <{rMustCompilePOSIX}> 1
Funcs["/regexp/MatchReader"] = regexp.MatchReader
//# OLD <{rMatchReader}> 0
//# NEW <{rMatchReader}> 1
Types["/regexp/Regexp"] = new(*regexp.Regexp)
//# OLD <{rRegexp}> 0
//# NEW <{rRegexp}> 1
Funcs["/regexp/QuoteMeta"] = regexp.QuoteMeta
//# OLD <{rQuoteMeta}> 0
//# NEW <{rQuoteMeta}> 1
Funcs["/regexp/CompilePOSIX"] = regexp.CompilePOSIX
//# OLD <{rCompilePOSIX}> 0
//# NEW <{rCompilePOSIX}> 1
Funcs["/regexp/Compile"] = regexp.Compile
//# OLD <{rCompile}> 0
//# NEW <{rCompile}> 1
Funcs["/regexp/Match"] = regexp.Match
//# OLD <{rMatch}> 0
//# NEW <{rMatch}> 1


//    const regexp/syntax.OpStar
//    const regexp/syntax.ErrInvalidCharClass
//    const regexp/syntax.Simple
//    const regexp/syntax.OpLiteral
//    const regexp/syntax.MatchNL
//    const regexp/syntax.EmptyWordBoundary
//    const regexp/syntax.Literal
//    const regexp/syntax.ErrTrailingBackslash
//    const regexp/syntax.ErrInvalidCharRange
//     type regexp/syntax.Op
//    const regexp/syntax.ErrInvalidRepeatSize
//    const regexp/syntax.OpAlternate
//    const regexp/syntax.InstMatch
//    const regexp/syntax.OpAnyCharNotNL
//    const regexp/syntax.OpAnyChar
//    const regexp/syntax.EmptyBeginText
//    const regexp/syntax.EmptyEndLine
//    const regexp/syntax.ErrInternalError
//    const regexp/syntax.ErrMissingBracket
//    const regexp/syntax.OpEmptyMatch
//     type regexp/syntax.EmptyOp
//     func regexp/syntax.IsWordChar
//    const regexp/syntax.OpPlus
//    const regexp/syntax.DotNL
//     type regexp/syntax.InstOp
//    const regexp/syntax.InstEmptyWidth
//    const regexp/syntax.ErrInvalidNamedCapture
//    const regexp/syntax.ErrInvalidEscape
//    const regexp/syntax.InstRuneAnyNotNL
//    const regexp/syntax.Perl
//    const regexp/syntax.OpQuest
//     func regexp/syntax.Parse
//    const regexp/syntax.ErrInvalidRepeatOp
//    const regexp/syntax.InstRuneAny
//    const regexp/syntax.ClassNL
//     type regexp/syntax.Error
//    const regexp/syntax.ErrInvalidPerlOp
//    const regexp/syntax.NonGreedy
//    const regexp/syntax.InstFail
//    const regexp/syntax.InstNop
//    const regexp/syntax.WasDollar
//    const regexp/syntax.ErrInvalidUTF8
//    const regexp/syntax.EmptyNoWordBoundary
//    const regexp/syntax.OpNoMatch
//    const regexp/syntax.ErrMissingRepeatArgument
//    const regexp/syntax.OpWordBoundary
//     type regexp/syntax.ErrorCode
//     func regexp/syntax.EmptyOpContext
//    const regexp/syntax.InstAlt
//     type regexp/syntax.Inst
//    const regexp/syntax.OpRepeat
//     type regexp/syntax.Prog
//    const regexp/syntax.POSIX
//    const regexp/syntax.EmptyEndText
//    const regexp/syntax.InstRune
//    const regexp/syntax.FoldCase
//    const regexp/syntax.InstRune1
//    const regexp/syntax.OpBeginLine
//    const regexp/syntax.OpEndText
//    const regexp/syntax.OpCapture
//    const regexp/syntax.OpBeginText
//    const regexp/syntax.OpConcat
//     func regexp/syntax.Compile
//     type regexp/syntax.Flags
//    const regexp/syntax.EmptyBeginLine
//    const regexp/syntax.OpNoWordBoundary
//    const regexp/syntax.OpCharClass
//    const regexp/syntax.InstCapture
//    const regexp/syntax.OneLine
//    const regexp/syntax.UnicodeGroups
//     type regexp/syntax.Regexp
//    const regexp/syntax.ErrMissingParen
//    const regexp/syntax.InstAltMatch
//    const regexp/syntax.OpEndLine
//    const regexp/syntax.PerlX

//? Consts["/regexp/syntax/ErrInvalidCharRange"] = regexp_syntax.ErrInvalidCharRange
//# OLD <{sErrInvalidCharRange}> 0
//# NEW <{sErrInvalidCharRange}> 1
Types["/regexp/syntax/Op"] = new(*regexp_syntax.Op)
//# OLD <{sOp}> 0
//# NEW <{sOp}> 1
//? Consts["/regexp/syntax/ErrInvalidRepeatSize"] = regexp_syntax.ErrInvalidRepeatSize
//# OLD <{sErrInvalidRepeatSize}> 0
//# NEW <{sErrInvalidRepeatSize}> 1
//? Consts["/regexp/syntax/OpAlternate"] = regexp_syntax.OpAlternate
//# OLD <{sOpAlternate}> 0
//# NEW <{sOpAlternate}> 1
//? Consts["/regexp/syntax/InstMatch"] = regexp_syntax.InstMatch
//# OLD <{sInstMatch}> 0
//# NEW <{sInstMatch}> 1
//? Consts["/regexp/syntax/OpAnyCharNotNL"] = regexp_syntax.OpAnyCharNotNL
//# OLD <{sOpAnyCharNotNL}> 0
//# NEW <{sOpAnyCharNotNL}> 1
//? Consts["/regexp/syntax/OpAnyChar"] = regexp_syntax.OpAnyChar
//# OLD <{sOpAnyChar}> 0
//# NEW <{sOpAnyChar}> 1
//? Consts["/regexp/syntax/EmptyBeginText"] = regexp_syntax.EmptyBeginText
//# OLD <{sEmptyBeginText}> 0
//# NEW <{sEmptyBeginText}> 1
//? Consts["/regexp/syntax/EmptyEndLine"] = regexp_syntax.EmptyEndLine
//# OLD <{sEmptyEndLine}> 0
//# NEW <{sEmptyEndLine}> 1
//? Consts["/regexp/syntax/ErrInternalError"] = regexp_syntax.ErrInternalError
//# OLD <{sErrInternalError}> 0
//# NEW <{sErrInternalError}> 1
//? Consts["/regexp/syntax/ErrMissingBracket"] = regexp_syntax.ErrMissingBracket
//# OLD <{sErrMissingBracket}> 0
//# NEW <{sErrMissingBracket}> 1
//? Consts["/regexp/syntax/OpEmptyMatch"] = regexp_syntax.OpEmptyMatch
//# OLD <{sOpEmptyMatch}> 0
//# NEW <{sOpEmptyMatch}> 1
Types["/regexp/syntax/EmptyOp"] = new(*regexp_syntax.EmptyOp)
//# OLD <{sEmptyOp}> 0
//# NEW <{sEmptyOp}> 1
Funcs["/regexp/syntax/IsWordChar"] = regexp_syntax.IsWordChar
//# OLD <{sIsWordChar}> 0
//# NEW <{sIsWordChar}> 1
//? Consts["/regexp/syntax/OpPlus"] = regexp_syntax.OpPlus
//# OLD <{sOpPlus}> 0
//# NEW <{sOpPlus}> 1
//? Consts["/regexp/syntax/DotNL"] = regexp_syntax.DotNL
//# OLD <{sDotNL}> 0
//# NEW <{sDotNL}> 1
Types["/regexp/syntax/InstOp"] = new(*regexp_syntax.InstOp)
//# OLD <{sInstOp}> 0
//# NEW <{sInstOp}> 1
//? Consts["/regexp/syntax/InstEmptyWidth"] = regexp_syntax.InstEmptyWidth
//# OLD <{sInstEmptyWidth}> 0
//# NEW <{sInstEmptyWidth}> 1
//? Consts["/regexp/syntax/ErrInvalidNamedCapture"] = regexp_syntax.ErrInvalidNamedCapture
//# OLD <{sErrInvalidNamedCapture}> 0
//# NEW <{sErrInvalidNamedCapture}> 1
//? Consts["/regexp/syntax/ErrInvalidEscape"] = regexp_syntax.ErrInvalidEscape
//# OLD <{sErrInvalidEscape}> 0
//# NEW <{sErrInvalidEscape}> 1
//? Consts["/regexp/syntax/InstRuneAnyNotNL"] = regexp_syntax.InstRuneAnyNotNL
//# OLD <{sInstRuneAnyNotNL}> 0
//# NEW <{sInstRuneAnyNotNL}> 1
//? Consts["/regexp/syntax/Perl"] = regexp_syntax.Perl
//# OLD <{sPerl}> 0
//# NEW <{sPerl}> 1
//? Consts["/regexp/syntax/OpQuest"] = regexp_syntax.OpQuest
//# OLD <{sOpQuest}> 0
//# NEW <{sOpQuest}> 1
Funcs["/regexp/syntax/Parse"] = regexp_syntax.Parse
//# OLD <{sParse}> 0
//# NEW <{sParse}> 1
//? Consts["/regexp/syntax/ErrInvalidRepeatOp"] = regexp_syntax.ErrInvalidRepeatOp
//# OLD <{sErrInvalidRepeatOp}> 0
//# NEW <{sErrInvalidRepeatOp}> 1
//? Consts["/regexp/syntax/InstRuneAny"] = regexp_syntax.InstRuneAny
//# OLD <{sInstRuneAny}> 0
//# NEW <{sInstRuneAny}> 1
//? Consts["/regexp/syntax/ClassNL"] = regexp_syntax.ClassNL
//# OLD <{sClassNL}> 0
//# NEW <{sClassNL}> 1
Types["/regexp/syntax/Error"] = new(*regexp_syntax.Error)
//# OLD <{sError}> 1
//# NEW <{sError}> 2
//? Consts["/regexp/syntax/ErrInvalidPerlOp"] = regexp_syntax.ErrInvalidPerlOp
//# OLD <{sErrInvalidPerlOp}> 0
//# NEW <{sErrInvalidPerlOp}> 1
//? Consts["/regexp/syntax/NonGreedy"] = regexp_syntax.NonGreedy
//# OLD <{sNonGreedy}> 0
//# NEW <{sNonGreedy}> 1
//? Consts["/regexp/syntax/InstFail"] = regexp_syntax.InstFail
//# OLD <{sInstFail}> 0
//# NEW <{sInstFail}> 1
//? Consts["/regexp/syntax/InstNop"] = regexp_syntax.InstNop
//# OLD <{sInstNop}> 0
//# NEW <{sInstNop}> 1
//? Consts["/regexp/syntax/WasDollar"] = regexp_syntax.WasDollar
//# OLD <{sWasDollar}> 0
//# NEW <{sWasDollar}> 1
//? Consts["/regexp/syntax/ErrInvalidUTF8"] = regexp_syntax.ErrInvalidUTF8
//# OLD <{sErrInvalidUTF8}> 0
//# NEW <{sErrInvalidUTF8}> 1
//? Consts["/regexp/syntax/EmptyNoWordBoundary"] = regexp_syntax.EmptyNoWordBoundary
//# OLD <{sEmptyNoWordBoundary}> 0
//# NEW <{sEmptyNoWordBoundary}> 1
//? Consts["/regexp/syntax/OpNoMatch"] = regexp_syntax.OpNoMatch
//# OLD <{sOpNoMatch}> 0
//# NEW <{sOpNoMatch}> 1
//? Consts["/regexp/syntax/ErrMissingRepeatArgument"] = regexp_syntax.ErrMissingRepeatArgument
//# OLD <{sErrMissingRepeatArgument}> 0
//# NEW <{sErrMissingRepeatArgument}> 1
//? Consts["/regexp/syntax/OpWordBoundary"] = regexp_syntax.OpWordBoundary
//# OLD <{sOpWordBoundary}> 0
//# NEW <{sOpWordBoundary}> 1
Types["/regexp/syntax/ErrorCode"] = new(*regexp_syntax.ErrorCode)
//# OLD <{sErrorCode}> 0
//# NEW <{sErrorCode}> 1
Funcs["/regexp/syntax/EmptyOpContext"] = regexp_syntax.EmptyOpContext
//# OLD <{sEmptyOpContext}> 0
//# NEW <{sEmptyOpContext}> 1
//? Consts["/regexp/syntax/InstAlt"] = regexp_syntax.InstAlt
//# OLD <{sInstAlt}> 0
//# NEW <{sInstAlt}> 1
Types["/regexp/syntax/Inst"] = new(*regexp_syntax.Inst)
//# OLD <{sInst}> 0
//# NEW <{sInst}> 1
//? Consts["/regexp/syntax/OpRepeat"] = regexp_syntax.OpRepeat
//# OLD <{sOpRepeat}> 0
//# NEW <{sOpRepeat}> 1
Types["/regexp/syntax/Prog"] = new(*regexp_syntax.Prog)
//# OLD <{sProg}> 0
//# NEW <{sProg}> 1
//? Consts["/regexp/syntax/POSIX"] = regexp_syntax.POSIX
//# OLD <{sPOSIX}> 0
//# NEW <{sPOSIX}> 1
//? Consts["/regexp/syntax/EmptyEndText"] = regexp_syntax.EmptyEndText
//# OLD <{sEmptyEndText}> 0
//# NEW <{sEmptyEndText}> 1
//? Consts["/regexp/syntax/InstRune"] = regexp_syntax.InstRune
//# OLD <{sInstRune}> 0
//# NEW <{sInstRune}> 1
//? Consts["/regexp/syntax/FoldCase"] = regexp_syntax.FoldCase
//# OLD <{sFoldCase}> 0
//# NEW <{sFoldCase}> 1
//? Consts["/regexp/syntax/InstRune1"] = regexp_syntax.InstRune1
//# OLD <{sInstRune1}> 0
//# NEW <{sInstRune1}> 1
//? Consts["/regexp/syntax/OpBeginLine"] = regexp_syntax.OpBeginLine
//# OLD <{sOpBeginLine}> 0
//# NEW <{sOpBeginLine}> 1
//? Consts["/regexp/syntax/OpEndText"] = regexp_syntax.OpEndText
//# OLD <{sOpEndText}> 0
//# NEW <{sOpEndText}> 1
//? Consts["/regexp/syntax/OpCapture"] = regexp_syntax.OpCapture
//# OLD <{sOpCapture}> 0
//# NEW <{sOpCapture}> 1
//? Consts["/regexp/syntax/OpBeginText"] = regexp_syntax.OpBeginText
//# OLD <{sOpBeginText}> 0
//# NEW <{sOpBeginText}> 1
//? Consts["/regexp/syntax/OpConcat"] = regexp_syntax.OpConcat
//# OLD <{sOpConcat}> 0
//# NEW <{sOpConcat}> 1
Funcs["/regexp/syntax/Compile"] = regexp_syntax.Compile
//# OLD <{sCompile}> 0
//# NEW <{sCompile}> 1
Types["/regexp/syntax/Flags"] = new(*regexp_syntax.Flags)
//# OLD <{sFlags}> 0
//# NEW <{sFlags}> 1
//? Consts["/regexp/syntax/EmptyBeginLine"] = regexp_syntax.EmptyBeginLine
//# OLD <{sEmptyBeginLine}> 0
//# NEW <{sEmptyBeginLine}> 1
//? Consts["/regexp/syntax/OpNoWordBoundary"] = regexp_syntax.OpNoWordBoundary
//# OLD <{sOpNoWordBoundary}> 0
//# NEW <{sOpNoWordBoundary}> 1
//? Consts["/regexp/syntax/OpCharClass"] = regexp_syntax.OpCharClass
//# OLD <{sOpCharClass}> 0
//# NEW <{sOpCharClass}> 1
//? Consts["/regexp/syntax/InstCapture"] = regexp_syntax.InstCapture
//# OLD <{sInstCapture}> 0
//# NEW <{sInstCapture}> 1
//? Consts["/regexp/syntax/OneLine"] = regexp_syntax.OneLine
//# OLD <{sOneLine}> 0
//# NEW <{sOneLine}> 1
//? Consts["/regexp/syntax/UnicodeGroups"] = regexp_syntax.UnicodeGroups
//# OLD <{sUnicodeGroups}> 0
//# NEW <{sUnicodeGroups}> 1
Types["/regexp/syntax/Regexp"] = new(*regexp_syntax.Regexp)
//# OLD <{sRegexp}> 0
//# NEW <{sRegexp}> 1
//? Consts["/regexp/syntax/ErrMissingParen"] = regexp_syntax.ErrMissingParen
//# OLD <{sErrMissingParen}> 0
//# NEW <{sErrMissingParen}> 1
//? Consts["/regexp/syntax/InstAltMatch"] = regexp_syntax.InstAltMatch
//# OLD <{sInstAltMatch}> 0
//# NEW <{sInstAltMatch}> 1
//? Consts["/regexp/syntax/OpEndLine"] = regexp_syntax.OpEndLine
//# OLD <{sOpEndLine}> 0
//# NEW <{sOpEndLine}> 1
//? Consts["/regexp/syntax/PerlX"] = regexp_syntax.PerlX
//# OLD <{sPerlX}> 0
//# NEW <{sPerlX}> 1
//? Consts["/regexp/syntax/OpStar"] = regexp_syntax.OpStar
//# OLD <{sOpStar}> 0
//# NEW <{sOpStar}> 1
//? Consts["/regexp/syntax/ErrInvalidCharClass"] = regexp_syntax.ErrInvalidCharClass
//# OLD <{sErrInvalidCharClass}> 0
//# NEW <{sErrInvalidCharClass}> 1
//? Consts["/regexp/syntax/Simple"] = regexp_syntax.Simple
//# OLD <{sSimple}> 0
//# NEW <{sSimple}> 1
//? Consts["/regexp/syntax/OpLiteral"] = regexp_syntax.OpLiteral
//# OLD <{sOpLiteral}> 0
//# NEW <{sOpLiteral}> 1
//? Consts["/regexp/syntax/MatchNL"] = regexp_syntax.MatchNL
//# OLD <{sMatchNL}> 0
//# NEW <{sMatchNL}> 1
//? Consts["/regexp/syntax/EmptyWordBoundary"] = regexp_syntax.EmptyWordBoundary
//# OLD <{sEmptyWordBoundary}> 0
//# NEW <{sEmptyWordBoundary}> 1
//? Consts["/regexp/syntax/Literal"] = regexp_syntax.Literal
//# OLD <{sLiteral}> 0
//# NEW <{sLiteral}> 1
//? Consts["/regexp/syntax/ErrTrailingBackslash"] = regexp_syntax.ErrTrailingBackslash
//# OLD <{sErrTrailingBackslash}> 0
//# NEW <{sErrTrailingBackslash}> 1


//     func runtime.MemProfile
//     func runtime.FuncForPC
//     type runtime.Error
//     func runtime.ReadMemStats
//     func runtime.SetCPUProfileRate
//     func runtime.GC
//     func runtime.NumCgoCall
//     type runtime.TypeAssertionError
//     func runtime.LockOSThread
//     func runtime.GoroutineProfile
//      var runtime.MemProfileRate
//     func runtime.GOROOT
//     func runtime.CPUProfile
//     func runtime.Goexit
//     func runtime.UnlockOSThread
//     func runtime.Stack
//     func runtime.ThreadCreateProfile
//     type runtime.MemStats
//    const runtime.GOOS
//     func runtime.Caller
//     func runtime.Callers
//    const runtime.Compiler
//     func runtime.GOMAXPROCS
//     func runtime.Breakpoint
//     func runtime.SetFinalizer
//     func runtime.NumGoroutine
//     func runtime.Gosched
//    const runtime.GOARCH
//     type runtime.Func
//     func runtime.Version
//     type runtime.MemProfileRecord
//     type runtime.StackRecord
//     func runtime.NumCPU

Funcs["/runtime/LockOSThread"] = runtime.LockOSThread
//# OLD <{rLockOSThread}> 0
//# NEW <{rLockOSThread}> 1
Funcs["/runtime/GoroutineProfile"] = runtime.GoroutineProfile
//# OLD <{rGoroutineProfile}> 0
//# NEW <{rGoroutineProfile}> 1
Vars["/runtime/MemProfileRate"] = &runtime.MemProfileRate
//# OLD <{rMemProfileRate}> 0
//# NEW <{rMemProfileRate}> 1
Funcs["/runtime/GOROOT"] = runtime.GOROOT
//# OLD <{rGOROOT}> 0
//# NEW <{rGOROOT}> 1
Funcs["/runtime/CPUProfile"] = runtime.CPUProfile
//# OLD <{rCPUProfile}> 0
//# NEW <{rCPUProfile}> 1
Funcs["/runtime/Goexit"] = runtime.Goexit
//# OLD <{rGoexit}> 0
//# NEW <{rGoexit}> 1
Funcs["/runtime/UnlockOSThread"] = runtime.UnlockOSThread
//# OLD <{rUnlockOSThread}> 0
//# NEW <{rUnlockOSThread}> 1
Funcs["/runtime/Stack"] = runtime.Stack
//# OLD <{rStack}> 0
//# NEW <{rStack}> 1
Funcs["/runtime/ThreadCreateProfile"] = runtime.ThreadCreateProfile
//# OLD <{rThreadCreateProfile}> 0
//# NEW <{rThreadCreateProfile}> 1
Types["/runtime/MemStats"] = new(*runtime.MemStats)
//# OLD <{rMemStats}> 0
//# NEW <{rMemStats}> 1
//? Consts["/runtime/GOOS"] = runtime.GOOS
//# OLD <{rGOOS}> 0
//# NEW <{rGOOS}> 1
Funcs["/runtime/Caller"] = runtime.Caller
//# OLD <{rCaller}> 0
//# NEW <{rCaller}> 1
Funcs["/runtime/Callers"] = runtime.Callers
//# OLD <{rCallers}> 0
//# NEW <{rCallers}> 1
//? Consts["/runtime/Compiler"] = runtime.Compiler
//# OLD <{rCompiler}> 0
//# NEW <{rCompiler}> 1
Funcs["/runtime/GOMAXPROCS"] = runtime.GOMAXPROCS
//# OLD <{rGOMAXPROCS}> 0
//# NEW <{rGOMAXPROCS}> 1
Funcs["/runtime/Breakpoint"] = runtime.Breakpoint
//# OLD <{rBreakpoint}> 0
//# NEW <{rBreakpoint}> 1
Funcs["/runtime/SetFinalizer"] = runtime.SetFinalizer
//# OLD <{rSetFinalizer}> 0
//# NEW <{rSetFinalizer}> 1
Funcs["/runtime/NumGoroutine"] = runtime.NumGoroutine
//# OLD <{rNumGoroutine}> 0
//# NEW <{rNumGoroutine}> 1
Funcs["/runtime/Gosched"] = runtime.Gosched
//# OLD <{rGosched}> 0
//# NEW <{rGosched}> 1
//? Consts["/runtime/GOARCH"] = runtime.GOARCH
//# OLD <{rGOARCH}> 0
//# NEW <{rGOARCH}> 1
Types["/runtime/Func"] = new(*runtime.Func)
//# OLD <{rFunc}> 1
//# NEW <{rFunc}> 2
Funcs["/runtime/Version"] = runtime.Version
//# OLD <{rVersion}> 0
//# NEW <{rVersion}> 1
Types["/runtime/MemProfileRecord"] = new(*runtime.MemProfileRecord)
//# OLD <{rMemProfileRecord}> 0
//# NEW <{rMemProfileRecord}> 1
Types["/runtime/StackRecord"] = new(*runtime.StackRecord)
//# OLD <{rStackRecord}> 0
//# NEW <{rStackRecord}> 1
Funcs["/runtime/NumCPU"] = runtime.NumCPU
//# OLD <{rNumCPU}> 0
//# NEW <{rNumCPU}> 1
Funcs["/runtime/MemProfile"] = runtime.MemProfile
//# OLD <{rMemProfile}> 0
//# NEW <{rMemProfile}> 1
Funcs["/runtime/FuncForPC"] = runtime.FuncForPC
//# OLD <{rFuncForPC}> 0
//# NEW <{rFuncForPC}> 1
Types["/runtime/Error"] = new(*runtime.Error)
//# OLD <{rError}> 0
//# NEW <{rError}> 1
Funcs["/runtime/ReadMemStats"] = runtime.ReadMemStats
//# OLD <{rReadMemStats}> 0
//# NEW <{rReadMemStats}> 1
Funcs["/runtime/SetCPUProfileRate"] = runtime.SetCPUProfileRate
//# OLD <{rSetCPUProfileRate}> 0
//# NEW <{rSetCPUProfileRate}> 1
Funcs["/runtime/GC"] = runtime.GC
//# OLD <{rGC}> 0
//# NEW <{rGC}> 1
Funcs["/runtime/NumCgoCall"] = runtime.NumCgoCall
//# OLD <{rNumCgoCall}> 0
//# NEW <{rNumCgoCall}> 1
Types["/runtime/TypeAssertionError"] = new(*runtime.TypeAssertionError)
//# OLD <{rTypeAssertionError}> 0
//# NEW <{rTypeAssertionError}> 1


//     func runtime/debug.PrintStack
//     func runtime/debug.Stack

Funcs["/runtime/debug/Stack"] = runtime_debug.Stack
//# OLD <{dStack}> 0
//# NEW <{dStack}> 1
Funcs["/runtime/debug/PrintStack"] = runtime_debug.PrintStack
//# OLD <{dPrintStack}> 0
//# NEW <{dPrintStack}> 1


//     type runtime/pprof.Profile
//     func runtime/pprof.Profiles
//     func runtime/pprof.StartCPUProfile
//     func runtime/pprof.Lookup
//     func runtime/pprof.NewProfile
//     func runtime/pprof.WriteHeapProfile
//     func runtime/pprof.StopCPUProfile

Types["/runtime/pprof/Profile"] = new(*runtime_pprof.Profile)
//# OLD <{pProfile}> 1
//# NEW <{pProfile}> 2
Funcs["/runtime/pprof/Profiles"] = runtime_pprof.Profiles
//# OLD <{pProfiles}> 0
//# NEW <{pProfiles}> 1
Funcs["/runtime/pprof/StartCPUProfile"] = runtime_pprof.StartCPUProfile
//# OLD <{pStartCPUProfile}> 0
//# NEW <{pStartCPUProfile}> 1
Funcs["/runtime/pprof/Lookup"] = runtime_pprof.Lookup
//# OLD <{pLookup}> 0
//# NEW <{pLookup}> 1
Funcs["/runtime/pprof/NewProfile"] = runtime_pprof.NewProfile
//# OLD <{pNewProfile}> 0
//# NEW <{pNewProfile}> 1
Funcs["/runtime/pprof/WriteHeapProfile"] = runtime_pprof.WriteHeapProfile
//# OLD <{pWriteHeapProfile}> 0
//# NEW <{pWriteHeapProfile}> 1
Funcs["/runtime/pprof/StopCPUProfile"] = runtime_pprof.StopCPUProfile
//# OLD <{pStopCPUProfile}> 0
//# NEW <{pStopCPUProfile}> 1


//     func sort.StringsAreSorted
//     func sort.SearchStrings
//     type sort.StringSlice
//     func sort.IsSorted
//     func sort.Float64sAreSorted
//     func sort.Float64s
//     func sort.Sort
//     func sort.SearchFloat64s
//     func sort.Strings
//     type sort.Interface
//     func sort.IntsAreSorted
//     func sort.Search
//     type sort.Float64Slice
//     type sort.IntSlice
//     func sort.Ints
//     func sort.SearchInts

Funcs["/sort/IsSorted"] = sort.IsSorted
//# OLD <{sIsSorted}> 0
//# NEW <{sIsSorted}> 1
Funcs["/sort/Float64sAreSorted"] = sort.Float64sAreSorted
//# OLD <{sFloat64sAreSorted}> 0
//# NEW <{sFloat64sAreSorted}> 1
Funcs["/sort/Float64s"] = sort.Float64s
//# OLD <{sFloat64s}> 0
//# NEW <{sFloat64s}> 1
Funcs["/sort/Sort"] = sort.Sort
//# OLD <{sSort}> 0
//# NEW <{sSort}> 1
Funcs["/sort/SearchFloat64s"] = sort.SearchFloat64s
//# OLD <{sSearchFloat64s}> 0
//# NEW <{sSearchFloat64s}> 1
Funcs["/sort/Strings"] = sort.Strings
//# OLD <{sStrings}> 0
//# NEW <{sStrings}> 1
Types["/sort/Interface"] = new(*sort.Interface)
//# OLD <{sInterface}> 0
//# NEW <{sInterface}> 1
Funcs["/sort/IntsAreSorted"] = sort.IntsAreSorted
//# OLD <{sIntsAreSorted}> 0
//# NEW <{sIntsAreSorted}> 1
Funcs["/sort/Search"] = sort.Search
//# OLD <{sSearch}> 0
//# NEW <{sSearch}> 1
Types["/sort/Float64Slice"] = new(*sort.Float64Slice)
//# OLD <{sFloat64Slice}> 0
//# NEW <{sFloat64Slice}> 1
Types["/sort/IntSlice"] = new(*sort.IntSlice)
//# OLD <{sIntSlice}> 0
//# NEW <{sIntSlice}> 1
Funcs["/sort/Ints"] = sort.Ints
//# OLD <{sInts}> 0
//# NEW <{sInts}> 1
Funcs["/sort/SearchInts"] = sort.SearchInts
//# OLD <{sSearchInts}> 0
//# NEW <{sSearchInts}> 1
Funcs["/sort/StringsAreSorted"] = sort.StringsAreSorted
//# OLD <{sStringsAreSorted}> 0
//# NEW <{sStringsAreSorted}> 1
Funcs["/sort/SearchStrings"] = sort.SearchStrings
//# OLD <{sSearchStrings}> 0
//# NEW <{sSearchStrings}> 1
Types["/sort/StringSlice"] = new(*sort.StringSlice)
//# OLD <{sStringSlice}> 0
//# NEW <{sStringSlice}> 1


//     func strconv.ParseBool
//     func strconv.AppendQuote
//     func strconv.AppendUint
//     func strconv.Unquote
//     func strconv.AppendQuoteRuneToASCII
//     func strconv.AppendQuoteToASCII
//     func strconv.QuoteToASCII
//     func strconv.AppendFloat
//     func strconv.Itoa
//      var strconv.ErrSyntax
//     func strconv.AppendQuoteRune
//     func strconv.CanBackquote
//     func strconv.FormatInt
//     func strconv.IsPrint
//     func strconv.QuoteRuneToASCII
//      var strconv.ErrRange
//     func strconv.AppendBool
//     func strconv.FormatUint
//     func strconv.FormatBool
//     func strconv.Atoi
//     func strconv.ParseUint
//     func strconv.UnquoteChar
//     func strconv.ParseInt
//     func strconv.Quote
//     func strconv.ParseFloat
//     func strconv.AppendInt
//    const strconv.IntSize
//     func strconv.QuoteRune
//     type strconv.NumError
//     func strconv.FormatFloat

Funcs["/strconv/AppendBool"] = strconv.AppendBool
//# OLD <{sAppendBool}> 0
//# NEW <{sAppendBool}> 1
Funcs["/strconv/FormatUint"] = strconv.FormatUint
//# OLD <{sFormatUint}> 0
//# NEW <{sFormatUint}> 1
Funcs["/strconv/FormatBool"] = strconv.FormatBool
//# OLD <{sFormatBool}> 0
//# NEW <{sFormatBool}> 1
Funcs["/strconv/Atoi"] = strconv.Atoi
//# OLD <{sAtoi}> 0
//# NEW <{sAtoi}> 1
Funcs["/strconv/ParseUint"] = strconv.ParseUint
//# OLD <{sParseUint}> 0
//# NEW <{sParseUint}> 1
Funcs["/strconv/UnquoteChar"] = strconv.UnquoteChar
//# OLD <{sUnquoteChar}> 0
//# NEW <{sUnquoteChar}> 1
Funcs["/strconv/ParseInt"] = strconv.ParseInt
//# OLD <{sParseInt}> 0
//# NEW <{sParseInt}> 1
Funcs["/strconv/Quote"] = strconv.Quote
//# OLD <{sQuote}> 0
//# NEW <{sQuote}> 1
Funcs["/strconv/ParseFloat"] = strconv.ParseFloat
//# OLD <{sParseFloat}> 0
//# NEW <{sParseFloat}> 1
Funcs["/strconv/AppendInt"] = strconv.AppendInt
//# OLD <{sAppendInt}> 0
//# NEW <{sAppendInt}> 1
//? Consts["/strconv/IntSize"] = strconv.IntSize
//# OLD <{sIntSize}> 0
//# NEW <{sIntSize}> 1
Funcs["/strconv/QuoteRune"] = strconv.QuoteRune
//# OLD <{sQuoteRune}> 0
//# NEW <{sQuoteRune}> 1
Types["/strconv/NumError"] = new(*strconv.NumError)
//# OLD <{sNumError}> 0
//# NEW <{sNumError}> 1
Funcs["/strconv/FormatFloat"] = strconv.FormatFloat
//# OLD <{sFormatFloat}> 0
//# NEW <{sFormatFloat}> 1
Funcs["/strconv/ParseBool"] = strconv.ParseBool
//# OLD <{sParseBool}> 0
//# NEW <{sParseBool}> 1
Funcs["/strconv/AppendQuote"] = strconv.AppendQuote
//# OLD <{sAppendQuote}> 0
//# NEW <{sAppendQuote}> 1
Funcs["/strconv/AppendUint"] = strconv.AppendUint
//# OLD <{sAppendUint}> 0
//# NEW <{sAppendUint}> 1
Funcs["/strconv/Unquote"] = strconv.Unquote
//# OLD <{sUnquote}> 0
//# NEW <{sUnquote}> 1
Funcs["/strconv/AppendQuoteRuneToASCII"] = strconv.AppendQuoteRuneToASCII
//# OLD <{sAppendQuoteRuneToASCII}> 0
//# NEW <{sAppendQuoteRuneToASCII}> 1
Funcs["/strconv/AppendQuoteToASCII"] = strconv.AppendQuoteToASCII
//# OLD <{sAppendQuoteToASCII}> 0
//# NEW <{sAppendQuoteToASCII}> 1
Funcs["/strconv/QuoteToASCII"] = strconv.QuoteToASCII
//# OLD <{sQuoteToASCII}> 0
//# NEW <{sQuoteToASCII}> 1
Funcs["/strconv/AppendFloat"] = strconv.AppendFloat
//# OLD <{sAppendFloat}> 0
//# NEW <{sAppendFloat}> 1
Funcs["/strconv/Itoa"] = strconv.Itoa
//# OLD <{sItoa}> 0
//# NEW <{sItoa}> 1
Vars["/strconv/ErrSyntax"] = &strconv.ErrSyntax
//# OLD <{sErrSyntax}> 0
//# NEW <{sErrSyntax}> 1
Funcs["/strconv/AppendQuoteRune"] = strconv.AppendQuoteRune
//# OLD <{sAppendQuoteRune}> 0
//# NEW <{sAppendQuoteRune}> 1
Funcs["/strconv/CanBackquote"] = strconv.CanBackquote
//# OLD <{sCanBackquote}> 0
//# NEW <{sCanBackquote}> 1
Funcs["/strconv/FormatInt"] = strconv.FormatInt
//# OLD <{sFormatInt}> 0
//# NEW <{sFormatInt}> 1
Funcs["/strconv/IsPrint"] = strconv.IsPrint
//# OLD <{sIsPrint}> 0
//# NEW <{sIsPrint}> 1
Funcs["/strconv/QuoteRuneToASCII"] = strconv.QuoteRuneToASCII
//# OLD <{sQuoteRuneToASCII}> 0
//# NEW <{sQuoteRuneToASCII}> 1
Vars["/strconv/ErrRange"] = &strconv.ErrRange
//# OLD <{sErrRange}> 0
//# NEW <{sErrRange}> 1


//     func strings.HasPrefix
//     func strings.TrimSpace
//     func strings.NewReader
//     type strings.Reader
//     func strings.NewReplacer
//     func strings.LastIndexFunc
//     func strings.EqualFold
//     func strings.SplitAfter
//     func strings.HasSuffix
//     func strings.ToTitleSpecial
//     func strings.ToUpperSpecial
//     func strings.TrimFunc
//     func strings.Join
//     func strings.ContainsRune
//     func strings.ToLower
//     func strings.Map
//     func strings.ContainsAny
//     func strings.SplitAfterN
//     func strings.TrimLeft
//     func strings.TrimRight
//     func strings.ToLowerSpecial
//     func strings.Trim
//     func strings.FieldsFunc
//     func strings.IndexRune
//     func strings.Count
//     func strings.Split
//     func strings.Replace
//     func strings.TrimLeftFunc
//     func strings.LastIndex
//     func strings.ToTitle
//     func strings.Title
//     func strings.SplitN
//     func strings.Fields
//     func strings.LastIndexAny
//     func strings.Index
//     func strings.TrimRightFunc
//     func strings.IndexFunc
//     func strings.Repeat
//     type strings.Replacer
//     func strings.Contains
//     func strings.ToUpper
//     func strings.IndexAny

Funcs["/strings/Title"] = strings.Title
//# OLD <{sTitle}> 0
//# NEW <{sTitle}> 1
Funcs["/strings/SplitN"] = strings.SplitN
//# OLD <{sSplitN}> 0
//# NEW <{sSplitN}> 1
Funcs["/strings/Fields"] = strings.Fields
//# OLD <{sFields}> 0
//# NEW <{sFields}> 1
Funcs["/strings/LastIndexAny"] = strings.LastIndexAny
//# OLD <{sLastIndexAny}> 0
//# NEW <{sLastIndexAny}> 1
Funcs["/strings/Index"] = strings.Index
//# OLD <{sIndex}> 1
//# NEW <{sIndex}> 2
Funcs["/strings/TrimRightFunc"] = strings.TrimRightFunc
//# OLD <{sTrimRightFunc}> 0
//# NEW <{sTrimRightFunc}> 1
Funcs["/strings/IndexFunc"] = strings.IndexFunc
//# OLD <{sIndexFunc}> 0
//# NEW <{sIndexFunc}> 1
Funcs["/strings/Repeat"] = strings.Repeat
//# OLD <{sRepeat}> 0
//# NEW <{sRepeat}> 1
Types["/strings/Replacer"] = new(*strings.Replacer)
//# OLD <{sReplacer}> 0
//# NEW <{sReplacer}> 1
Funcs["/strings/Contains"] = strings.Contains
//# OLD <{sContains}> 0
//# NEW <{sContains}> 1
Funcs["/strings/ToUpper"] = strings.ToUpper
//# OLD <{sToUpper}> 0
//# NEW <{sToUpper}> 1
Funcs["/strings/IndexAny"] = strings.IndexAny
//# OLD <{sIndexAny}> 0
//# NEW <{sIndexAny}> 1
Funcs["/strings/HasPrefix"] = strings.HasPrefix
//# OLD <{sHasPrefix}> 0
//# NEW <{sHasPrefix}> 1
Funcs["/strings/TrimSpace"] = strings.TrimSpace
//# OLD <{sTrimSpace}> 0
//# NEW <{sTrimSpace}> 1
Funcs["/strings/NewReader"] = strings.NewReader
//# OLD <{sNewReader}> 0
//# NEW <{sNewReader}> 1
Types["/strings/Reader"] = new(*strings.Reader)
//# OLD <{sReader}> 0
//# NEW <{sReader}> 1
Funcs["/strings/NewReplacer"] = strings.NewReplacer
//# OLD <{sNewReplacer}> 0
//# NEW <{sNewReplacer}> 1
Funcs["/strings/LastIndexFunc"] = strings.LastIndexFunc
//# OLD <{sLastIndexFunc}> 0
//# NEW <{sLastIndexFunc}> 1
Funcs["/strings/EqualFold"] = strings.EqualFold
//# OLD <{sEqualFold}> 0
//# NEW <{sEqualFold}> 1
Funcs["/strings/SplitAfter"] = strings.SplitAfter
//# OLD <{sSplitAfter}> 0
//# NEW <{sSplitAfter}> 1
Funcs["/strings/HasSuffix"] = strings.HasSuffix
//# OLD <{sHasSuffix}> 0
//# NEW <{sHasSuffix}> 1
Funcs["/strings/ToTitleSpecial"] = strings.ToTitleSpecial
//# OLD <{sToTitleSpecial}> 0
//# NEW <{sToTitleSpecial}> 1
Funcs["/strings/ToUpperSpecial"] = strings.ToUpperSpecial
//# OLD <{sToUpperSpecial}> 0
//# NEW <{sToUpperSpecial}> 1
Funcs["/strings/TrimFunc"] = strings.TrimFunc
//# OLD <{sTrimFunc}> 0
//# NEW <{sTrimFunc}> 1
Funcs["/strings/Join"] = strings.Join
//# OLD <{sJoin}> 0
//# NEW <{sJoin}> 1
Funcs["/strings/ContainsRune"] = strings.ContainsRune
//# OLD <{sContainsRune}> 0
//# NEW <{sContainsRune}> 1
Funcs["/strings/ToLower"] = strings.ToLower
//# OLD <{sToLower}> 0
//# NEW <{sToLower}> 1
Funcs["/strings/Map"] = strings.Map
//# OLD <{sMap}> 0
//# NEW <{sMap}> 1
Funcs["/strings/ContainsAny"] = strings.ContainsAny
//# OLD <{sContainsAny}> 0
//# NEW <{sContainsAny}> 1
Funcs["/strings/SplitAfterN"] = strings.SplitAfterN
//# OLD <{sSplitAfterN}> 0
//# NEW <{sSplitAfterN}> 1
Funcs["/strings/TrimLeft"] = strings.TrimLeft
//# OLD <{sTrimLeft}> 0
//# NEW <{sTrimLeft}> 1
Funcs["/strings/TrimRight"] = strings.TrimRight
//# OLD <{sTrimRight}> 0
//# NEW <{sTrimRight}> 1
Funcs["/strings/ToLowerSpecial"] = strings.ToLowerSpecial
//# OLD <{sToLowerSpecial}> 0
//# NEW <{sToLowerSpecial}> 1
Funcs["/strings/Trim"] = strings.Trim
//# OLD <{sTrim}> 0
//# NEW <{sTrim}> 1
Funcs["/strings/FieldsFunc"] = strings.FieldsFunc
//# OLD <{sFieldsFunc}> 0
//# NEW <{sFieldsFunc}> 1
Funcs["/strings/IndexRune"] = strings.IndexRune
//# OLD <{sIndexRune}> 0
//# NEW <{sIndexRune}> 1
Funcs["/strings/Count"] = strings.Count
//# OLD <{sCount}> 0
//# NEW <{sCount}> 1
Funcs["/strings/Split"] = strings.Split
//# OLD <{sSplit}> 0
//# NEW <{sSplit}> 1
Funcs["/strings/Replace"] = strings.Replace
//# OLD <{sReplace}> 0
//# NEW <{sReplace}> 1
Funcs["/strings/TrimLeftFunc"] = strings.TrimLeftFunc
//# OLD <{sTrimLeftFunc}> 0
//# NEW <{sTrimLeftFunc}> 1
Funcs["/strings/LastIndex"] = strings.LastIndex
//# OLD <{sLastIndex}> 0
//# NEW <{sLastIndex}> 1
Funcs["/strings/ToTitle"] = strings.ToTitle
//# OLD <{sToTitle}> 0
//# NEW <{sToTitle}> 1


//     type sync.RWMutex
//     type sync.WaitGroup
//     type sync.Once
//     type sync.Locker
//     type sync.Mutex
//     type sync.Cond
//     func sync.NewCond

Types["/sync/Cond"] = new(*sync.Cond)
//# OLD <{sCond}> 0
//# NEW <{sCond}> 1
Funcs["/sync/NewCond"] = sync.NewCond
//# OLD <{sNewCond}> 0
//# NEW <{sNewCond}> 1
Types["/sync/RWMutex"] = new(*sync.RWMutex)
//# OLD <{sRWMutex}> 0
//# NEW <{sRWMutex}> 1
Types["/sync/WaitGroup"] = new(*sync.WaitGroup)
//# OLD <{sWaitGroup}> 0
//# NEW <{sWaitGroup}> 1
Types["/sync/Once"] = new(*sync.Once)
//# OLD <{sOnce}> 0
//# NEW <{sOnce}> 1
Types["/sync/Locker"] = new(*sync.Locker)
//# OLD <{sLocker}> 0
//# NEW <{sLocker}> 1
Types["/sync/Mutex"] = new(*sync.Mutex)
//# OLD <{sMutex}> 0
//# NEW <{sMutex}> 1


//     func sync/atomic.StorePointer
//     func sync/atomic.StoreUint64
//     func sync/atomic.AddUint64
//     func sync/atomic.StoreInt32
//     func sync/atomic.LoadUintptr
//     func sync/atomic.CompareAndSwapUint64
//     func sync/atomic.CompareAndSwapInt64
//     func sync/atomic.CompareAndSwapInt32
//     func sync/atomic.CompareAndSwapUintptr
//     func sync/atomic.LoadInt64
//     func sync/atomic.StoreUintptr
//     func sync/atomic.LoadPointer
//     func sync/atomic.LoadUint32
//     func sync/atomic.StoreInt64
//     func sync/atomic.CompareAndSwapPointer
//     func sync/atomic.LoadUint64
//     func sync/atomic.StoreUint32
//     func sync/atomic.CompareAndSwapUint32
//     func sync/atomic.AddUint32
//     func sync/atomic.LoadInt32
//     func sync/atomic.AddUintptr
//     func sync/atomic.AddInt64
//     func sync/atomic.AddInt32

Funcs["/sync/atomic/CompareAndSwapPointer"] = sync_atomic.CompareAndSwapPointer
//# OLD <{aCompareAndSwapPointer}> 0
//# NEW <{aCompareAndSwapPointer}> 1
Funcs["/sync/atomic/LoadUint64"] = sync_atomic.LoadUint64
//# OLD <{aLoadUint64}> 0
//# NEW <{aLoadUint64}> 1
Funcs["/sync/atomic/StoreUint32"] = sync_atomic.StoreUint32
//# OLD <{aStoreUint32}> 0
//# NEW <{aStoreUint32}> 1
Funcs["/sync/atomic/CompareAndSwapUint32"] = sync_atomic.CompareAndSwapUint32
//# OLD <{aCompareAndSwapUint32}> 0
//# NEW <{aCompareAndSwapUint32}> 1
Funcs["/sync/atomic/AddUint32"] = sync_atomic.AddUint32
//# OLD <{aAddUint32}> 0
//# NEW <{aAddUint32}> 1
Funcs["/sync/atomic/LoadInt32"] = sync_atomic.LoadInt32
//# OLD <{aLoadInt32}> 0
//# NEW <{aLoadInt32}> 1
Funcs["/sync/atomic/AddUintptr"] = sync_atomic.AddUintptr
//# OLD <{aAddUintptr}> 0
//# NEW <{aAddUintptr}> 1
Funcs["/sync/atomic/AddInt64"] = sync_atomic.AddInt64
//# OLD <{aAddInt64}> 0
//# NEW <{aAddInt64}> 1
Funcs["/sync/atomic/AddInt32"] = sync_atomic.AddInt32
//# OLD <{aAddInt32}> 0
//# NEW <{aAddInt32}> 1
Funcs["/sync/atomic/StorePointer"] = sync_atomic.StorePointer
//# OLD <{aStorePointer}> 0
//# NEW <{aStorePointer}> 1
Funcs["/sync/atomic/StoreUint64"] = sync_atomic.StoreUint64
//# OLD <{aStoreUint64}> 0
//# NEW <{aStoreUint64}> 1
Funcs["/sync/atomic/AddUint64"] = sync_atomic.AddUint64
//# OLD <{aAddUint64}> 0
//# NEW <{aAddUint64}> 1
Funcs["/sync/atomic/StoreInt32"] = sync_atomic.StoreInt32
//# OLD <{aStoreInt32}> 0
//# NEW <{aStoreInt32}> 1
Funcs["/sync/atomic/LoadUintptr"] = sync_atomic.LoadUintptr
//# OLD <{aLoadUintptr}> 0
//# NEW <{aLoadUintptr}> 1
Funcs["/sync/atomic/CompareAndSwapUint64"] = sync_atomic.CompareAndSwapUint64
//# OLD <{aCompareAndSwapUint64}> 0
//# NEW <{aCompareAndSwapUint64}> 1
Funcs["/sync/atomic/CompareAndSwapInt64"] = sync_atomic.CompareAndSwapInt64
//# OLD <{aCompareAndSwapInt64}> 0
//# NEW <{aCompareAndSwapInt64}> 1
Funcs["/sync/atomic/CompareAndSwapInt32"] = sync_atomic.CompareAndSwapInt32
//# OLD <{aCompareAndSwapInt32}> 0
//# NEW <{aCompareAndSwapInt32}> 1
Funcs["/sync/atomic/CompareAndSwapUintptr"] = sync_atomic.CompareAndSwapUintptr
//# OLD <{aCompareAndSwapUintptr}> 0
//# NEW <{aCompareAndSwapUintptr}> 1
Funcs["/sync/atomic/LoadInt64"] = sync_atomic.LoadInt64
//# OLD <{aLoadInt64}> 0
//# NEW <{aLoadInt64}> 1
Funcs["/sync/atomic/StoreUintptr"] = sync_atomic.StoreUintptr
//# OLD <{aStoreUintptr}> 0
//# NEW <{aStoreUintptr}> 1
Funcs["/sync/atomic/LoadPointer"] = sync_atomic.LoadPointer
//# OLD <{aLoadPointer}> 0
//# NEW <{aLoadPointer}> 1
Funcs["/sync/atomic/LoadUint32"] = sync_atomic.LoadUint32
//# OLD <{aLoadUint32}> 0
//# NEW <{aLoadUint32}> 1
Funcs["/sync/atomic/StoreInt64"] = sync_atomic.StoreInt64
//# OLD <{aStoreInt64}> 0
//# NEW <{aStoreInt64}> 1


//    const syscall.ERANGE
//    const syscall.IP_IPSEC_POLICY
//    const syscall.IFLA_OPERSTATE
//    const syscall.RTAX_MAX
//    const syscall.F_DUPFD
//    const syscall.BPF_TAX
//     func syscall.Listen
//    const syscall.SYS_SET_MEMPOLICY
//    const syscall.ETH_P_ATMFATE
//     func syscall.Mount
//    const syscall.SYS_ACCESS
//    const syscall.AF_UNSPEC
//    const syscall.SIGCLD
//    const syscall.IPPROTO_MTP
//    const syscall.SOCK_DCCP
//    const syscall.SYS_FSYNC
//    const syscall.MSG_WAITFORONE
//     func syscall.Munmap
//    const syscall.ARPHRD_IEEE802
//    const syscall.IP_TRANSPARENT
//    const syscall.IPV6_DROP_MEMBERSHIP
//    const syscall.BPF_K
//    const syscall.CS8
//    const syscall.MS_SYNC
//    const syscall.EFBIG
//    const syscall.MSG_DONTROUTE
//    const syscall.IP_RECVRETOPTS
//    const syscall.PACKET_LOOPBACK
//    const syscall.SIOCSIFNAME
//    const syscall.IP_PMTUDISC_DONT
//     func syscall.Sysinfo
//     func syscall.Setreuid
//    const syscall.SIOCSIFTXQLEN
//    const syscall.ARPHRD_IEEE802_TR
//    const syscall.SYS_SECURITY
//    const syscall.TCP_INFO
//     func syscall.Reboot
//     func syscall.Pread
//    const syscall.IPPROTO_IPIP
//    const syscall.E2BIG
//    const syscall.IPV6_MTU_DISCOVER
//    const syscall.S_IFBLK
//    const syscall.B57600
//     func syscall.PtracePeekData
//    const syscall.IFLA_MAP
//    const syscall.IFLA_BROADCAST
//    const syscall.IP_MTU_DISCOVER
//     func syscall.Mknodat
//    const syscall.SYS_SHMCTL
//    const syscall.PACKET_BROADCAST
//     type syscall.Iovec
//    const syscall.TCP_MD5SIG
//    const syscall.SYS_MMAP
//    const syscall.MAP_STACK
//    const syscall.MSG_RST
//    const syscall.NLMSG_HDRLEN
//    const syscall.TIOCSSOFTCAR
//     type syscall.RtNexthop
//     func syscall.Gettid
//    const syscall.XCASE
//    const syscall.SYS_GETCWD
//    const syscall.MNT_FORCE
//    const syscall.ECONNRESET
//    const syscall.SIOCADDMULTI
//    const syscall.F_OK
//     func syscall.Chroot
//    const syscall.TIOCINQ
//    const syscall.RTN_MULTICAST
//    const syscall.INPCK
//    const syscall.RTAX_RTO_MIN
//    const syscall.O_LARGEFILE
//    const syscall.MS_I_VERSION
//    const syscall.SIOCSIFADDR
//    const syscall.MNT_EXPIRE
//    const syscall.SYS_FANOTIFY_INIT
//    const syscall.TCP_CORK
//    const syscall.PR_FP_EXC_PRECISE
//    const syscall.NETLINK_NETFILTER
//    const syscall.RTNH_F_DEAD
//    const syscall.SYS_GETUID
//    const syscall.PTRACE_EVENT_FORK
//    const syscall.F_ULOCK
//    const syscall.SO_PASSSEC
//    const syscall.ETH_P_SCA
//    const syscall.SYS_IO_DESTROY
//    const syscall.PR_ENDIAN_PPC_LITTLE
//    const syscall.RTF_STATIC
//    const syscall.B1000000
//    const syscall.PACKET_MULTICAST
//    const syscall.TIOCMBIS
//     type syscall.Tms
//    const syscall.SizeofSockaddrInet4
//    const syscall.PR_FP_EXC_DISABLED
//    const syscall.EILSEQ
//    const syscall.RTPROT_BIRD
//    const syscall.SYS_SENDFILE
//    const syscall.IPPROTO_RSVP
//    const syscall.PR_GET_TIMERSLACK
//    const syscall.PACKET_OTHERHOST
//    const syscall.EADV
//    const syscall.LINUX_REBOOT_CMD_POWER_OFF
//    const syscall.VEOF
//    const syscall.PACKET_HOST
//     func syscall.StartProcess
//    const syscall.EIDRM
//    const syscall.TUNGETIFF
//    const syscall.O_RDONLY
//    const syscall.PR_MCE_KILL_LATE
//    const syscall.MAP_HUGETLB
//    const syscall.SYS_GETPGRP
//    const syscall.RUSAGE_CHILDREN
//    const syscall.SYS_GETPGID
//    const syscall.IPV6_2292RTHDR
//    const syscall.BPF_JEQ
//    const syscall.IPV6_JOIN_GROUP
//    const syscall.TUNSETDEBUG
//     type syscall.Msghdr
//    const syscall.SYS_VHANGUP
//    const syscall.SIGILL
//    const syscall.NLM_F_ATOMIC
//     func syscall.CloseOnExec
//    const syscall.EPOLLWRNORM
//    const syscall.O_ACCMODE
//    const syscall.SCM_TIMESTAMPING
//    const syscall.SYS_SCHED_GET_PRIORITY_MAX
//    const syscall.EPOLLET
//    const syscall.MAP_32BIT
//    const syscall.IPPROTO_UDP
//     func syscall.Umask
//    const syscall.RTF_WINDOW
//    const syscall.TUNSETIFF
//     func syscall.SetsockoptString
//     func syscall.PtraceSingleStep
//    const syscall.EWOULDBLOCK
//    const syscall.IGNBRK
//    const syscall.ARPHRD_SLIP
//    const syscall.IFF_TUN_EXCL
//    const syscall.EL3HLT
//    const syscall.F_DUPFD_CLOEXEC
//    const syscall.SYS_PERSONALITY
//    const syscall.RTAX_HOPLIMIT
//    const syscall.RT_TABLE_UNSPEC
//    const syscall.SIGTSTP
//     type syscall.RtGenmsg
//    const syscall.BPF_MUL
//    const syscall.VSTART
//     func syscall.Sendmsg
//    const syscall.IPV6_LEAVE_ANYCAST
//    const syscall.RTN_THROW
//    const syscall.PTRACE_DETACH
//    const syscall.PTRACE_O_TRACEVFORK
//     func syscall.SetsockoptIPMreq
//    const syscall.S_IRWXG
//    const syscall.SYS_MUNLOCKALL
//    const syscall.TIOCPKT_NOSTOP
//    const syscall.RTA_UNSPEC
//    const syscall.SYS_CHDIR
//    const syscall.MSG_PROXY
//    const syscall.SYS_MPROTECT
//     func syscall.Utimes
//    const syscall.SIOCGIFFLAGS
//    const syscall.AF_NETROM
//    const syscall.VSTOP
//     func syscall.Madvise
//    const syscall.PENDIN
//    const syscall.BPF_MISC
//    const syscall.TCP_KEEPCNT
//    const syscall.SIOCDEVPRIVATE
//    const syscall.EOPNOTSUPP
//    const syscall.SO_ATTACH_FILTER
//     func syscall.Setfsgid
//    const syscall.IPV6_HOPLIMIT
//    const syscall.ETH_P_DIAG
//    const syscall.BPF_W
//    const syscall.TIOCSERGSTRUCT
//    const syscall.RTA_SRC
//    const syscall.SizeofSockaddrAny
//    const syscall.NLMSG_NOOP
//     func syscall.Socket
//     func syscall.ParseSocketControlMessage
//    const syscall.NETLINK_GENERIC
//    const syscall.S_IWRITE
//    const syscall.IP_MSFILTER
//     func syscall.Utime
//    const syscall.EMEDIUMTYPE
//    const syscall.SO_DONTROUTE
//    const syscall.SOL_ICMPV6
//    const syscall.SYS_TEE
//     type syscall.Ustat_t
//    const syscall.RLIMIT_CPU
//    const syscall.EINVAL
//    const syscall.PR_UNALIGN_SIGBUS
//    const syscall.SIOCSIFMETRIC
//     func syscall.Syscall
//    const syscall.TIOCCONS
//    const syscall.ARPHRD_NONE
//    const syscall.SYS_UMASK
//     func syscall.Mlock
//    const syscall.ETH_P_PUP
//     func syscall.GetsockoptInt
//    const syscall.SYS_SETREGID
//    const syscall.ENOSTR
//     func syscall.Acct
//    const syscall.ENETDOWN
//    const syscall.SizeofSockFprog
//    const syscall.ELIBSCN
//    const syscall.SYS_GETRESGID
//    const syscall.MS_REC
//    const syscall.IPV6_RECVPKTINFO
//     type syscall.Sysinfo_t
//    const syscall.SYS_CREATE_MODULE
//    const syscall.SYS_PPOLL
//    const syscall.ETH_P_CUST
//     func syscall.SyncFileRange
//    const syscall.IFLA_PRIORITY
//    const syscall.IFF_NO_PI
//    const syscall.SYS_NANOSLEEP
//    const syscall.IN_MOVED_FROM
//    const syscall.RTM_F_CLONED
//    const syscall.S_IREAD
//     func syscall.BindToDevice
//    const syscall.ETH_P_TR_802_2
//    const syscall.IPV6_V6ONLY
//     func syscall.PtraceGetEventMsg
//    const syscall.PTRACE_PEEKUSR
//    const syscall.SYS_MOVE_PAGES
//    const syscall.PR_ENDIAN_LITTLE
//    const syscall.IN_MASK_ADD
//    const syscall.SYS_CAPSET
//    const syscall.ARPHRD_RAWHDLC
//    const syscall.PR_FP_EXC_OVF
//    const syscall.NLM_F_EXCL
//     type syscall.NetlinkRouteAttr
//    const syscall.SYS_RT_SIGRETURN
//    const syscall.SYS_SETUID
//    const syscall.SO_LINGER
//    const syscall.NLM_F_DUMP
//    const syscall.LOCK_SH
//    const syscall.ENAVAIL
//    const syscall.IPPROTO_TCP
//     func syscall.Getpgid
//    const syscall.PR_MCE_KILL_SET
//    const syscall.IN_CLASSA_NET
//     type syscall.Inet6Pktinfo
//     func syscall.Ustat
//    const syscall.ARPHRD_IEEE80211
//    const syscall.ETH_P_MPLS_UC
//    const syscall.PR_GET_PDEATHSIG
//    const syscall.ETOOMANYREFS
//    const syscall.RLIMIT_AS
//    const syscall.O_RDWR
//    const syscall.RTPROT_DNROUTED
//    const syscall.IFF_TUN
//    const syscall.ESOCKTNOSUPPORT
//    const syscall.OFDEL
//    const syscall.SYS_SCHED_GETAFFINITY
//    const syscall.BPF_RSH
//    const syscall.BRKINT
//    const syscall.SYS__SYSCTL
//    const syscall.TIOCPKT_IOCTL
//    const syscall.SYS_TRUNCATE
//    const syscall.MADV_HUGEPAGE
//    const syscall.BPF_LD
//    const syscall.MAP_NONBLOCK
//    const syscall.F_TEST
//     func syscall.PivotRoot
//    const syscall.VSUSP
//    const syscall.EMULTIHOP
//    const syscall.PACKET_DROP_MEMBERSHIP
//    const syscall.RTAX_FEATURE_SACK
//    const syscall.RLIMIT_NOFILE
//    const syscall.ETH_P_TEB
//    const syscall.ETH_P_LOOP
//    const syscall.SOMAXCONN
//     func syscall.Gettimeofday
//    const syscall.O_WRONLY
//    const syscall.DT_WHT
//    const syscall.TIOCNOTTY
//    const syscall.B1200
//     type syscall.Timeval
//    const syscall.PACKET_MR_PROMISC
//    const syscall.SYS_EPOLL_PWAIT
//    const syscall.BPF_MAJOR_VERSION
//    const syscall.EPOLL_CLOEXEC
//    const syscall.NLM_F_CREATE
//    const syscall.ETH_P_RARP
//    const syscall.BPF_MAXINSNS
//    const syscall.SIGPWR
//    const syscall.PTRACE_EVENT_VFORK_DONE
//    const syscall.B9600
//    const syscall.SYS_MREMAP
//    const syscall.SYS_STAT
//    const syscall.IFLA_IFALIAS
//     type syscall.Errno
//    const syscall.ERESTART
//     type syscall.Linger
//    const syscall.IPV6_RTHDR_TYPE_0
//    const syscall.SYS_GETXATTR
//    const syscall.IP_PMTUDISC_DO
//    const syscall.SizeofSockaddrNetlink
//    const syscall.EPERM
//    const syscall.EPOLLONESHOT
//     type syscall.SocketControlMessage
//    const syscall.SYS_NEWFSTATAT
//    const syscall.EACCES
//    const syscall.NLA_F_NESTED
//    const syscall.SYS_GETTIMEOFDAY
//    const syscall.IN_CLASSB_MAX
//    const syscall.IPV6_AUTHHDR
//    const syscall.RTN_MAX
//    const syscall.RTM_F_EQUALIZE
//    const syscall.AF_UNIX
//      var syscall.Stdout
//    const syscall.ARPHRD_CHAOS
//    const syscall.SYS_FLISTXATTR
//    const syscall.ARPHRD_EUI64
//    const syscall.SYS_USELIB
//    const syscall.SOL_ATM
//    const syscall.SIOCGIFNETMASK
//    const syscall.IPV6_PMTUDISC_WANT
//    const syscall.RTN_UNREACHABLE
//    const syscall.IP_PASSSEC
//    const syscall.SizeofRtGenmsg
//    const syscall.RTM_GETACTION
//    const syscall.O_ASYNC
//    const syscall.SO_RCVBUFFORCE
//    const syscall.BPF_TXA
//    const syscall.ETH_P_X25
//     func syscall.GetsockoptIPv6Mreq
//     type syscall.Timex
//    const syscall.SYS_GETPEERNAME
//    const syscall.SYS_CLOCK_SETTIME
//    const syscall.RT_TABLE_MAX
//    const syscall.IPV6_PMTUDISC_PROBE
//     func syscall.Pipe
//    const syscall.PR_GET_TSC
//    const syscall.IMAXBEL
//    const syscall.SYS_GET_THREAD_AREA
//     type syscall.InotifyEvent
//     type syscall.NlMsghdr
//    const syscall.TCP_KEEPINTVL
//    const syscall.MS_MGC_VAL
//     func syscall.PtracePokeData
//    const syscall.TUNSETGROUP
//     func syscall.Setresgid
//    const syscall.RTM_GETNEIGHTBL
//    const syscall.IN_DELETE
//    const syscall.PR_SET_SECCOMP
//    const syscall.RLIMIT_CORE
//    const syscall.ARPHRD_ASH
//    const syscall.CREAD
//    const syscall.SO_TYPE
//      var syscall.ForkLock
//    const syscall.SYS_PIVOT_ROOT
//    const syscall.SOCK_PACKET
//    const syscall.IFF_TAP
//    const syscall.ENOEXEC
//    const syscall.PTRACE_SETFPXREGS
//    const syscall.EBADE
//    const syscall.SIOCGIFINDEX
//    const syscall.IUTF8
//    const syscall.IGNCR
//    const syscall.CSTOPB
//    const syscall.SIOCADDRT
//    const syscall.RTAX_REORDERING
//    const syscall.MS_RELATIME
//    const syscall.SIGSEGV
//    const syscall.SYS_INOTIFY_INIT1
//     func syscall.Munlockall
//    const syscall.RTM_DELACTION
//    const syscall.RTM_BASE
//    const syscall.EUCLEAN
//    const syscall.ECHILD
//    const syscall.SO_RCVBUF
//    const syscall.IP_RF
//    const syscall.RTPROT_DHCP
//    const syscall.IN_ONLYDIR
//    const syscall.SYS_SETGID
//    const syscall.IN_CLASSA_MAX
//    const syscall.SizeofSockaddrInet6
//    const syscall.IFLA_LINKMODE
//    const syscall.IUCLC
//    const syscall.LINUX_REBOOT_CMD_SW_SUSPEND
//     func syscall.Ftruncate
//    const syscall.SYS_RESTART_SYSCALL
//    const syscall.IN_CLOEXEC
//     func syscall.UnixCredentials
//    const syscall.SYS_FCNTL
//    const syscall.SYS_REMOVEXATTR
//    const syscall.ETH_P_SLOW
//    const syscall.SIGUSR2
//    const syscall.TIOCSCTTY
//    const syscall.IFLA_MTU
//    const syscall.IN_CLASSA_HOST
//    const syscall.RTPROT_STATIC
//    const syscall.B300
//    const syscall.SYS_SETITIMER
//    const syscall.SYS_GETSOCKNAME
//    const syscall.SIGCONT
//    const syscall.ARPHRD_SKIP
//    const syscall.RTM_SETNEIGHTBL
//    const syscall.MS_SYNCHRONOUS
//    const syscall.RTF_MSS
//    const syscall.SYS_GETITIMER
//    const syscall.SYS_MQ_GETSETATTR
//    const syscall.PTRACE_POKETEXT
//    const syscall.RT_SCOPE_SITE
//    const syscall.S_ISGID
//    const syscall.IN_CLASSA_NSHIFT
//     func syscall.Link
//    const syscall.RTA_PRIORITY
//    const syscall.IP_MAX_MEMBERSHIPS
//    const syscall.B3500000
//    const syscall.IFF_DEBUG
//     func syscall.Chmod
//    const syscall.ECHO
//    const syscall.EOWNERDEAD
//     type syscall.WaitStatus
//    const syscall.TIOCM_SR
//    const syscall.SYS_GETEUID
//    const syscall.IFA_F_NODAD
//     func syscall.PtracePokeText
//    const syscall.SYS_OPENAT
//    const syscall.IPPROTO_COMP
//    const syscall.SYS_SEMCTL
//    const syscall.EBADRQC
//    const syscall.IPV6_MULTICAST_HOPS
//    const syscall.SYS_SIGALTSTACK
//    const syscall.SYS_GET_KERNEL_SYMS
//    const syscall.SIGXFSZ
//    const syscall.IPV6_2292DSTOPTS
//    const syscall.RT_CLASS_UNSPEC
//    const syscall.TIOCSERSETMULTI
//    const syscall.VINTR
//    const syscall.O_NONBLOCK
//    const syscall.PR_FP_EXC_INV
//    const syscall.SYS_SIGNALFD
//    const syscall.DT_DIR
//    const syscall.IN_MODIFY
//    const syscall.OLCUC
//    const syscall.SYS_GETPMSG
//    const syscall.SOL_SOCKET
//    const syscall.SIOCPROTOPRIVATE
//    const syscall.INLCR
//    const syscall.AF_DECnet
//    const syscall.S_IXGRP
//    const syscall.B460800
//    const syscall.RTM_NEWADDR
//     func syscall.Getsockname
//    const syscall.CS6
//    const syscall.SYS_PUTPMSG
//    const syscall.AF_IRDA
//    const syscall.LINUX_REBOOT_CMD_RESTART
//    const syscall.RTF_CACHE
//    const syscall.ECOMM
//     func syscall.SetsockoptInet4Addr
//    const syscall.SYS_USTAT
//    const syscall.SOL_X25
//    const syscall.TCP_SYNCNT
//     type syscall.IfInfomsg
//    const syscall.ENOTTY
//    const syscall.SYS_SETRESGID
//    const syscall.TIOCGWINSZ
//    const syscall.IPPROTO_PIM
//    const syscall.RTM_DELTCLASS
//    const syscall.PR_FP_EXC_SW_ENABLE
//    const syscall.EBADR
//    const syscall.SYS_IOPRIO_SET
//     type syscall.FdSet
//    const syscall.ESTALE
//    const syscall.SIGPOLL
//    const syscall.TIOCEXCL
//     func syscall.Setgroups
//    const syscall.MS_SILENT
//    const syscall.IP_MF
//    const syscall.B50
//    const syscall.PR_TASK_PERF_EVENTS_DISABLE
//    const syscall.BPF_MSH
//    const syscall.TCP_MAX_WINSHIFT
//    const syscall.WSTOPPED
//     func syscall.Getenv
//    const syscall.IPV6_UNICAST_HOPS
//     func syscall.ParseUnixRights
//    const syscall.IN_Q_OVERFLOW
//    const syscall.SYS_TUXCALL
//    const syscall.NETLINK_SCSITRANSPORT
//    const syscall.SYS_PRCTL
//    const syscall.PR_SET_PTRACER
//    const syscall.SIOCGSTAMPNS
//    const syscall.IP_BLOCK_SOURCE
//    const syscall.SYS_FANOTIFY_MARK
//    const syscall.ENETRESET
//    const syscall.EBADFD
//    const syscall.ENOSR
//    const syscall.RT_CLASS_DEFAULT
//    const syscall.SYS_MKDIRAT
//    const syscall.SYS_LGETXATTR
//    const syscall.SYS_SOCKETPAIR
//    const syscall.BPF_IMM
//     func syscall.PtraceCont
//    const syscall.RTN_BROADCAST
//    const syscall.SIGUSR1
//    const syscall.IP_PMTUDISC_WANT
//    const syscall.ELNRNG
//    const syscall.F_SETOWN
//    const syscall.SIOCGPGRP
//    const syscall.IPPROTO_IPV6
//    const syscall.EADDRINUSE
//    const syscall.SYS_GETRLIMIT
//    const syscall.PTRACE_SYSEMU_SINGLESTEP
//     func syscall.Unshare
//    const syscall.SIOCGIFADDR
//    const syscall.SYS_EXECVE
//    const syscall.O_NOFOLLOW
//    const syscall.PACKET_STATISTICS
//    const syscall.IP_DEFAULT_MULTICAST_LOOP
//    const syscall.IFA_CACHEINFO
//    const syscall.IP_DEFAULT_MULTICAST_TTL
//    const syscall.F_WRLCK
//    const syscall.RTM_NR_FAMILIES
//     func syscall.Futimesat
//    const syscall.RTA_METRICS
//    const syscall.IFLA_MAX
//    const syscall.IN_OPEN
//    const syscall.RTA_PREFSRC
//    const syscall.RTM_GETDCB
//    const syscall.LOCK_EX
//    const syscall.BPF_RET
//    const syscall.MSG_ERRQUEUE
//    const syscall.SYS_GETSID
//     func syscall.Setpgid
//     func syscall.EpollCreate
//    const syscall.RT_CLASS_MAX
//    const syscall.PTRACE_GET_THREAD_AREA
//     type syscall.RawSockaddrAny
//    const syscall.IN_ONESHOT
//    const syscall.IN_CLASSB_NSHIFT
//    const syscall.IP_RECVORIGDSTADDR
//    const syscall.RT_TABLE_LOCAL
//    const syscall.IFA_F_TENTATIVE
//     type syscall.NetlinkMessage
//    const syscall.RT_SCOPE_UNIVERSE
//    const syscall.ETH_P_FCOE
//    const syscall.RTN_UNICAST
//    const syscall.ELIBACC
//     func syscall.Pwrite
//    const syscall.F_GETLK
//    const syscall.SYS_PERF_EVENT_OPEN
//     func syscall.ParseDirent
//    const syscall.PTRACE_POKEUSR
//    const syscall.SYS_SEMTIMEDOP
//    const syscall.RTM_NEWTCLASS
//    const syscall.TIOCSLCKTRMIOS
//    const syscall.IPPROTO_DCCP
//    const syscall.SYS_UTIME
//    const syscall.IFLA_IFNAME
//    const syscall.SizeofIPMreq
//     func syscall.Settimeofday
//    const syscall.EUSERS
//    const syscall.RTPROT_RA
//     func syscall.EpollCtl
//    const syscall.PR_MCE_KILL_DEFAULT
//    const syscall.EREMCHG
//    const syscall.TIOCM_RI
//    const syscall.PACKET_FASTROUTE
//    const syscall.TIOCSBRK
//    const syscall.TIOCGICOUNT
//    const syscall.RTAX_INITRWND
//    const syscall.DT_BLK
//    const syscall.S_IFDIR
//    const syscall.ENOENT
//     func syscall.Readlink
//    const syscall.DT_UNKNOWN
//    const syscall.EINTR
//    const syscall.MS_ACTIVE
//    const syscall.TCP_QUICKACK
//    const syscall.SYS_INOTIFY_RM_WATCH
//    const syscall.WALL
//    const syscall.RT_TABLE_DEFAULT
//    const syscall.ETH_P_ALL
//    const syscall.MS_NOEXEC
//    const syscall.IPV6_MTU
//    const syscall.AF_LOCAL
//     func syscall.ForkExec
//    const syscall.NETLINK_ROUTE
//    const syscall.SHUT_RD
//    const syscall.RTCF_LOG
//    const syscall.ARPHRD_CISCO
//    const syscall.IP_PMTUDISC
//    const syscall.SYS_SHMGET
//    const syscall.IP_TTL
//    const syscall.IP_RECVTOS
//    const syscall.SIGIOT
//    const syscall.ARPHRD_EETHER
//    const syscall.SYS_BIND
//    const syscall.RTAX_SSTHRESH
//    const syscall.SYS_IO_CANCEL
//    const syscall.SizeofRtMsg
//    const syscall.SO_TIMESTAMPNS
//    const syscall.SYS_SELECT
//    const syscall.SIGTERM
//    const syscall.PR_SET_PDEATHSIG
//    const syscall.SO_PEERCRED
//    const syscall.SYS_FUTIMESAT
//    const syscall.RTPROT_ZEBRA
//      var syscall.Stderr
//     func syscall.Getpid
//    const syscall.EDOTDOT
//    const syscall.SIGSYS
//    const syscall.RTM_GETROUTE
//     func syscall.Mprotect
//    const syscall.TUNSETOFFLOAD
//    const syscall.IFF_RUNNING
//    const syscall.B921600
//    const syscall.ARPHRD_ATM
//    const syscall.MS_RMT_MASK
//    const syscall.ARPHRD_HWX25
//    const syscall.PR_TIMING_TIMESTAMP
//    const syscall.LINUX_REBOOT_MAGIC1
//    const syscall.B150
//     type syscall.RawSockaddrInet4
//    const syscall.SIGFPE
//    const syscall.ETH_P_MPLS_MC
//    const syscall.PR_SET_FPEMU
//    const syscall.NETLINK_AUDIT
//    const syscall.SO_PRIORITY
//    const syscall.F_UNLCK
//    const syscall.ARPHRD_FCAL
//    const syscall.TUNSETVNETHDRSZ
//    const syscall.TIOCGSERIAL
//    const syscall.SYS_LLISTXATTR
//    const syscall.IPPROTO_IP
//    const syscall.ECHRNG
//    const syscall.RUSAGE_THREAD
//    const syscall.IPPROTO_TP
//    const syscall.IN_EXCL_UNLINK
//    const syscall.PR_GET_TIMING
//    const syscall.SYS_FDATASYNC
//    const syscall.PTRACE_O_TRACEFORK
//    const syscall.SYS_GETEGID
//    const syscall.TIOCSPGRP
//    const syscall.MSG_FIN
//     func syscall.Times
//     type syscall.Credential
//    const syscall.ETH_P_LAT
//    const syscall.BPF_JMP
//    const syscall.IPPROTO_GRE
//    const syscall.AF_FILE
//    const syscall.IN_CLOSE_NOWRITE
//    const syscall.SYS_EVENTFD
//    const syscall.MS_POSIXACL
//    const syscall.AF_RDS
//    const syscall.SYS_RENAMEAT
//    const syscall.RTF_BROADCAST
//    const syscall.IFF_NOARP
//    const syscall.ARPHRD_DLCI
//    const syscall.RTCF_DOREDIRECT
//    const syscall.IP_PKTINFO
//    const syscall.SizeofRtNexthop
//    const syscall.B600
//    const syscall.PR_FP_EXC_DIV
//    const syscall.ETH_P_HDLC
//    const syscall.OFILL
//    const syscall.MS_ASYNC
//    const syscall.RTF_LINKRT
//    const syscall.NOFLSH
//    const syscall.EADDRNOTAVAIL
//     func syscall.Fchmodat
//    const syscall.TIOCSERGWILD
//    const syscall.TIOCPKT_STOP
//    const syscall.SYS_WAITID
//     func syscall.Symlink
//    const syscall.SYS_EPOLL_WAIT
//    const syscall.SYS_TIMERFD_SETTIME
//    const syscall.BPF_MEM
//    const syscall.SYS_MUNLOCK
//    const syscall.EPOLLHUP
//    const syscall.ETH_P_AX25
//    const syscall.O_CLOEXEC
//    const syscall.PROT_WRITE
//    const syscall.BPF_JA
//    const syscall.SYS_PIPE2
//    const syscall.MAP_EXECUTABLE
//    const syscall.SizeofCmsghdr
//     func syscall.EpollWait
//     type syscall.SockFprog
//    const syscall.ETH_P_IRDA
//    const syscall.PROT_GROWSUP
//    const syscall.IN_MOVED_TO
//    const syscall.PTRACE_GETREGS
//    const syscall.EBUSY
//    const syscall.SYS_GETDENTS
//    const syscall.F_GETOWN
//    const syscall.AF_TIPC
//    const syscall.ECANCELED
//    const syscall.B2500000
//    const syscall.RTM_GETNEIGH
//    const syscall.NLM_F_ROOT
//    const syscall.SIOCDIFADDR
//     func syscall.Setuid
//    const syscall.MNT_DETACH
//    const syscall.VKILL
//    const syscall.SIOCSIFBR
//    const syscall.TIOCM_CD
//    const syscall.RTM_NEWROUTE
//    const syscall.SO_BSDCOMPAT
//    const syscall.PTRACE_SET_THREAD_AREA
//    const syscall.SIOCGIFDSTADDR
//    const syscall.SYS_MSGGET
//    const syscall.IPV6_TCLASS
//    const syscall.SYS_LISTXATTR
//    const syscall.SYS_GETSOCKOPT
//    const syscall.AF_SNA
//    const syscall.IP_MULTICAST_TTL
//    const syscall.ETH_P_PPP_MP
//    const syscall.SYS_CLOCK_NANOSLEEP
//     func syscall.ParseUnixCredentials
//    const syscall.SOL_IRDA
//     type syscall.Cmsghdr
//    const syscall.SOCK_RAW
//    const syscall.AF_PPPOX
//    const syscall.SYS_RMDIR
//     func syscall.Mknod
//    const syscall.RTN_ANYCAST
//    const syscall.MADV_RANDOM
//    const syscall.TIOCGLCKTRMIOS
//    const syscall.RTA_GATEWAY
//    const syscall.SIGTRAP
//    const syscall.SizeofIfAddrmsg
//    const syscall.IP_RECVERR
//    const syscall.S_IWGRP
//    const syscall.ELIBEXEC
//    const syscall.IP_OPTIONS
//    const syscall.BPF_AND
//    const syscall.PTRACE_SETREGS
//    const syscall.RTAX_ADVMSS
//    const syscall.RLIMIT_STACK
//    const syscall.IP_RECVOPTS
//     func syscall.Write
//    const syscall.SYS_SHUTDOWN
//    const syscall.EXFULL
//    const syscall.B134
//     func syscall.SetsockoptIPv6Mreq
//    const syscall.ARPHRD_TUNNEL6
//    const syscall.RTF_NAT
//     type syscall.SockaddrUnix
//    const syscall.IPV6_2292HOPOPTS
//    const syscall.TUNATTACHFILTER
//    const syscall.SOCK_RDM
//     type syscall.SockaddrInet6
//    const syscall.ARPHRD_FDDI
//    const syscall.ETIMEDOUT
//    const syscall.PR_MCE_KILL_GET
//    const syscall.SYS_SOCKET
//    const syscall.SYS_DUP2
//    const syscall.EPOLLERR
//    const syscall.AF_IPX
//    const syscall.EPOLL_CTL_MOD
//    const syscall.ETH_P_TRAILER
//    const syscall.MSG_EOR
//    const syscall.SYS_IOPERM
//    const syscall.SYS_FLOCK
//    const syscall.SIOCGIFMETRIC
//    const syscall.IPV6_RECVERR
//    const syscall.WNOTHREAD
//    const syscall.ENOMSG
//    const syscall.IP_ADD_SOURCE_MEMBERSHIP
//    const syscall.SYS_PREAD64
//    const syscall.SizeofNlMsghdr
//    const syscall.ENOBUFS
//    const syscall.PR_FPEMU_NOPRINT
//    const syscall.PTRACE_O_TRACEEXIT
//     func syscall.Tgkill
//    const syscall.SYS_FORK
//    const syscall.EDEADLK
//    const syscall.SYS_CHROOT
//    const syscall.ENOSYS
//    const syscall.S_IFCHR
//     type syscall.Signal
//     func syscall.LsfSocket
//    const syscall.SYS_GETPID
//    const syscall.IPPROTO_ICMP
//    const syscall.MAP_FILE
//    const syscall.RTM_NEWADDRLABEL
//    const syscall.IN_MOVE_SELF
//    const syscall.TIOCMGET
//    const syscall.IP_DROP_MEMBERSHIP
//    const syscall.SYS_DELETE_MODULE
//    const syscall.RTPROT_NTK
//    const syscall.RTM_F_PREFIX
//    const syscall.TUNSETTXFILTER
//    const syscall.RTPROT_XORP
//    const syscall.S_IROTH
//    const syscall.SIGSTOP
//    const syscall.IFF_UP
//    const syscall.RTF_INTERFACE
//    const syscall.SYS_TIMER_GETOVERRUN
//    const syscall.O_TRUNC
//     type syscall.Dirent
//    const syscall.ETH_P_ARP
//    const syscall.SYS_FGETXATTR
//    const syscall.VEOL2
//    const syscall.B200
//     func syscall.Setfsuid
//    const syscall.IPV6_LEAVE_GROUP
//    const syscall.VWERASE
//    const syscall.TIOCGDEV
//    const syscall.MS_BIND
//     func syscall.Splice
//    const syscall.SYS_IO_GETEVENTS
//    const syscall.IPPROTO_FRAGMENT
//    const syscall.RTNH_F_ONLINK
//     func syscall.SetLsfPromisc
//    const syscall.RTAX_FEATURE_ECN
//    const syscall.IFLA_MASTER
//    const syscall.BPF_STX
//    const syscall.EKEYREVOKED
//    const syscall.RTM_GETANYCAST
//    const syscall.ARPHRD_SLIP6
//    const syscall.RTM_NEWNDUSEROPT
//    const syscall.TCP_WINDOW_CLAMP
//    const syscall.IPPROTO_ROUTING
//    const syscall.EAGAIN
//    const syscall.ETH_P_PAUSE
//    const syscall.MS_RDONLY
//    const syscall.RTM_NR_MSGTYPES
//    const syscall.PR_SET_ENDIAN
//     func syscall.Geteuid
//    const syscall.PR_TASK_PERF_EVENTS_ENABLE
//    const syscall.VERASE
//    const syscall.F_GETLEASE
//    const syscall.PTRACE_PEEKTEXT
//    const syscall.TIOCGPGRP
//    const syscall.NLMSG_DONE
//    const syscall.SYS_SCHED_SETSCHEDULER
//    const syscall.SYS_DUP3
//    const syscall.PTRACE_O_TRACESYSGOOD
//    const syscall.SYS_TIMER_DELETE
//    const syscall.SIGTTOU
//    const syscall.SYS_SPLICE
//    const syscall.IP_FREEBIND
//    const syscall.MCL_CURRENT
//     func syscall.Unlinkat
//     type syscall.Utsname
//    const syscall.PARMRK
//    const syscall.SIOCSARP
//    const syscall.AF_BLUETOOTH
//    const syscall.ETXTBSY
//    const syscall.SYS_CONNECT
//    const syscall.PR_FP_EXC_NONRECOV
//    const syscall.SYS_KEYCTL
//    const syscall.O_EXCL
//    const syscall.NETLINK_KOBJECT_UEVENT
//    const syscall.O_CREAT
//    const syscall.PR_SET_UNALIGN
//     func syscall.Setdomainname
//    const syscall.SIOCGIFCONF
//    const syscall.MADV_MERGEABLE
//    const syscall.VQUIT
//    const syscall.WNOWAIT
//    const syscall.SO_ERROR
//    const syscall.IP_TOS
//    const syscall.ETH_P_IEEEPUP
//    const syscall.RTF_NOFORWARD
//    const syscall.F_SETSIG
//     func syscall.Getrusage
//    const syscall.SYS_LOOKUP_DCOOKIE
//    const syscall.SOL_IP
//    const syscall.ARPHRD_TUNNEL
//    const syscall.ETH_P_PHONET
//    const syscall.SYS_REQUEST_KEY
//     func syscall.PtraceSetRegs
//    const syscall.SOL_IPV6
//    const syscall.RTAX_CWND
//    const syscall.PR_TSC_SIGSEGV
//    const syscall.SYS_RT_SIGTIMEDWAIT
//    const syscall.SYS_RECVMMSG
//    const syscall.TCP_MAXWIN
//    const syscall.SYS_CHMOD
//    const syscall.ETH_P_IPV6
//    const syscall.IFF_VNET_HDR
//    const syscall.IFLA_COST
//    const syscall.TIOCPKT_FLUSHWRITE
//    const syscall.ECHOPRT
//    const syscall.SYS_TKILL
//    const syscall.PTRACE_SINGLEBLOCK
//    const syscall.SYS_EXIT_GROUP
//    const syscall.MS_NODEV
//    const syscall.RTF_XRESOLVE
//     func syscall.Fchmod
//    const syscall.TUNSETPERSIST
//    const syscall.PR_SET_SECUREBITS
//    const syscall.BPF_ABS
//    const syscall.RTAX_WINDOW
//    const syscall.SYS_MSGCTL
//    const syscall.BPF_ALU
//    const syscall.ETH_P_PAE
//    const syscall.SYS_SYSLOG
//    const syscall.SIGINT
//    const syscall.MS_NOUSER
//    const syscall.PR_GET_DUMPABLE
//    const syscall.SYS_MKDIR
//    const syscall.SYS_LISTEN
//    const syscall.PTRACE_ATTACH
//    const syscall.ARPHRD_ARCNET
//    const syscall.BPF_DIV
//    const syscall.RTAX_RTTVAR
//    const syscall.MADV_DONTFORK
//    const syscall.RTM_DELNEIGH
//    const syscall.ARPHRD_FCPP
//    const syscall.SIOCGIFBR
//    const syscall.LOCK_NB
//    const syscall.SIOCSIFBRDADDR
//    const syscall.AF_NETLINK
//    const syscall.RTM_DELRULE
//    const syscall.SYS_SYSINFO
//    const syscall.PR_ENDIAN_BIG
//    const syscall.ECHOKE
//    const syscall.DT_LNK
//    const syscall.AF_ALG
//    const syscall.WEXITED
//    const syscall.F_SETLKW
//    const syscall.ARPHRD_IEEE80211_PRISM
//     func syscall.Sync
//    const syscall.SIGHUP
//    const syscall.RT_SCOPE_HOST
//    const syscall.SYS_MQ_OPEN
//     type syscall.Stat_t
//    const syscall.IFLA_ADDRESS
//    const syscall.MSG_CONFIRM
//     func syscall.TimevalToNsec
//    const syscall.ARPHRD_HIPPI
//    const syscall.RTM_NEWACTION
//    const syscall.SYS_ADD_KEY
//    const syscall.EPOLL_CTL_DEL
//    const syscall.ETH_P_IEEEPUPAT
//    const syscall.SizeofSockaddrUnix
//    const syscall.IP_ORIGDSTADDR
//    const syscall.SYS_EXIT
//    const syscall.SYS_FACCESSAT
//     type syscall.PtraceRegs
//    const syscall.F_GETSIG
//     type syscall.EpollEvent
//    const syscall.S_IXUSR
//    const syscall.EBADSLT
//     func syscall.Futimes
//    const syscall.SYS_SCHED_GET_PRIORITY_MIN
//    const syscall.SYS_SETGROUPS
//    const syscall.SCM_TIMESTAMPNS
//    const syscall.MAP_LOCKED
//    const syscall.AF_AX25
//    const syscall.IFF_ONE_QUEUE
//    const syscall.B4800
//    const syscall.ARPHRD_LAPB
//     func syscall.Socketpair
//     func syscall.Getuid
//    const syscall.AF_ATMPVC
//    const syscall.ETH_P_PUPAT
//    const syscall.TCSETS
//    const syscall.IPPROTO_ICMPV6
//     func syscall.Time
//    const syscall.MS_DIRSYNC
//    const syscall.IP_ADD_MEMBERSHIP
//    const syscall.SYS_MOUNT
//    const syscall.NAME_MAX
//     func syscall.DetachLsf
//     func syscall.Getcwd
//    const syscall.MCL_FUTURE
//    const syscall.RT_SCOPE_LINK
//    const syscall.EPOLL_CTL_ADD
//    const syscall.ETH_P_LOCALTALK
//     func syscall.Truncate
//    const syscall.MADV_NORMAL
//    const syscall.SYS_UNSHARE
//    const syscall.S_IWUSR
//    const syscall.SYS_BRK
//    const syscall.RTA_IIF
//    const syscall.B4000000
//    const syscall.IPV6_RTHDR_LOOSE
//    const syscall.B230400
//    const syscall.SizeofInet4Pktinfo
//    const syscall.WNOHANG
//    const syscall.MADV_UNMERGEABLE
//    const syscall.F_TLOCK
//    const syscall.RTF_DYNAMIC
//    const syscall.SYS_GETPRIORITY
//    const syscall.ETH_P_ATALK
//    const syscall.IFA_ANYCAST
//    const syscall.IN_ACCESS
//    const syscall.RT_SCOPE_NOWHERE
//    const syscall.ETH_P_IEEE802154
//    const syscall.SizeofIfInfomsg
//    const syscall.RTA_FLOW
//    const syscall.EBADMSG
//    const syscall.TIOCPKT
//    const syscall.IPV6_RTHDRDSTOPTS
//    const syscall.RTM_NEWTFILTER
//    const syscall.ETH_P_DNA_DL
//    const syscall.SYS_WAIT4
//    const syscall.SYS_LCHOWN
//    const syscall.SYS_MQ_NOTIFY
//    const syscall.ARPHRD_IEEE80211_RADIOTAP
//    const syscall.ICRNL
//    const syscall.RTM_GETTFILTER
//    const syscall.TIOCSRS485
//    const syscall.RTM_DELADDR
//    const syscall.S_IFMT
//    const syscall.IFA_F_OPTIMISTIC
//    const syscall.PR_GET_SECUREBITS
//    const syscall.ARPHRD_INFINIBAND
//    const syscall.TIOCM_CAR
//    const syscall.SO_PEERSEC
//    const syscall.ENAMETOOLONG
//     type syscall.Utimbuf
//     func syscall.Unmount
//    const syscall.WUNTRACED
//    const syscall.SYS_QUOTACTL
//    const syscall.IN_CLASSB_NET
//    const syscall.O_NDELAY
//    const syscall.SIOCGIFPFLAGS
//    const syscall.SIGKILL
//    const syscall.ETH_P_DEC
//    const syscall.SYS_LSETXATTR
//    const syscall.IXON
//    const syscall.FLUSHO
//     func syscall.Renameat
//    const syscall.IFLA_QDISC
//    const syscall.PTRACE_SYSEMU
//    const syscall.AF_IEEE802154
//    const syscall.BPF_JSET
//    const syscall.SizeofLinger
//    const syscall.ELOOP
//    const syscall.SIGSTKFLT
//    const syscall.SYS_QUERY_MODULE
//    const syscall.PACKET_ADD_MEMBERSHIP
//    const syscall.IN_ATTRIB
//    const syscall.NLM_F_ECHO
//    const syscall.SYS_TIME
//    const syscall.AF_ROSE
//     type syscall.Rusage
//    const syscall.MS_KERNMOUNT
//    const syscall.SYS_READLINKAT
//    const syscall.SYS_INOTIFY_ADD_WATCH
//    const syscall.SizeofInet6Pktinfo
//    const syscall.EBFONT
//    const syscall.ARPHRD_PIMREG
//    const syscall.SO_TIMESTAMP
//    const syscall.EL3RST
//    const syscall.IPV6_ADDRFORM
//    const syscall.SOCK_SEQPACKET
//    const syscall.RTAX_RTT
//    const syscall.SOL_AAL
//    const syscall.TIOCSWINSZ
//    const syscall.IPV6_RECVRTHDR
//    const syscall.PR_GET_FPEXC
//    const syscall.O_DIRECT
//    const syscall.BPF_IND
//    const syscall.IN_DELETE_SELF
//    const syscall.PR_MCE_KILL
//    const syscall.MAP_ANON
//    const syscall.SYS_IOPL
//    const syscall.SIOCSIFSLAVE
//    const syscall.ARPHRD_METRICOM
//     type syscall.IPv6Mreq
//    const syscall.SYS_MBIND
//    const syscall.ETH_P_AOE
//    const syscall.SO_PASSCRED
//    const syscall.SizeofIPv6Mreq
//    const syscall.MAP_SHARED
//    const syscall.ENOMEM
//    const syscall.EUNATCH
//    const syscall.IPV6_MULTICAST_IF
//     func syscall.Dup
//    const syscall.SYS_INOTIFY_INIT
//    const syscall.SYS_FALLOCATE
//    const syscall.ECHOE
//    const syscall.AF_LLC
//    const syscall.IN_DONT_FOLLOW
//     type syscall.RawSockaddr
//    const syscall.IP_MULTICAST_LOOP
//    const syscall.SO_DETACH_FILTER
//    const syscall.B1500000
//    const syscall.IPV6_RTHDR
//     type syscall.ProcAttr
//     func syscall.Getpeername
//    const syscall.TIOCPKT_DOSTOP
//    const syscall.SYS_RT_SIGSUSPEND
//    const syscall.PR_GET_FPEMU
//    const syscall.SO_OOBINLINE
//    const syscall.IPV6_RXHOPOPTS
//    const syscall.NETLINK_INET_DIAG
//    const syscall.PTRACE_CONT
//    const syscall.SYS_PREADV
//    const syscall.S_IFREG
//    const syscall.RTM_SETDCB
//    const syscall.SYS_MSGRCV
//    const syscall.MAP_PRIVATE
//    const syscall.SO_SECURITY_ENCRYPTION_NETWORK
//    const syscall.ARPHRD_PRONET
//    const syscall.PTRACE_EVENT_EXIT
//    const syscall.TIOCPKT_DATA
//    const syscall.SYS_WRITE
//    const syscall.EOVERFLOW
//    const syscall.MAP_FIXED
//    const syscall.S_IRWXO
//     func syscall.Fstatfs
//    const syscall.ENOANO
//    const syscall.EPOLLRDNORM
//    const syscall.SIGTTIN
//    const syscall.NETLINK_SELINUX
//    const syscall.ESHUTDOWN
//    const syscall.ETH_P_802_3
//    const syscall.RTM_F_NOTIFY
//    const syscall.ESPIPE
//     func syscall.CmsgSpace
//    const syscall.ETH_P_SNAP
//    const syscall.ENOTNAM
//    const syscall.EMFILE
//    const syscall.TIOCM_CTS
//    const syscall.ETH_P_TIPC
//     func syscall.GetsockoptIPMreqn
//    const syscall.SYS_STATFS
//    const syscall.SYS_EPOLL_CREATE1
//    const syscall.LINUX_REBOOT_CMD_RESTART2
//    const syscall.TIOCOUTQ
//    const syscall.IPPROTO_SCTP
//    const syscall.DT_REG
//    const syscall.RTF_FLOW
//    const syscall.NETLINK_BROADCAST_ERROR
//    const syscall.RTN_NAT
//    const syscall.SYS_ACCT
//     func syscall.Chown
//    const syscall.AF_RXRPC
//    const syscall.SYS_SENDMSG
//    const syscall.SOCK_NONBLOCK
//    const syscall.IFLA_UNSPEC
//    const syscall.IPPROTO_ESP
//    const syscall.ETH_P_PPP_SES
//    const syscall.SizeofSockFilter
//    const syscall.ETH_P_FIP
//    const syscall.ARPHRD_X25
//    const syscall.AF_APPLETALK
//    const syscall.TCGETS
//    const syscall.RTF_LOCAL
//    const syscall.RTNH_ALIGNTO
//    const syscall.SYS_SETHOSTNAME
//    const syscall.SYS_SEMOP
//    const syscall.PTRACE_PEEKDATA
//    const syscall.SIOCSIFMEM
//     func syscall.ParseNetlinkRouteAttr
//    const syscall.IPV6_2292HOPLIMIT
//    const syscall.EL2HLT
//    const syscall.SIGABRT
//    const syscall.NETLINK_FIREWALL
//    const syscall.AF_CAN
//    const syscall.S_ISUID
//     type syscall.IPMreqn
//    const syscall.SYS_ALARM
//    const syscall.ENFILE
//     func syscall.Sethostname
//    const syscall.SOL_RAW
//    const syscall.RTM_NEWQDISC
//    const syscall.RTM_MAX
//    const syscall.SYS_MKNODAT
//    const syscall.IPV6_RTHDR_STRICT
//    const syscall.RTPROT_GATED
//     func syscall.Setresuid
//    const syscall.B1800
//    const syscall.SYS_PAUSE
//     func syscall.PtraceDetach
//    const syscall.RTAX_FEATURES
//    const syscall.SYS_READ
//    const syscall.SYS_SCHED_YIELD
//    const syscall.RTA_CACHEINFO
//    const syscall.IFF_DYNAMIC
//    const syscall.RTAX_MTU
//    const syscall.ImplementsGetwd
//    const syscall.PR_SET_TSC
//     func syscall.StringByteSlice
//    const syscall.SYS_KILL
//    const syscall.TIOCSERGETLSR
//    const syscall.TCP_CONGESTION
//     func syscall.Lchown
//    const syscall.SIOCSIFENCAP
//    const syscall.ETH_P_WAN_PPP
//    const syscall.TIOCMSET
//    const syscall.NETLINK_ISCSI
//    const syscall.SizeofRtAttr
//     func syscall.Sendfile
//    const syscall.F_NOTIFY
//    const syscall.RT_TABLE_COMPAT
//    const syscall.MAP_ANONYMOUS
//    const syscall.NETLINK_DROP_MEMBERSHIP
//    const syscall.PTRACE_SETFPREGS
//    const syscall.SYS_GETPPID
//    const syscall.SIGIO
//    const syscall.SYS_MADVISE
//    const syscall.WORDSIZE
//    const syscall.RLIMIT_DATA
//    const syscall.S_IRGRP
//    const syscall.F_EXLCK
//     func syscall.NsecToTimeval
//     func syscall.Mkdir
//    const syscall.BPF_B
//     func syscall.Close
//    const syscall.RTF_ADDRCLASSMASK
//    const syscall.ONOCR
//     func syscall.Statfs
//    const syscall.IFLA_PROTINFO
//    const syscall.SYS_IO_SETUP
//     func syscall.PtraceSetOptions
//     func syscall.Fdatasync
//    const syscall.TIOCPKT_START
//     func syscall.SetsockoptLinger
//    const syscall.VLNEXT
//    const syscall.IFA_F_TEMPORARY
//    const syscall.F_LOCK
//    const syscall.B19200
//     func syscall.StringBytePtr
//    const syscall.BPF_X
//    const syscall.RTM_GETADDR
//    const syscall.EPIPE
//    const syscall.ARPHRD_IPGRE
//    const syscall.ARPHRD_AX25
//    const syscall.SO_DOMAIN
//    const syscall.MSG_TRUNC
//    const syscall.SYS_MQ_TIMEDSEND
//    const syscall.PTRACE_GETREGSET
//    const syscall.IFF_ALLMULTI
//    const syscall.AF_PHONET
//    const syscall.RTPROT_UNSPEC
//    const syscall.SYS_MINCORE
//     func syscall.Getpagesize
//    const syscall.SIOCSIFPFLAGS
//    const syscall.O_NOATIME
//    const syscall.IPPROTO_AH
//    const syscall.ARPHRD_BIF
//    const syscall.IPV6_PKTINFO
//    const syscall.PTRACE_ARCH_PRCTL
//    const syscall.ARPHRD_ROSE
//    const syscall.SYS_PWRITEV
//    const syscall.RTF_NOPMTUDISC
//     func syscall.InotifyInit
//    const syscall.F_RDLCK
//    const syscall.IPV6_2292PKTOPTIONS
//    const syscall.IGNPAR
//    const syscall.B576000
//    const syscall.MAP_POPULATE
//    const syscall.PR_GET_SECCOMP
//    const syscall.ARPHRD_IPDDP
//    const syscall.SYS_ADJTIMEX
//    const syscall.SIOCGIFMTU
//    const syscall.S_IXOTH
//    const syscall.SIOCSIFMTU
//    const syscall.SO_TIMESTAMPING
//    const syscall.AF_SECURITY
//     func syscall.Mmap
//    const syscall.SYS_AFS_SYSCALL
//    const syscall.TIOCLINUX
//    const syscall.PR_GET_ENDIAN
//     type syscall.SockaddrNetlink
//    const syscall.ECHONL
//    const syscall.SYS_EPOLL_CTL_OLD
//    const syscall.TIOCM_DSR
//    const syscall.S_IRWXU
//    const syscall.SYS_ACCEPT4
//    const syscall.ARPHRD_IEEE802154
//    const syscall.SO_RXQ_OVFL
//    const syscall.TIOCSERSWILD
//    const syscall.PTRACE_TRACEME
//    const syscall.SYS_SET_ROBUST_LIST
//    const syscall.PR_GET_NAME
//    const syscall.IPPROTO_RAW
//    const syscall.SYS_RT_SIGQUEUEINFO
//     type syscall.Ucred
//    const syscall.TUNGETVNETHDRSZ
//    const syscall.TIOCCBRK
//    const syscall.SYS_LREMOVEXATTR
//    const syscall.TIOCNXCL
//    const syscall.SIOCGIFNAME
//    const syscall.LINUX_REBOOT_MAGIC2
//    const syscall.PR_SET_NAME
//    const syscall.SYS_SYMLINKAT
//     func syscall.Setgid
//    const syscall.SO_BINDTODEVICE
//    const syscall.SYS_SETXATTR
//    const syscall.WCONTINUED
//    const syscall.SYS_READLINK
//    const syscall.TUNSETLINK
//    const syscall.SIOCADDDLCI
//    const syscall.ARPHRD_LOCALTLK
//    const syscall.SIOCSPGRP
//    const syscall.TUNSETOWNER
//    const syscall.PR_MCE_KILL_CLEAR
//    const syscall.ETH_P_AARP
//    const syscall.EXDEV
//    const syscall.TIOCSETD
//    const syscall.NETLINK_ECRYPTFS
//    const syscall.ARPHRD_APPLETLK
//    const syscall.EROFS
//    const syscall.SYS_FCHMODAT
//    const syscall.PR_UNALIGN_NOPRINT
//    const syscall.IPPROTO_HOPOPTS
//    const syscall.ARPHRD_CSLIP
//    const syscall.ETIME
//    const syscall.SIOCDELMULTI
//    const syscall.SYS_FSTATFS
//    const syscall.S_IEXEC
//    const syscall.PR_SET_DUMPABLE
//    const syscall.SYS_NFSSERVCTL
//    const syscall.SYS_MIGRATE_PAGES
//    const syscall.B500000
//    const syscall.SYS_MLOCKALL
//    const syscall.SYS_VSERVER
//    const syscall.EPOLLRDHUP
//    const syscall.IFF_AUTOMEDIA
//    const syscall.EKEYREJECTED
//    const syscall.EKEYEXPIRED
//    const syscall.SYS_FCHOWNAT
//    const syscall.B115200
//    const syscall.PTRACE_SYSCALL
//    const syscall.MSG_MORE
//    const syscall.SIOCSIFHWADDR
//    const syscall.ECHOK
//    const syscall.IPPROTO_PUP
//    const syscall.SOCK_STREAM
//    const syscall.IPV6_CHECKSUM
//    const syscall.SYS_SET_THREAD_AREA
//    const syscall.MSG_DONTWAIT
//    const syscall.NLM_F_MATCH
//     func syscall.Recvfrom
//    const syscall.VMIN
//    const syscall.MAP_NORESERVE
//    const syscall.RTF_MULTICAST
//    const syscall.SYS_CHOWN
//    const syscall.SYS_UNLINKAT
//    const syscall.SYS_MKNOD
//    const syscall.IN_NONBLOCK
//    const syscall.SYS_SETFSUID
//    const syscall.SOL_PACKET
//    const syscall.ENOMEDIUM
//     func syscall.SetNonblock
//    const syscall.SIOCGIFENCAP
//    const syscall.ETH_P_MOBITEX
//     func syscall.Select
//    const syscall.SO_SECURITY_AUTHENTICATION
//    const syscall.IFF_BROADCAST
//    const syscall.SOL_TCP
//     func syscall.PtraceAttach
//    const syscall.EPROTO
//    const syscall.EDOM
//    const syscall.SYS_GETGID
//    const syscall.IFLA_TXQLEN
//     type syscall.Termios
//    const syscall.ENOLINK
//    const syscall.SO_NO_CHECK
//    const syscall.ETH_P_EDSA
//    const syscall.ENOTSUP
//    const syscall.ESRCH
//     func syscall.Ioperm
//    const syscall.MADV_HWPOISON
//    const syscall.B3000000
//    const syscall.ONLCR
//    const syscall.RTM_GETLINK
//    const syscall.PTRACE_EVENT_CLONE
//    const syscall.RT_TABLE_MAIN
//    const syscall.RTPROT_KERNEL
//    const syscall.SYS_SYNC_FILE_RANGE
//    const syscall.RTF_ALLONLINK
//    const syscall.AF_ISDN
//     func syscall.Unlink
//     func syscall.Dup2
//    const syscall.BPF_LSH
//    const syscall.SYS_SETRESUID
//    const syscall.ETH_P_PPP_DISC
//    const syscall.SIOCGARP
//    const syscall.ARPHRD_FCPL
//    const syscall.SYS_OPEN
//    const syscall.IPV6_PMTUDISC_DO
//    const syscall.SO_PEERNAME
//    const syscall.IP_MSS
//    const syscall.RTF_THROW
//    const syscall.IPPROTO_IGMP
//     func syscall.Seek
//    const syscall.MS_INVALIDATE
//    const syscall.IXANY
//    const syscall.BPF_ST
//    const syscall.RTA_MAX
//    const syscall.SO_SNDTIMEO
//    const syscall.IP_ROUTER_ALERT
//    const syscall.ONLRET
//     func syscall.GetsockoptInet4Addr
//    const syscall.ARPHRD_ECONET
//    const syscall.SYS_SENDTO
//    const syscall.AF_ASH
//     func syscall.Pause
//     func syscall.Setregid
//    const syscall.SYS_FADVISE64
//    const syscall.SizeofInotifyEvent
//    const syscall.SIGALRM
//    const syscall.NLMSG_MIN_TYPE
//    const syscall.TIOCGETD
//    const syscall.ERFKILL
//     type syscall.SockaddrInet4
//    const syscall.TIOCSTI
//    const syscall.MS_NOATIME
//    const syscall.PR_FPEMU_SIGFPE
//     type syscall.NetlinkRouteRequest
//    const syscall.PTRACE_SETOPTIONS
//    const syscall.ENOTUNIQ
//    const syscall.TCP_MD5SIG_MAXKEYLEN
//    const syscall.EL2NSYNC
//    const syscall.RTAX_UNSPEC
//    const syscall.ETH_P_CAIF
//     func syscall.Getgroups
//    const syscall.PR_FP_EXC_ASYNC
//     func syscall.InotifyRmWatch
//    const syscall.TIOCGSID
//    const syscall.IFF_MULTICAST
//    const syscall.ETH_P_DSA
//    const syscall.AF_BRIDGE
//    const syscall.AF_ROUTE
//    const syscall.O_SYNC
//    const syscall.OCRNL
//    const syscall.IFA_UNSPEC
//     func syscall.Tee
//    const syscall.NLM_F_APPEND
//    const syscall.LOCK_UN
//    const syscall.PR_SET_TIMERSLACK
//    const syscall.SYS_FSTAT
//    const syscall.MADV_DONTNEED
//    const syscall.PR_MCE_KILL_EARLY
//    const syscall.ESTRPIPE
//    const syscall.F_SHLCK
//    const syscall.B75
//    const syscall.CS7
//    const syscall.IFA_BROADCAST
//    const syscall.RTM_GETTCLASS
//    const syscall.BPF_NEG
//     func syscall.Setrlimit
//    const syscall.BPF_H
//    const syscall.SIGURG
//     func syscall.Syscall6
//    const syscall.SYS_TIMER_SETTIME
//    const syscall.MS_MANDLOCK
//    const syscall.ETH_P_PPPTALK
//    const syscall.SYS_CLONE
//    const syscall.AF_INET6
//    const syscall.SYS_RT_SIGPROCMASK
//     func syscall.ParseNetlinkMessage
//    const syscall.F_SETFD
//     func syscall.Stat
//    const syscall.SYS_SET_TID_ADDRESS
//    const syscall.EEXIST
//     func syscall.Adjtimex
//    const syscall.NLMSG_ERROR
//      var syscall.Stdin
//     type syscall.RtMsg
//    const syscall.SYS_IO_SUBMIT
//    const syscall.SYS_REBOOT
//    const syscall.TIOCSSERIAL
//    const syscall.AF_IUCV
//    const syscall.IPV6_RECVHOPLIMIT
//    const syscall.B2400
//    const syscall.RTM_DELROUTE
//    const syscall.TIOCGRS485
//    const syscall.SYS_GET_ROBUST_LIST
//    const syscall.AF_INET
//     func syscall.RawSyscall6
//     type syscall.SockFilter
//    const syscall.RTF_NONEXTHOP
//    const syscall.DT_FIFO
//    const syscall.S_ISVTX
//    const syscall.MSG_CMSG_CLOEXEC
//    const syscall.ELIBMAX
//    const syscall.TUNSETSNDBUF
//    const syscall.EISDIR
//    const syscall.F_SETLKW64
//    const syscall.MSG_PEEK
//    const syscall.SYS_REMAP_FILE_PAGES
//    const syscall.RTAX_FEATURE_ALLFRAG
//    const syscall.SIOCGIFMAP
//    const syscall.SIOCGSTAMP
//    const syscall.EPOLLOUT
//    const syscall.TIOCGPTN
//    const syscall.IPPROTO_NONE
//    const syscall.SYS_DUP
//    const syscall.PTRACE_GETFPXREGS
//    const syscall.AF_WANPIPE
//    const syscall.IN_CLASSC_NET
//    const syscall.PTRACE_O_MASK
//    const syscall.DT_SOCK
//    const syscall.O_DIRECTORY
//    const syscall.PR_GET_KEEPCAPS
//    const syscall.IFF_SLAVE
//    const syscall.ARPHRD_HDLC
//    const syscall.TIOCSPTLCK
//     func syscall.Open
//    const syscall.SYS_SETREUID
//    const syscall.ENOCSI
//    const syscall.EPOLLIN
//    const syscall.RTAX_INITCWND
//    const syscall.MS_UNBINDABLE
//    const syscall.IFNAMSIZ
//    const syscall.EFAULT
//    const syscall.SO_RCVLOWAT
//     func syscall.NsecToTimespec
//    const syscall.BPF_LDX
//    const syscall.SIOCGIFTXQLEN
//    const syscall.MS_SLAVE
//    const syscall.TCP_KEEPIDLE
//     type syscall.Fsid
//     func syscall.Fchdir
//    const syscall.IP_DF
//    const syscall.SO_SNDBUFFORCE
//    const syscall.SYS_SETPRIORITY
//     type syscall.NlAttr
//     type syscall.IfAddrmsg
//    const syscall.PathMax
//     func syscall.Mkdirat
//    const syscall.SIOCGRARP
//    const syscall.DT_CHR
//    const syscall.CS5
//    const syscall.PACKET_RX_RING
//    const syscall.SYS_LINKAT
//    const syscall.MS_MOVE
//    const syscall.PTRACE_SETREGSET
//    const syscall.SYS_MSYNC
//    const syscall.IN_LOOPBACKNET
//    const syscall.PR_SET_TIMING
//    const syscall.PR_TIMING_STATISTICAL
//     func syscall.Mlockall
//    const syscall.RLIM_INFINITY
//    const syscall.RTAX_FEATURE_TIMESTAMP
//    const syscall.SIOCSRARP
//    const syscall.PTRACE_OLDSETOPTIONS
//    const syscall.EDESTADDRREQ
//    const syscall.IFF_PROMISC
//    const syscall.SIOCSIFDSTADDR
//    const syscall.TCP_DEFER_ACCEPT
//     func syscall.Fchownat
//    const syscall.TCP_NODELAY
//    const syscall.BPF_JGE
//    const syscall.SYS_MLOCK
//    const syscall.TIOCSERCONFIG
//    const syscall.BPF_MINOR_VERSION
//    const syscall.RTA_OIF
//    const syscall.NLA_HDRLEN
//    const syscall.ENOTEMPTY
//    const syscall.F_GETOWN_EX
//    const syscall.EDEADLOCK
//     func syscall.Recvmsg
//    const syscall.NETLINK_IP6_FW
//     type syscall.Sockaddr
//     func syscall.Shutdown
//     type syscall.SysProcAttr
//    const syscall.SYS_FCHMOD
//    const syscall.IPPROTO_ENCAP
//    const syscall.SIOCGIFCOUNT
//    const syscall.ISTRIP
//    const syscall.ENETUNREACH
//    const syscall.IFA_F_HOMEADDRESS
//     func syscall.Getppid
//    const syscall.IN_MOVE
//    const syscall.IPPROTO_DSTOPTS
//    const syscall.SYS_SWAPOFF
//      var syscall.SocketDisableIPv6
//    const syscall.ETH_P_LINK_CTL
//    const syscall.B38400
//    const syscall.SYS_EPOLL_CREATE
//    const syscall.SYS_GET_MEMPOLICY
//    const syscall.IN_CLASSC_HOST
//    const syscall.RTF_UP
//    const syscall.VREPRINT
//    const syscall.NETLINK_NO_ENOBUFS
//    const syscall.AF_X25
//    const syscall.MS_MGC_MSK
//    const syscall.IP_HDRINCL
//    const syscall.SYS_SETSID
//    const syscall.SYS_GETRESUID
//     func syscall.Fallocate
//    const syscall.SYS_UTIMES
//    const syscall.SO_DEBUG
//     func syscall.Access
//    const syscall.IPV6_2292PKTINFO
//     func syscall.EpollCreate1
//    const syscall.F_GETLK64
//     type syscall.Inet4Pktinfo
//    const syscall.SYS_CREAT
//    const syscall.FD_SETSIZE
//     func syscall.SetsockoptIPMreqn
//    const syscall.IP_OFFMASK
//     type syscall.RtAttr
//    const syscall.SYS_SWAPON
//    const syscall.SO_SNDLOWAT
//    const syscall.EPFNOSUPPORT
//    const syscall.ETH_P_802_2
//    const syscall.SIOCSIFLINK
//    const syscall.IP_MAXPACKET
//    const syscall.RTPROT_BOOT
//     func syscall.PtraceGetRegs
//    const syscall.TIOCM_RNG
//    const syscall.IFLA_WIRELESS
//    const syscall.IEXTEN
//    const syscall.IP_XFRM_POLICY
//    const syscall.BPF_A
//    const syscall.SIOCSIFHWBROADCAST
//    const syscall.BPF_MEMWORDS
//    const syscall.SYS_UTIMENSAT
//     func syscall.LsfStmt
//    const syscall.ARPHRD_IRDA
//    const syscall.IFA_MAX
//    const syscall.RTM_GETADDRLABEL
//    const syscall.SIOCGIFBRDADDR
//    const syscall.SYS_UMOUNT2
//    const syscall.SO_ACCEPTCONN
//    const syscall.PACKET_MR_MULTICAST
//    const syscall.B110
//    const syscall.TCP_MSS
//    const syscall.EDQUOT
//    const syscall.PTRACE_GETFPREGS
//    const syscall.PTRACE_O_TRACEVFORKDONE
//    const syscall.ETH_P_BPQ
//    const syscall.SYS_PRLIMIT64
//    const syscall.SYS_IOPRIO_GET
//    const syscall.SIGXCPU
//    const syscall.PR_FP_EXC_UND
//    const syscall.SYS_MODIFY_LDT
//    const syscall.IXOFF
//    const syscall.ARPHRD_DDCMP
//    const syscall.IN_IGNORED
//    const syscall.SYS_TIMER_GETTIME
//    const syscall.IPV6_XFRM_POLICY
//    const syscall.BPF_ADD
//    const syscall.CSIZE
//    const syscall.RUSAGE_SELF
//    const syscall.SYS_READAHEAD
//    const syscall.NETLINK_USERSOCK
//    const syscall.SYS_GETDENTS64
//    const syscall.SYS_TIMERFD_GETTIME
//    const syscall.NETLINK_NFLOG
//    const syscall.RTF_MODIFIED
//    const syscall.SYS_SCHED_RR_GET_INTERVAL
//    const syscall.SYS_TIMES
//    const syscall.NETLINK_CONNECTOR
//     func syscall.Rmdir
//    const syscall.F_GETFD
//    const syscall.RTM_GETQDISC
//    const syscall.ENXIO
//    const syscall.RTN_XRESOLVE
//    const syscall.SO_SECURITY_ENCRYPTION_TRANSPORT
//     func syscall.Creat
//    const syscall.SYS_SETRLIMIT
//    const syscall.RTCF_DIRECTSRC
//     type syscall.Statfs_t
//     func syscall.Environ
//    const syscall.RTM_NEWPREFIX
//    const syscall.NLMSG_OVERRUN
//    const syscall.RTN_BLACKHOLE
//    const syscall.ENONET
//    const syscall.IFA_F_DADFAILED
//    const syscall.PTRACE_KILL
//    const syscall.SIOCATMARK
//    const syscall.PARENB
//    const syscall.IP_PMTUDISC_PROBE
//    const syscall.MS_PRIVATE
//    const syscall.ETH_P_CONTROL
//    const syscall.F_SETOWN_EX
//     type syscall.Time_t
//    const syscall.AF_ATMSVC
//    const syscall.F_SETFL
//    const syscall.B1152000
//     func syscall.GetsockoptIPMreq
//    const syscall.SIGBUS
//    const syscall.IFLA_LINK
//    const syscall.NLM_F_MULTI
//    const syscall.CLOCAL
//    const syscall.SYS_INIT_MODULE
//    const syscall.PACKET_MR_ALLMULTI
//    const syscall.BPF_OR
//    const syscall.ETH_P_IP
//    const syscall.RTM_NEWRULE
//    const syscall.SYS_PSELECT6
//    const syscall.IPV6_RECVDSTOPTS
//    const syscall.MSG_SYN
//     func syscall.Connect
//     func syscall.Getrlimit
//     func syscall.Nanosleep
//    const syscall.RTPROT_MRT
//    const syscall.RTA_TABLE
//    const syscall.MSG_TRYHARD
//    const syscall.MSG_WAITALL
//    const syscall.NLM_F_REQUEST
//    const syscall.PACKET_OUTGOING
//    const syscall.NETLINK_XFRM
//    const syscall.IP_RECVTTL
//    const syscall.LINUX_REBOOT_CMD_HALT
//    const syscall.IN_CLOSE_WRITE
//     func syscall.Chdir
//     func syscall.Wait4
//    const syscall.S_BLKSIZE
//     func syscall.Fsync
//    const syscall.RTA_MULTIPATH
//    const syscall.RTF_HOST
//    const syscall.SYS_MSGSND
//    const syscall.IFLA_STATS
//    const syscall.VSWTC
//     func syscall.Getegid
//    const syscall.PTRACE_EVENT_VFORK
//     func syscall.Fstat
//    const syscall.NETLINK_UNUSED
//    const syscall.IFLA_NET_NS_PID
//    const syscall.EPOLLWRBAND
//    const syscall.IFA_LOCAL
//    const syscall.RTM_DELQDISC
//    const syscall.SYS_TIMER_CREATE
//    const syscall.TIOCMBIC
//     type syscall.IPMreq
//    const syscall.SCM_CREDENTIALS
//    const syscall.S_IFLNK
//    const syscall.PR_TSC_ENABLE
//    const syscall.SYS_GETTID
//    const syscall.ETH_P_IPX
//    const syscall.RTCF_NAT
//    const syscall.SCM_RIGHTS
//    const syscall.RTF_ADDRCONF
//    const syscall.FD_CLOEXEC
//    const syscall.EREMOTEIO
//     func syscall.Setenv
//    const syscall.F_SETLK64
//    const syscall.TUNDETACHFILTER
//    const syscall.IFA_F_PERMANENT
//    const syscall.PTRACE_POKEDATA
//    const syscall.ENODEV
//    const syscall.IPV6_MULTICAST_LOOP
//    const syscall.ENOKEY
//    const syscall.SHUT_RDWR
//    const syscall.ARPHRD_IEEE1394
//    const syscall.SOL_DECNET
//    const syscall.PR_CAPBSET_READ
//    const syscall.IP_MINTTL
//    const syscall.SYS_SYMLINK
//    const syscall.SizeofIPMreqn
//    const syscall.ENOPROTOOPT
//     func syscall.CmsgLen
//    const syscall.SIOCGIFSLAVE
//    const syscall.PROT_GROWSDOWN
//    const syscall.IPPROTO_UDPLITE
//    const syscall.ETH_P_ARCNET
//    const syscall.OPOST
//    const syscall.IN_CLASSC_NSHIFT
//    const syscall.SYS_LSTAT
//    const syscall.SYS_CLOCK_GETTIME
//    const syscall.RTA_DST
//    const syscall.SO_SNDBUF
//     func syscall.Clearenv
//    const syscall.PTRACE_GETEVENTMSG
//    const syscall.BPF_SUB
//    const syscall.RTF_MTU
//    const syscall.SYS_IOCTL
//    const syscall.SYS_FCHDIR
//    const syscall.ETH_P_8021Q
//    const syscall.SYS_FUTEX
//    const syscall.ETH_P_DDCMP
//    const syscall.WCLONE
//    const syscall.TIOCSER_TEMT
//    const syscall.PR_SET_KEEPCAPS
//    const syscall.IFA_LABEL
//    const syscall.RTM_DELADDRLABEL
//    const syscall.EPOLL_NONBLOCK
//    const syscall.RTF_GATEWAY
//    const syscall.SIOCDRARP
//     func syscall.Mkfifo
//    const syscall.IPV6_RECVHOPOPTS
//    const syscall.IP_MULTICAST_IF
//    const syscall.SIGUNUSED
//     func syscall.Flock
//    const syscall.IN_ALL_EVENTS
//    const syscall.IFLA_WEIGHT
//    const syscall.EMLINK
//    const syscall.SIGWINCH
//    const syscall.RTF_POLICY
//    const syscall.NETLINK_DNRTMSG
//    const syscall.IPPROTO_IDP
//    const syscall.TUNSETNOCSUM
//    const syscall.RTNH_F_PERVASIVE
//    const syscall.AF_NETBEUI
//    const syscall.IPV6_ADD_MEMBERSHIP
//    const syscall.LINUX_REBOOT_CMD_CAD_OFF
//    const syscall.VTIME
//    const syscall.ENOTDIR
//    const syscall.ICANON
//    const syscall.IPV6_IPSEC_POLICY
//    const syscall.SYS_RT_SIGACTION
//    const syscall.NLM_F_ACK
//    const syscall.ARPHRD_VOID
//    const syscall.ECONNREFUSED
//    const syscall.SizeofSockaddrLinklayer
//    const syscall.ESRMNT
//    const syscall.F_SETPIPE_SZ
//    const syscall.SIOCGIFMEM
//    const syscall.VEOL
//    const syscall.S_IFSOCK
//     func syscall.Faccessat
//    const syscall.ISIG
//    const syscall.IPV6_RXDSTOPTS
//    const syscall.SIGPROF
//    const syscall.MS_STRICTATIME
//    const syscall.ARPHRD_FRAD
//    const syscall.ECONNABORTED
//    const syscall.SizeofUcred
//    const syscall.IFF_PORTSEL
//     func syscall.InotifyInit1
//    const syscall.SYS_RECVMSG
//    const syscall.MSG_NOSIGNAL
//    const syscall.IP_MTU
//    const syscall.IFA_F_DEPRECATED
//     func syscall.Getpgrp
//     func syscall.PtracePeekText
//    const syscall.SYS_SETTIMEOFDAY
//     func syscall.Lstat
//    const syscall.SYS_WRITEV
//    const syscall.SYS_TIMERFD_CREATE
//    const syscall.SYS_MQ_UNLINK
//    const syscall.O_FSYNC
//    const syscall.RT_CLASS_MAIN
//    const syscall.SYS_SEMGET
//    const syscall.SOCK_CLOEXEC
//    const syscall.SYS_SETFSGID
//    const syscall.SYS_CLOSE
//    const syscall.RTCF_VALVE
//    const syscall.PTRACE_SINGLESTEP
//    const syscall.SYS_POLL
//    const syscall.IP_UNBLOCK_SOURCE
//    const syscall.IN_CLOSE
//    const syscall.IPV6_NEXTHOP
//    const syscall.SO_BROADCAST
//     func syscall.Sendto
//    const syscall.TIOCM_DTR
//    const syscall.RTA_ALIGNTO
//    const syscall.MAP_DENYWRITE
//    const syscall.SIOCSIFNETMASK
//    const syscall.ETH_P_DNA_RT
//    const syscall.SYS_FTRUNCATE
//    const syscall.NETLINK_ADD_MEMBERSHIP
//    const syscall.ARPHRD_FCFABRIC
//    const syscall.SYS_PTRACE
//    const syscall.SYS_RENAME
//    const syscall.MADV_WILLNEED
//    const syscall.RTN_PROHIBIT
//    const syscall.RTAX_LOCK
//    const syscall.SYS_EVENTFD2
//    const syscall.SO_RCVTIMEO
//    const syscall.EALREADY
//    const syscall.EHOSTDOWN
//    const syscall.ETH_P_ATMMPOA
//    const syscall.RLIMIT_FSIZE
//    const syscall.PR_CAPBSET_DROP
//    const syscall.SYS_FSETXATTR
//    const syscall.SizeofMsghdr
//    const syscall.IFA_F_SECONDARY
//    const syscall.SYS_VMSPLICE
//    const syscall.PR_GET_UNALIGN
//     func syscall.RawSyscall
//    const syscall.SYS_RT_TGSIGQUEUEINFO
//    const syscall.MSG_OOB
//    const syscall.NLM_F_REPLACE
//    const syscall.AF_CAIF
//    const syscall.ENOLCK
//     func syscall.Setsid
//    const syscall.TUNGETSNDBUF
//    const syscall.SYS_KEXEC_LOAD
//    const syscall.EISNAM
//    const syscall.SIOCDARP
//    const syscall.SIOCRTMSG
//     type syscall.RawSockaddrLinklayer
//    const syscall.IPV6_JOIN_ANYCAST
//    const syscall.PTRACE_SETSIGINFO
//    const syscall.SIGQUIT
//    const syscall.NETLINK_PKTINFO
//    const syscall.ARPHRD_ETHER
//    const syscall.SIOCGIFHWADDR
//    const syscall.ENODATA
//    const syscall.MADV_REMOVE
//    const syscall.MS_NOSUID
//    const syscall.SYS_FREMOVEXATTR
//    const syscall.ENOSPC
//    const syscall.TIOCSERGETMULTI
//     func syscall.SetsockoptTimeval
//    const syscall.F_GETFL
//    const syscall.PTRACE_O_TRACEEXEC
//    const syscall.ENOTSOCK
//    const syscall.HUPCL
//    const syscall.SYS_SCHED_SETPARAM
//    const syscall.SIGPIPE
//    const syscall.RTM_NEWNEIGHTBL
//     func syscall.ReadDirent
//    const syscall.ETH_P_ECONET
//    const syscall.IPV6_PMTUDISC_DONT
//    const syscall.AF_ECONET
//     func syscall.Read
//    const syscall.NLA_F_NET_BYTEORDER
//    const syscall.SYS_SETSOCKOPT
//    const syscall.RTM_DELLINK
//    const syscall.O_NOCTTY
//    const syscall.RTPROT_REDIRECT
//    const syscall.ARPHRD_RSRVD
//     func syscall.UnixRights
//    const syscall.SYS_RT_SIGPENDING
//    const syscall.ELIBBAD
//    const syscall.IP_DROP_SOURCE_MEMBERSHIP
//    const syscall.EPOLLRDBAND
//    const syscall.TIOCMIWAIT
//    const syscall.VDISCARD
//    const syscall.RTF_DEFAULT
//    const syscall.EPOLLPRI
//    const syscall.TIOCM_ST
//     func syscall.NetlinkRIB
//    const syscall.LINUX_REBOOT_CMD_CAD_ON
//    const syscall.PARODD
//    const syscall.IFA_MULTICAST
//    const syscall.SIOCDELDLCI
//    const syscall.AF_MAX
//    const syscall.SYS_UNAME
//    const syscall.IFF_NOTRAILERS
//    const syscall.RTM_SETLINK
//     func syscall.Accept
//    const syscall.PTRACE_O_TRACECLONE
//    const syscall.IPV6_HOPOPTS
//    const syscall.RTCF_MASQ
//    const syscall.ETH_P_1588
//    const syscall.SYS_SYSFS
//    const syscall.ARPHRD_NETROM
//    const syscall.ARPHRD_PPP
//    const syscall.ETH_P_WCCP
//    const syscall.SYS_PIPE
//    const syscall.TIOCM_RTS
//    const syscall.SYS_SCHED_GETPARAM
//    const syscall.S_IFIFO
//    const syscall.RTM_NEWLINK
//    const syscall.SYS_SHMDT
//    const syscall.TIOCSIG
//    const syscall.IPV6_DSTOPTS
//    const syscall.SYS_EPOLL_WAIT_OLD
//    const syscall.EIO
//    const syscall.RTM_GETRULE
//    const syscall.TCP_LINGER2
//    const syscall.S_IRUSR
//     type syscall.SockaddrLinklayer
//    const syscall.SCM_TIMESTAMP
//    const syscall.SYS_SCHED_SETAFFINITY
//    const syscall.MAP_GROWSDOWN
//     func syscall.Bind
//    const syscall.SIOCDELRT
//    const syscall.MAP_TYPE
//    const syscall.SO_REUSEADDR
//    const syscall.MS_SHARED
//     type syscall.RawSockaddrUnix
//    const syscall.TIOCPKT_FLUSHREAD
//    const syscall.SYS_CLOCK_GETRES
//    const syscall.EBADF
//     type syscall.RawSockaddrNetlink
//     type syscall.NlMsgerr
//    const syscall.IN_ISDIR
//    const syscall.ETH_P_CAN
//    const syscall.RTM_DELTFILTER
//    const syscall.ENOPKG
//    const syscall.EPROTONOSUPPORT
//    const syscall.SYS_FCHOWN
//    const syscall.ENOTBLK
//    const syscall.EREMOTE
//     func syscall.Exit
//    const syscall.TOSTOP
//    const syscall.SYS_RECVFROM
//     func syscall.Fchown
//    const syscall.ARPHRD_IEEE802154_PHY
//    const syscall.BPF_JGT
//    const syscall.SYS_SCHED_GETSCHEDULER
//    const syscall.SYS_ARCH_PRCTL
//     func syscall.Uname
//    const syscall.EHOSTUNREACH
//    const syscall.TIOCM_LE
//    const syscall.S_IWOTH
//    const syscall.SYS_SETPGID
//    const syscall.SIGVTALRM
//    const syscall.SYS_UNLINK
//    const syscall.RTM_GETMULTICAST
//    const syscall.SIOCSIFMAP
//    const syscall.MSG_CTRUNC
//    const syscall.SYS_SETDOMAINNAME
//    const syscall.SIOCSIFFLAGS
//    const syscall.PROT_NONE
//     func syscall.Klogctl
//    const syscall.SYS_MQ_TIMEDRECEIVE
//    const syscall.RTF_REINSTATE
//    const syscall.IFLA_LINKINFO
//    const syscall.EMSGSIZE
//    const syscall.SYS_PWRITE64
//     func syscall.Rename
//     func syscall.Iopl
//    const syscall.IN_UNMOUNT
//    const syscall.ENOTRECOVERABLE
//    const syscall.PR_SET_FPEXC
//    const syscall.RTF_IRTT
//    const syscall.IPPROTO_EGP
//    const syscall.MS_NODIRATIME
//    const syscall.SYS_CAPGET
//    const syscall.TIOCGSOFTCAR
//    const syscall.IPV6_RECVTCLASS
//    const syscall.B2000000
//    const syscall.AF_KEY
//    const syscall.PACKET_RECV_OUTPUT
//    const syscall.ARPHRD_SIT
//     func syscall.Exec
//    const syscall.PR_FP_EXC_RES
//    const syscall.IFF_LOOPBACK
//    const syscall.TUNGETFEATURES
//    const syscall.BPF_LEN
//    const syscall.ARPHRD_ADAPT
//     func syscall.InotifyAddWatch
//    const syscall.SO_KEEPALIVE
//    const syscall.SYS_READV
//    const syscall.AF_PACKET
//    const syscall.ARPHRD_LOOPBACK
//    const syscall.EPOLLMSG
//    const syscall.IFA_ADDRESS
//     func syscall.LsfJump
//    const syscall.IFF_POINTOPOINT
//    const syscall.ARPHRD_CSLIP6
//    const syscall.IPV6_ROUTER_ALERT
//    const syscall.SYS_GETGROUPS
//     type syscall.Timespec
//    const syscall.IN_CLASSB_HOST
//    const syscall.TCP_MAXSEG
//    const syscall.SYS_SYNC
//    const syscall.SIGCHLD
//    const syscall.SHUT_WR
//     func syscall.Getgid
//    const syscall.MADV_NOHUGEPAGE
//    const syscall.SO_PROTOCOL
//    const syscall.EAFNOSUPPORT
//    const syscall.SYS_EPOLL_CTL
//    const syscall.EPROTOTYPE
//    const syscall.SizeofNlMsgerr
//    const syscall.SO_MARK
//    const syscall.SYS_LINK
//    const syscall.SizeofNlAttr
//     func syscall.Munlock
//    const syscall.MS_REMOUNT
//    const syscall.SYS_SHMAT
//    const syscall.PROT_READ
//    const syscall.RTN_UNSPEC
//    const syscall.O_DSYNC
//    const syscall.O_RSYNC
//     func syscall.SetsockoptInt
//    const syscall.SYS_SIGNALFD4
//    const syscall.SYS_GETRUSAGE
//    const syscall.PTRACE_EVENT_EXEC
//     func syscall.AttachLsf
//    const syscall.EISCONN
//     func syscall.Openat
//    const syscall.ENOTCONN
//    const syscall.NETLINK_FIB_LOOKUP
//    const syscall.SYS_TGKILL
//    const syscall.SYS_LSEEK
//    const syscall.PROT_EXEC
//    const syscall.LINUX_REBOOT_CMD_KEXEC
//    const syscall.SYS_VFORK
//    const syscall.IN_CREATE
//     func syscall.Getdents
//    const syscall.EINPROGRESS
//    const syscall.IP_RETOPTS
//    const syscall.RTN_LOCAL
//    const syscall.SOCK_DGRAM
//    const syscall.F_SETLEASE
//    const syscall.SYS_MUNMAP
//    const syscall.RT_CLASS_LOCAL
//    const syscall.ETH_P_DNA_RC
//    const syscall.IP_PKTOPTIONS
//    const syscall.PTRACE_GETSIGINFO
//     type syscall.RawSockaddrInet6
//    const syscall.F_GETPIPE_SZ
//    const syscall.IFF_MASTER
//    const syscall.O_APPEND
//    const syscall.F_SETLK
//     func syscall.StringSlicePtr
//    const syscall.NLMSG_ALIGNTO
//    const syscall.ECHOCTL
//     func syscall.Kill
//    const syscall.B0
//     func syscall.TimespecToNsec
//    const syscall.NLA_ALIGNTO
//    const syscall.MADV_DOFORK
//    const syscall.SYS_ACCEPT
//    const syscall.MADV_SEQUENTIAL
//     type syscall.Rlimit
//    const syscall.RTF_REJECT
//    const syscall.RTM_NEWNEIGH
//     func syscall.Getwd

//? Consts["/syscall/ETH_P_EDSA"] = syscall.ETH_P_EDSA
//# OLD <{sETH_P_EDSA}> 0
//# NEW <{sETH_P_EDSA}> 1
//? Consts["/syscall/ENOTSUP"] = syscall.ENOTSUP
//# OLD <{sENOTSUP}> 0
//# NEW <{sENOTSUP}> 1
//? Consts["/syscall/ESRCH"] = syscall.ESRCH
//# OLD <{sESRCH}> 0
//# NEW <{sESRCH}> 1
Funcs["/syscall/Ioperm"] = syscall.Ioperm
//# OLD <{sIoperm}> 0
//# NEW <{sIoperm}> 1
//? Consts["/syscall/MADV_HWPOISON"] = syscall.MADV_HWPOISON
//# OLD <{sMADV_HWPOISON}> 0
//# NEW <{sMADV_HWPOISON}> 1
//? Consts["/syscall/B3000000"] = syscall.B3000000
//# OLD <{sB3000000}> 0
//# NEW <{sB3000000}> 1
//? Consts["/syscall/ONLCR"] = syscall.ONLCR
//# OLD <{sONLCR}> 0
//# NEW <{sONLCR}> 1
//? Consts["/syscall/RTM_GETLINK"] = syscall.RTM_GETLINK
//# OLD <{sRTM_GETLINK}> 0
//# NEW <{sRTM_GETLINK}> 1
//? Consts["/syscall/PTRACE_EVENT_CLONE"] = syscall.PTRACE_EVENT_CLONE
//# OLD <{sPTRACE_EVENT_CLONE}> 0
//# NEW <{sPTRACE_EVENT_CLONE}> 1
//? Consts["/syscall/RT_TABLE_MAIN"] = syscall.RT_TABLE_MAIN
//# OLD <{sRT_TABLE_MAIN}> 0
//# NEW <{sRT_TABLE_MAIN}> 1
//? Consts["/syscall/RTPROT_KERNEL"] = syscall.RTPROT_KERNEL
//# OLD <{sRTPROT_KERNEL}> 0
//# NEW <{sRTPROT_KERNEL}> 1
//? Consts["/syscall/SYS_SYNC_FILE_RANGE"] = syscall.SYS_SYNC_FILE_RANGE
//# OLD <{sSYS_SYNC_FILE_RANGE}> 0
//# NEW <{sSYS_SYNC_FILE_RANGE}> 1
//? Consts["/syscall/RTF_ALLONLINK"] = syscall.RTF_ALLONLINK
//# OLD <{sRTF_ALLONLINK}> 0
//# NEW <{sRTF_ALLONLINK}> 1
//? Consts["/syscall/AF_ISDN"] = syscall.AF_ISDN
//# OLD <{sAF_ISDN}> 0
//# NEW <{sAF_ISDN}> 1
Funcs["/syscall/Unlink"] = syscall.Unlink
//# OLD <{sUnlink}> 0
//# NEW <{sUnlink}> 1
Funcs["/syscall/Dup2"] = syscall.Dup2
//# OLD <{sDup2}> 0
//# NEW <{sDup2}> 1
//? Consts["/syscall/BPF_LSH"] = syscall.BPF_LSH
//# OLD <{sBPF_LSH}> 0
//# NEW <{sBPF_LSH}> 1
//? Consts["/syscall/SYS_SETRESUID"] = syscall.SYS_SETRESUID
//# OLD <{sSYS_SETRESUID}> 0
//# NEW <{sSYS_SETRESUID}> 1
//? Consts["/syscall/ETH_P_PPP_DISC"] = syscall.ETH_P_PPP_DISC
//# OLD <{sETH_P_PPP_DISC}> 0
//# NEW <{sETH_P_PPP_DISC}> 1
//? Consts["/syscall/SIOCGARP"] = syscall.SIOCGARP
//# OLD <{sSIOCGARP}> 0
//# NEW <{sSIOCGARP}> 1
//? Consts["/syscall/ARPHRD_FCPL"] = syscall.ARPHRD_FCPL
//# OLD <{sARPHRD_FCPL}> 0
//# NEW <{sARPHRD_FCPL}> 1
//? Consts["/syscall/SYS_OPEN"] = syscall.SYS_OPEN
//# OLD <{sSYS_OPEN}> 0
//# NEW <{sSYS_OPEN}> 1
//? Consts["/syscall/IPV6_PMTUDISC_DO"] = syscall.IPV6_PMTUDISC_DO
//# OLD <{sIPV6_PMTUDISC_DO}> 0
//# NEW <{sIPV6_PMTUDISC_DO}> 1
//? Consts["/syscall/SO_PEERNAME"] = syscall.SO_PEERNAME
//# OLD <{sSO_PEERNAME}> 0
//# NEW <{sSO_PEERNAME}> 1
//? Consts["/syscall/IP_MSS"] = syscall.IP_MSS
//# OLD <{sIP_MSS}> 0
//# NEW <{sIP_MSS}> 1
//? Consts["/syscall/RTF_THROW"] = syscall.RTF_THROW
//# OLD <{sRTF_THROW}> 0
//# NEW <{sRTF_THROW}> 1
//? Consts["/syscall/IPPROTO_IGMP"] = syscall.IPPROTO_IGMP
//# OLD <{sIPPROTO_IGMP}> 0
//# NEW <{sIPPROTO_IGMP}> 1
Funcs["/syscall/Seek"] = syscall.Seek
//# OLD <{sSeek}> 0
//# NEW <{sSeek}> 1
//? Consts["/syscall/MS_INVALIDATE"] = syscall.MS_INVALIDATE
//# OLD <{sMS_INVALIDATE}> 0
//# NEW <{sMS_INVALIDATE}> 1
//? Consts["/syscall/IXANY"] = syscall.IXANY
//# OLD <{sIXANY}> 0
//# NEW <{sIXANY}> 1
//? Consts["/syscall/BPF_ST"] = syscall.BPF_ST
//# OLD <{sBPF_ST}> 0
//# NEW <{sBPF_ST}> 1
//? Consts["/syscall/RTA_MAX"] = syscall.RTA_MAX
//# OLD <{sRTA_MAX}> 0
//# NEW <{sRTA_MAX}> 1
//? Consts["/syscall/SO_SNDTIMEO"] = syscall.SO_SNDTIMEO
//# OLD <{sSO_SNDTIMEO}> 0
//# NEW <{sSO_SNDTIMEO}> 1
//? Consts["/syscall/IP_ROUTER_ALERT"] = syscall.IP_ROUTER_ALERT
//# OLD <{sIP_ROUTER_ALERT}> 0
//# NEW <{sIP_ROUTER_ALERT}> 1
//? Consts["/syscall/ONLRET"] = syscall.ONLRET
//# OLD <{sONLRET}> 0
//# NEW <{sONLRET}> 1
Funcs["/syscall/GetsockoptInet4Addr"] = syscall.GetsockoptInet4Addr
//# OLD <{sGetsockoptInet4Addr}> 0
//# NEW <{sGetsockoptInet4Addr}> 1
//? Consts["/syscall/ARPHRD_ECONET"] = syscall.ARPHRD_ECONET
//# OLD <{sARPHRD_ECONET}> 0
//# NEW <{sARPHRD_ECONET}> 1
//? Consts["/syscall/SYS_SENDTO"] = syscall.SYS_SENDTO
//# OLD <{sSYS_SENDTO}> 0
//# NEW <{sSYS_SENDTO}> 1
//? Consts["/syscall/AF_ASH"] = syscall.AF_ASH
//# OLD <{sAF_ASH}> 0
//# NEW <{sAF_ASH}> 1
Funcs["/syscall/Pause"] = syscall.Pause
//# OLD <{sPause}> 0
//# NEW <{sPause}> 1
Funcs["/syscall/Setregid"] = syscall.Setregid
//# OLD <{sSetregid}> 0
//# NEW <{sSetregid}> 1
//? Consts["/syscall/SYS_FADVISE64"] = syscall.SYS_FADVISE64
//# OLD <{sSYS_FADVISE64}> 0
//# NEW <{sSYS_FADVISE64}> 1
//? Consts["/syscall/SizeofInotifyEvent"] = syscall.SizeofInotifyEvent
//# OLD <{sSizeofInotifyEvent}> 0
//# NEW <{sSizeofInotifyEvent}> 1
//? Consts["/syscall/SIGALRM"] = syscall.SIGALRM
//# OLD <{sSIGALRM}> 0
//# NEW <{sSIGALRM}> 1
//? Consts["/syscall/NLMSG_MIN_TYPE"] = syscall.NLMSG_MIN_TYPE
//# OLD <{sNLMSG_MIN_TYPE}> 0
//# NEW <{sNLMSG_MIN_TYPE}> 1
//? Consts["/syscall/TIOCGETD"] = syscall.TIOCGETD
//# OLD <{sTIOCGETD}> 0
//# NEW <{sTIOCGETD}> 1
//? Consts["/syscall/ERFKILL"] = syscall.ERFKILL
//# OLD <{sERFKILL}> 0
//# NEW <{sERFKILL}> 1
Types["/syscall/SockaddrInet4"] = new(*syscall.SockaddrInet4)
//# OLD <{sSockaddrInet4}> 0
//# NEW <{sSockaddrInet4}> 1
//? Consts["/syscall/TIOCSTI"] = syscall.TIOCSTI
//# OLD <{sTIOCSTI}> 0
//# NEW <{sTIOCSTI}> 1
//? Consts["/syscall/MS_NOATIME"] = syscall.MS_NOATIME
//# OLD <{sMS_NOATIME}> 0
//# NEW <{sMS_NOATIME}> 1
//? Consts["/syscall/PR_FPEMU_SIGFPE"] = syscall.PR_FPEMU_SIGFPE
//# OLD <{sPR_FPEMU_SIGFPE}> 0
//# NEW <{sPR_FPEMU_SIGFPE}> 1
Types["/syscall/NetlinkRouteRequest"] = new(*syscall.NetlinkRouteRequest)
//# OLD <{sNetlinkRouteRequest}> 0
//# NEW <{sNetlinkRouteRequest}> 1
//? Consts["/syscall/PTRACE_SETOPTIONS"] = syscall.PTRACE_SETOPTIONS
//# OLD <{sPTRACE_SETOPTIONS}> 0
//# NEW <{sPTRACE_SETOPTIONS}> 1
//? Consts["/syscall/ENOTUNIQ"] = syscall.ENOTUNIQ
//# OLD <{sENOTUNIQ}> 0
//# NEW <{sENOTUNIQ}> 1
//? Consts["/syscall/TCP_MD5SIG_MAXKEYLEN"] = syscall.TCP_MD5SIG_MAXKEYLEN
//# OLD <{sTCP_MD5SIG_MAXKEYLEN}> 0
//# NEW <{sTCP_MD5SIG_MAXKEYLEN}> 1
//? Consts["/syscall/EL2NSYNC"] = syscall.EL2NSYNC
//# OLD <{sEL2NSYNC}> 0
//# NEW <{sEL2NSYNC}> 1
//? Consts["/syscall/RTAX_UNSPEC"] = syscall.RTAX_UNSPEC
//# OLD <{sRTAX_UNSPEC}> 0
//# NEW <{sRTAX_UNSPEC}> 1
//? Consts["/syscall/ETH_P_CAIF"] = syscall.ETH_P_CAIF
//# OLD <{sETH_P_CAIF}> 0
//# NEW <{sETH_P_CAIF}> 1
Funcs["/syscall/Getgroups"] = syscall.Getgroups
//# OLD <{sGetgroups}> 0
//# NEW <{sGetgroups}> 1
//? Consts["/syscall/PR_FP_EXC_ASYNC"] = syscall.PR_FP_EXC_ASYNC
//# OLD <{sPR_FP_EXC_ASYNC}> 0
//# NEW <{sPR_FP_EXC_ASYNC}> 1
Funcs["/syscall/InotifyRmWatch"] = syscall.InotifyRmWatch
//# OLD <{sInotifyRmWatch}> 0
//# NEW <{sInotifyRmWatch}> 1
//? Consts["/syscall/TIOCGSID"] = syscall.TIOCGSID
//# OLD <{sTIOCGSID}> 0
//# NEW <{sTIOCGSID}> 1
//? Consts["/syscall/IFF_MULTICAST"] = syscall.IFF_MULTICAST
//# OLD <{sIFF_MULTICAST}> 0
//# NEW <{sIFF_MULTICAST}> 1
//? Consts["/syscall/ETH_P_DSA"] = syscall.ETH_P_DSA
//# OLD <{sETH_P_DSA}> 0
//# NEW <{sETH_P_DSA}> 1
//? Consts["/syscall/AF_BRIDGE"] = syscall.AF_BRIDGE
//# OLD <{sAF_BRIDGE}> 0
//# NEW <{sAF_BRIDGE}> 1
//? Consts["/syscall/AF_ROUTE"] = syscall.AF_ROUTE
//# OLD <{sAF_ROUTE}> 0
//# NEW <{sAF_ROUTE}> 1
//? Consts["/syscall/O_SYNC"] = syscall.O_SYNC
//# OLD <{sO_SYNC}> 0
//# NEW <{sO_SYNC}> 1
//? Consts["/syscall/OCRNL"] = syscall.OCRNL
//# OLD <{sOCRNL}> 0
//# NEW <{sOCRNL}> 1
//? Consts["/syscall/IFA_UNSPEC"] = syscall.IFA_UNSPEC
//# OLD <{sIFA_UNSPEC}> 0
//# NEW <{sIFA_UNSPEC}> 1
Funcs["/syscall/Tee"] = syscall.Tee
//# OLD <{sTee}> 0
//# NEW <{sTee}> 1
//? Consts["/syscall/NLM_F_APPEND"] = syscall.NLM_F_APPEND
//# OLD <{sNLM_F_APPEND}> 0
//# NEW <{sNLM_F_APPEND}> 1
//? Consts["/syscall/LOCK_UN"] = syscall.LOCK_UN
//# OLD <{sLOCK_UN}> 0
//# NEW <{sLOCK_UN}> 1
//? Consts["/syscall/PR_SET_TIMERSLACK"] = syscall.PR_SET_TIMERSLACK
//# OLD <{sPR_SET_TIMERSLACK}> 0
//# NEW <{sPR_SET_TIMERSLACK}> 1
//? Consts["/syscall/SYS_FSTAT"] = syscall.SYS_FSTAT
//# OLD <{sSYS_FSTAT}> 0
//# NEW <{sSYS_FSTAT}> 1
//? Consts["/syscall/MADV_DONTNEED"] = syscall.MADV_DONTNEED
//# OLD <{sMADV_DONTNEED}> 0
//# NEW <{sMADV_DONTNEED}> 1
//? Consts["/syscall/PR_MCE_KILL_EARLY"] = syscall.PR_MCE_KILL_EARLY
//# OLD <{sPR_MCE_KILL_EARLY}> 0
//# NEW <{sPR_MCE_KILL_EARLY}> 1
//? Consts["/syscall/ESTRPIPE"] = syscall.ESTRPIPE
//# OLD <{sESTRPIPE}> 0
//# NEW <{sESTRPIPE}> 1
//? Consts["/syscall/F_SHLCK"] = syscall.F_SHLCK
//# OLD <{sF_SHLCK}> 0
//# NEW <{sF_SHLCK}> 1
//? Consts["/syscall/B75"] = syscall.B75
//# OLD <{sB75}> 0
//# NEW <{sB75}> 1
//? Consts["/syscall/CS7"] = syscall.CS7
//# OLD <{sCS7}> 0
//# NEW <{sCS7}> 1
//? Consts["/syscall/IFA_BROADCAST"] = syscall.IFA_BROADCAST
//# OLD <{sIFA_BROADCAST}> 0
//# NEW <{sIFA_BROADCAST}> 1
//? Consts["/syscall/RTM_GETTCLASS"] = syscall.RTM_GETTCLASS
//# OLD <{sRTM_GETTCLASS}> 0
//# NEW <{sRTM_GETTCLASS}> 1
//? Consts["/syscall/BPF_NEG"] = syscall.BPF_NEG
//# OLD <{sBPF_NEG}> 0
//# NEW <{sBPF_NEG}> 1
Funcs["/syscall/Setrlimit"] = syscall.Setrlimit
//# OLD <{sSetrlimit}> 0
//# NEW <{sSetrlimit}> 1
//? Consts["/syscall/BPF_H"] = syscall.BPF_H
//# OLD <{sBPF_H}> 0
//# NEW <{sBPF_H}> 1
//? Consts["/syscall/SIGURG"] = syscall.SIGURG
//# OLD <{sSIGURG}> 0
//# NEW <{sSIGURG}> 1
Funcs["/syscall/Syscall6"] = syscall.Syscall6
//# OLD <{sSyscall6}> 0
//# NEW <{sSyscall6}> 1
//? Consts["/syscall/SYS_TIMER_SETTIME"] = syscall.SYS_TIMER_SETTIME
//# OLD <{sSYS_TIMER_SETTIME}> 0
//# NEW <{sSYS_TIMER_SETTIME}> 1
//? Consts["/syscall/MS_MANDLOCK"] = syscall.MS_MANDLOCK
//# OLD <{sMS_MANDLOCK}> 0
//# NEW <{sMS_MANDLOCK}> 1
//? Consts["/syscall/ETH_P_PPPTALK"] = syscall.ETH_P_PPPTALK
//# OLD <{sETH_P_PPPTALK}> 0
//# NEW <{sETH_P_PPPTALK}> 1
//? Consts["/syscall/SYS_CLONE"] = syscall.SYS_CLONE
//# OLD <{sSYS_CLONE}> 0
//# NEW <{sSYS_CLONE}> 1
//? Consts["/syscall/AF_INET6"] = syscall.AF_INET6
//# OLD <{sAF_INET6}> 0
//# NEW <{sAF_INET6}> 1
//? Consts["/syscall/SYS_RT_SIGPROCMASK"] = syscall.SYS_RT_SIGPROCMASK
//# OLD <{sSYS_RT_SIGPROCMASK}> 0
//# NEW <{sSYS_RT_SIGPROCMASK}> 1
Funcs["/syscall/ParseNetlinkMessage"] = syscall.ParseNetlinkMessage
//# OLD <{sParseNetlinkMessage}> 0
//# NEW <{sParseNetlinkMessage}> 1
//? Consts["/syscall/F_SETFD"] = syscall.F_SETFD
//# OLD <{sF_SETFD}> 0
//# NEW <{sF_SETFD}> 1
Funcs["/syscall/Stat"] = syscall.Stat
//# OLD <{sStat}> 0
//# NEW <{sStat}> 1
//? Consts["/syscall/SYS_SET_TID_ADDRESS"] = syscall.SYS_SET_TID_ADDRESS
//# OLD <{sSYS_SET_TID_ADDRESS}> 0
//# NEW <{sSYS_SET_TID_ADDRESS}> 1
//? Consts["/syscall/EEXIST"] = syscall.EEXIST
//# OLD <{sEEXIST}> 0
//# NEW <{sEEXIST}> 1
Funcs["/syscall/Adjtimex"] = syscall.Adjtimex
//# OLD <{sAdjtimex}> 0
//# NEW <{sAdjtimex}> 1
//? Consts["/syscall/NLMSG_ERROR"] = syscall.NLMSG_ERROR
//# OLD <{sNLMSG_ERROR}> 0
//# NEW <{sNLMSG_ERROR}> 1
Vars["/syscall/Stdin"] = &syscall.Stdin
//# OLD <{sStdin}> 0
//# NEW <{sStdin}> 1
Types["/syscall/RtMsg"] = new(*syscall.RtMsg)
//# OLD <{sRtMsg}> 0
//# NEW <{sRtMsg}> 1
//? Consts["/syscall/SYS_IO_SUBMIT"] = syscall.SYS_IO_SUBMIT
//# OLD <{sSYS_IO_SUBMIT}> 0
//# NEW <{sSYS_IO_SUBMIT}> 1
//? Consts["/syscall/SYS_REBOOT"] = syscall.SYS_REBOOT
//# OLD <{sSYS_REBOOT}> 0
//# NEW <{sSYS_REBOOT}> 1
//? Consts["/syscall/TIOCSSERIAL"] = syscall.TIOCSSERIAL
//# OLD <{sTIOCSSERIAL}> 0
//# NEW <{sTIOCSSERIAL}> 1
//? Consts["/syscall/AF_IUCV"] = syscall.AF_IUCV
//# OLD <{sAF_IUCV}> 0
//# NEW <{sAF_IUCV}> 1
//? Consts["/syscall/IPV6_RECVHOPLIMIT"] = syscall.IPV6_RECVHOPLIMIT
//# OLD <{sIPV6_RECVHOPLIMIT}> 0
//# NEW <{sIPV6_RECVHOPLIMIT}> 1
//? Consts["/syscall/B2400"] = syscall.B2400
//# OLD <{sB2400}> 0
//# NEW <{sB2400}> 1
//? Consts["/syscall/RTM_DELROUTE"] = syscall.RTM_DELROUTE
//# OLD <{sRTM_DELROUTE}> 0
//# NEW <{sRTM_DELROUTE}> 1
//? Consts["/syscall/TIOCGRS485"] = syscall.TIOCGRS485
//# OLD <{sTIOCGRS485}> 0
//# NEW <{sTIOCGRS485}> 1
//? Consts["/syscall/SYS_GET_ROBUST_LIST"] = syscall.SYS_GET_ROBUST_LIST
//# OLD <{sSYS_GET_ROBUST_LIST}> 0
//# NEW <{sSYS_GET_ROBUST_LIST}> 1
//? Consts["/syscall/AF_INET"] = syscall.AF_INET
//# OLD <{sAF_INET}> 0
//# NEW <{sAF_INET}> 1
Funcs["/syscall/RawSyscall6"] = syscall.RawSyscall6
//# OLD <{sRawSyscall6}> 0
//# NEW <{sRawSyscall6}> 1
Types["/syscall/SockFilter"] = new(*syscall.SockFilter)
//# OLD <{sSockFilter}> 0
//# NEW <{sSockFilter}> 1
//? Consts["/syscall/RTF_NONEXTHOP"] = syscall.RTF_NONEXTHOP
//# OLD <{sRTF_NONEXTHOP}> 0
//# NEW <{sRTF_NONEXTHOP}> 1
//? Consts["/syscall/DT_FIFO"] = syscall.DT_FIFO
//# OLD <{sDT_FIFO}> 0
//# NEW <{sDT_FIFO}> 1
//? Consts["/syscall/S_ISVTX"] = syscall.S_ISVTX
//# OLD <{sS_ISVTX}> 0
//# NEW <{sS_ISVTX}> 1
//? Consts["/syscall/MSG_CMSG_CLOEXEC"] = syscall.MSG_CMSG_CLOEXEC
//# OLD <{sMSG_CMSG_CLOEXEC}> 0
//# NEW <{sMSG_CMSG_CLOEXEC}> 1
//? Consts["/syscall/ELIBMAX"] = syscall.ELIBMAX
//# OLD <{sELIBMAX}> 0
//# NEW <{sELIBMAX}> 1
//? Consts["/syscall/TUNSETSNDBUF"] = syscall.TUNSETSNDBUF
//# OLD <{sTUNSETSNDBUF}> 0
//# NEW <{sTUNSETSNDBUF}> 1
//? Consts["/syscall/EISDIR"] = syscall.EISDIR
//# OLD <{sEISDIR}> 0
//# NEW <{sEISDIR}> 1
//? Consts["/syscall/F_SETLKW64"] = syscall.F_SETLKW64
//# OLD <{sF_SETLKW64}> 0
//# NEW <{sF_SETLKW64}> 1
//? Consts["/syscall/MSG_PEEK"] = syscall.MSG_PEEK
//# OLD <{sMSG_PEEK}> 0
//# NEW <{sMSG_PEEK}> 1
//? Consts["/syscall/SYS_REMAP_FILE_PAGES"] = syscall.SYS_REMAP_FILE_PAGES
//# OLD <{sSYS_REMAP_FILE_PAGES}> 0
//# NEW <{sSYS_REMAP_FILE_PAGES}> 1
//? Consts["/syscall/RTAX_FEATURE_ALLFRAG"] = syscall.RTAX_FEATURE_ALLFRAG
//# OLD <{sRTAX_FEATURE_ALLFRAG}> 0
//# NEW <{sRTAX_FEATURE_ALLFRAG}> 1
//? Consts["/syscall/SIOCGIFMAP"] = syscall.SIOCGIFMAP
//# OLD <{sSIOCGIFMAP}> 0
//# NEW <{sSIOCGIFMAP}> 1
//? Consts["/syscall/SIOCGSTAMP"] = syscall.SIOCGSTAMP
//# OLD <{sSIOCGSTAMP}> 0
//# NEW <{sSIOCGSTAMP}> 1
//? Consts["/syscall/EPOLLOUT"] = syscall.EPOLLOUT
//# OLD <{sEPOLLOUT}> 0
//# NEW <{sEPOLLOUT}> 1
//? Consts["/syscall/TIOCGPTN"] = syscall.TIOCGPTN
//# OLD <{sTIOCGPTN}> 0
//# NEW <{sTIOCGPTN}> 1
//? Consts["/syscall/IPPROTO_NONE"] = syscall.IPPROTO_NONE
//# OLD <{sIPPROTO_NONE}> 0
//# NEW <{sIPPROTO_NONE}> 1
//? Consts["/syscall/SYS_DUP"] = syscall.SYS_DUP
//# OLD <{sSYS_DUP}> 0
//# NEW <{sSYS_DUP}> 1
//? Consts["/syscall/PTRACE_GETFPXREGS"] = syscall.PTRACE_GETFPXREGS
//# OLD <{sPTRACE_GETFPXREGS}> 0
//# NEW <{sPTRACE_GETFPXREGS}> 1
//? Consts["/syscall/AF_WANPIPE"] = syscall.AF_WANPIPE
//# OLD <{sAF_WANPIPE}> 0
//# NEW <{sAF_WANPIPE}> 1
//? Consts["/syscall/IN_CLASSC_NET"] = syscall.IN_CLASSC_NET
//# OLD <{sIN_CLASSC_NET}> 0
//# NEW <{sIN_CLASSC_NET}> 1
//? Consts["/syscall/PTRACE_O_MASK"] = syscall.PTRACE_O_MASK
//# OLD <{sPTRACE_O_MASK}> 0
//# NEW <{sPTRACE_O_MASK}> 1
//? Consts["/syscall/DT_SOCK"] = syscall.DT_SOCK
//# OLD <{sDT_SOCK}> 0
//# NEW <{sDT_SOCK}> 1
//? Consts["/syscall/O_DIRECTORY"] = syscall.O_DIRECTORY
//# OLD <{sO_DIRECTORY}> 0
//# NEW <{sO_DIRECTORY}> 1
//? Consts["/syscall/PR_GET_KEEPCAPS"] = syscall.PR_GET_KEEPCAPS
//# OLD <{sPR_GET_KEEPCAPS}> 0
//# NEW <{sPR_GET_KEEPCAPS}> 1
//? Consts["/syscall/IFF_SLAVE"] = syscall.IFF_SLAVE
//# OLD <{sIFF_SLAVE}> 0
//# NEW <{sIFF_SLAVE}> 1
//? Consts["/syscall/ARPHRD_HDLC"] = syscall.ARPHRD_HDLC
//# OLD <{sARPHRD_HDLC}> 0
//# NEW <{sARPHRD_HDLC}> 1
//? Consts["/syscall/TIOCSPTLCK"] = syscall.TIOCSPTLCK
//# OLD <{sTIOCSPTLCK}> 0
//# NEW <{sTIOCSPTLCK}> 1
Funcs["/syscall/Open"] = syscall.Open
//# OLD <{sOpen}> 1
//# NEW <{sOpen}> 2
//? Consts["/syscall/SYS_SETREUID"] = syscall.SYS_SETREUID
//# OLD <{sSYS_SETREUID}> 0
//# NEW <{sSYS_SETREUID}> 1
//? Consts["/syscall/ENOCSI"] = syscall.ENOCSI
//# OLD <{sENOCSI}> 0
//# NEW <{sENOCSI}> 1
//? Consts["/syscall/EPOLLIN"] = syscall.EPOLLIN
//# OLD <{sEPOLLIN}> 0
//# NEW <{sEPOLLIN}> 1
//? Consts["/syscall/RTAX_INITCWND"] = syscall.RTAX_INITCWND
//# OLD <{sRTAX_INITCWND}> 0
//# NEW <{sRTAX_INITCWND}> 1
//? Consts["/syscall/MS_UNBINDABLE"] = syscall.MS_UNBINDABLE
//# OLD <{sMS_UNBINDABLE}> 0
//# NEW <{sMS_UNBINDABLE}> 1
//? Consts["/syscall/IFNAMSIZ"] = syscall.IFNAMSIZ
//# OLD <{sIFNAMSIZ}> 0
//# NEW <{sIFNAMSIZ}> 1
//? Consts["/syscall/EFAULT"] = syscall.EFAULT
//# OLD <{sEFAULT}> 0
//# NEW <{sEFAULT}> 1
//? Consts["/syscall/SO_RCVLOWAT"] = syscall.SO_RCVLOWAT
//# OLD <{sSO_RCVLOWAT}> 0
//# NEW <{sSO_RCVLOWAT}> 1
Funcs["/syscall/NsecToTimespec"] = syscall.NsecToTimespec
//# OLD <{sNsecToTimespec}> 0
//# NEW <{sNsecToTimespec}> 1
//? Consts["/syscall/BPF_LDX"] = syscall.BPF_LDX
//# OLD <{sBPF_LDX}> 0
//# NEW <{sBPF_LDX}> 1
//? Consts["/syscall/SIOCGIFTXQLEN"] = syscall.SIOCGIFTXQLEN
//# OLD <{sSIOCGIFTXQLEN}> 0
//# NEW <{sSIOCGIFTXQLEN}> 1
//? Consts["/syscall/MS_SLAVE"] = syscall.MS_SLAVE
//# OLD <{sMS_SLAVE}> 0
//# NEW <{sMS_SLAVE}> 1
//? Consts["/syscall/TCP_KEEPIDLE"] = syscall.TCP_KEEPIDLE
//# OLD <{sTCP_KEEPIDLE}> 0
//# NEW <{sTCP_KEEPIDLE}> 1
Types["/syscall/Fsid"] = new(*syscall.Fsid)
//# OLD <{sFsid}> 0
//# NEW <{sFsid}> 1
Funcs["/syscall/Fchdir"] = syscall.Fchdir
//# OLD <{sFchdir}> 0
//# NEW <{sFchdir}> 1
//? Consts["/syscall/IP_DF"] = syscall.IP_DF
//# OLD <{sIP_DF}> 0
//# NEW <{sIP_DF}> 1
//? Consts["/syscall/SO_SNDBUFFORCE"] = syscall.SO_SNDBUFFORCE
//# OLD <{sSO_SNDBUFFORCE}> 0
//# NEW <{sSO_SNDBUFFORCE}> 1
//? Consts["/syscall/SYS_SETPRIORITY"] = syscall.SYS_SETPRIORITY
//# OLD <{sSYS_SETPRIORITY}> 0
//# NEW <{sSYS_SETPRIORITY}> 1
Types["/syscall/NlAttr"] = new(*syscall.NlAttr)
//# OLD <{sNlAttr}> 0
//# NEW <{sNlAttr}> 1
Types["/syscall/IfAddrmsg"] = new(*syscall.IfAddrmsg)
//# OLD <{sIfAddrmsg}> 0
//# NEW <{sIfAddrmsg}> 1
//? Consts["/syscall/PathMax"] = syscall.PathMax
//# OLD <{sPathMax}> 0
//# NEW <{sPathMax}> 1
Funcs["/syscall/Mkdirat"] = syscall.Mkdirat
//# OLD <{sMkdirat}> 0
//# NEW <{sMkdirat}> 1
//? Consts["/syscall/SIOCGRARP"] = syscall.SIOCGRARP
//# OLD <{sSIOCGRARP}> 0
//# NEW <{sSIOCGRARP}> 1
//? Consts["/syscall/DT_CHR"] = syscall.DT_CHR
//# OLD <{sDT_CHR}> 0
//# NEW <{sDT_CHR}> 1
//? Consts["/syscall/CS5"] = syscall.CS5
//# OLD <{sCS5}> 0
//# NEW <{sCS5}> 1
//? Consts["/syscall/PACKET_RX_RING"] = syscall.PACKET_RX_RING
//# OLD <{sPACKET_RX_RING}> 0
//# NEW <{sPACKET_RX_RING}> 1
//? Consts["/syscall/SYS_LINKAT"] = syscall.SYS_LINKAT
//# OLD <{sSYS_LINKAT}> 0
//# NEW <{sSYS_LINKAT}> 1
//? Consts["/syscall/MS_MOVE"] = syscall.MS_MOVE
//# OLD <{sMS_MOVE}> 0
//# NEW <{sMS_MOVE}> 1
//? Consts["/syscall/PTRACE_SETREGSET"] = syscall.PTRACE_SETREGSET
//# OLD <{sPTRACE_SETREGSET}> 0
//# NEW <{sPTRACE_SETREGSET}> 1
//? Consts["/syscall/SYS_MSYNC"] = syscall.SYS_MSYNC
//# OLD <{sSYS_MSYNC}> 0
//# NEW <{sSYS_MSYNC}> 1
//? Consts["/syscall/IN_LOOPBACKNET"] = syscall.IN_LOOPBACKNET
//# OLD <{sIN_LOOPBACKNET}> 0
//# NEW <{sIN_LOOPBACKNET}> 1
//? Consts["/syscall/PR_SET_TIMING"] = syscall.PR_SET_TIMING
//# OLD <{sPR_SET_TIMING}> 0
//# NEW <{sPR_SET_TIMING}> 1
//? Consts["/syscall/PR_TIMING_STATISTICAL"] = syscall.PR_TIMING_STATISTICAL
//# OLD <{sPR_TIMING_STATISTICAL}> 0
//# NEW <{sPR_TIMING_STATISTICAL}> 1
Funcs["/syscall/Mlockall"] = syscall.Mlockall
//# OLD <{sMlockall}> 0
//# NEW <{sMlockall}> 1
//? Consts["/syscall/RLIM_INFINITY"] = syscall.RLIM_INFINITY
//# OLD <{sRLIM_INFINITY}> 0
//# NEW <{sRLIM_INFINITY}> 1
//? Consts["/syscall/RTAX_FEATURE_TIMESTAMP"] = syscall.RTAX_FEATURE_TIMESTAMP
//# OLD <{sRTAX_FEATURE_TIMESTAMP}> 0
//# NEW <{sRTAX_FEATURE_TIMESTAMP}> 1
//? Consts["/syscall/SIOCSRARP"] = syscall.SIOCSRARP
//# OLD <{sSIOCSRARP}> 0
//# NEW <{sSIOCSRARP}> 1
//? Consts["/syscall/PTRACE_OLDSETOPTIONS"] = syscall.PTRACE_OLDSETOPTIONS
//# OLD <{sPTRACE_OLDSETOPTIONS}> 0
//# NEW <{sPTRACE_OLDSETOPTIONS}> 1
//? Consts["/syscall/EDESTADDRREQ"] = syscall.EDESTADDRREQ
//# OLD <{sEDESTADDRREQ}> 0
//# NEW <{sEDESTADDRREQ}> 1
//? Consts["/syscall/IFF_PROMISC"] = syscall.IFF_PROMISC
//# OLD <{sIFF_PROMISC}> 0
//# NEW <{sIFF_PROMISC}> 1
//? Consts["/syscall/SIOCSIFDSTADDR"] = syscall.SIOCSIFDSTADDR
//# OLD <{sSIOCSIFDSTADDR}> 0
//# NEW <{sSIOCSIFDSTADDR}> 1
//? Consts["/syscall/TCP_DEFER_ACCEPT"] = syscall.TCP_DEFER_ACCEPT
//# OLD <{sTCP_DEFER_ACCEPT}> 0
//# NEW <{sTCP_DEFER_ACCEPT}> 1
Funcs["/syscall/Fchownat"] = syscall.Fchownat
//# OLD <{sFchownat}> 0
//# NEW <{sFchownat}> 1
//? Consts["/syscall/TCP_NODELAY"] = syscall.TCP_NODELAY
//# OLD <{sTCP_NODELAY}> 0
//# NEW <{sTCP_NODELAY}> 1
//? Consts["/syscall/BPF_JGE"] = syscall.BPF_JGE
//# OLD <{sBPF_JGE}> 0
//# NEW <{sBPF_JGE}> 1
//? Consts["/syscall/SYS_MLOCK"] = syscall.SYS_MLOCK
//# OLD <{sSYS_MLOCK}> 0
//# NEW <{sSYS_MLOCK}> 1
//? Consts["/syscall/TIOCSERCONFIG"] = syscall.TIOCSERCONFIG
//# OLD <{sTIOCSERCONFIG}> 0
//# NEW <{sTIOCSERCONFIG}> 1
//? Consts["/syscall/BPF_MINOR_VERSION"] = syscall.BPF_MINOR_VERSION
//# OLD <{sBPF_MINOR_VERSION}> 0
//# NEW <{sBPF_MINOR_VERSION}> 1
//? Consts["/syscall/RTA_OIF"] = syscall.RTA_OIF
//# OLD <{sRTA_OIF}> 0
//# NEW <{sRTA_OIF}> 1
//? Consts["/syscall/NLA_HDRLEN"] = syscall.NLA_HDRLEN
//# OLD <{sNLA_HDRLEN}> 0
//# NEW <{sNLA_HDRLEN}> 1
//? Consts["/syscall/ENOTEMPTY"] = syscall.ENOTEMPTY
//# OLD <{sENOTEMPTY}> 0
//# NEW <{sENOTEMPTY}> 1
//? Consts["/syscall/F_GETOWN_EX"] = syscall.F_GETOWN_EX
//# OLD <{sF_GETOWN_EX}> 0
//# NEW <{sF_GETOWN_EX}> 1
//? Consts["/syscall/EDEADLOCK"] = syscall.EDEADLOCK
//# OLD <{sEDEADLOCK}> 0
//# NEW <{sEDEADLOCK}> 1
Funcs["/syscall/Recvmsg"] = syscall.Recvmsg
//# OLD <{sRecvmsg}> 0
//# NEW <{sRecvmsg}> 1
//? Consts["/syscall/NETLINK_IP6_FW"] = syscall.NETLINK_IP6_FW
//# OLD <{sNETLINK_IP6_FW}> 0
//# NEW <{sNETLINK_IP6_FW}> 1
Types["/syscall/Sockaddr"] = new(*syscall.Sockaddr)
//# OLD <{sSockaddr}> 0
//# NEW <{sSockaddr}> 1
Funcs["/syscall/Shutdown"] = syscall.Shutdown
//# OLD <{sShutdown}> 0
//# NEW <{sShutdown}> 1
Types["/syscall/SysProcAttr"] = new(*syscall.SysProcAttr)
//# OLD <{sSysProcAttr}> 0
//# NEW <{sSysProcAttr}> 1
//? Consts["/syscall/SYS_FCHMOD"] = syscall.SYS_FCHMOD
//# OLD <{sSYS_FCHMOD}> 0
//# NEW <{sSYS_FCHMOD}> 1
//? Consts["/syscall/IPPROTO_ENCAP"] = syscall.IPPROTO_ENCAP
//# OLD <{sIPPROTO_ENCAP}> 0
//# NEW <{sIPPROTO_ENCAP}> 1
//? Consts["/syscall/SIOCGIFCOUNT"] = syscall.SIOCGIFCOUNT
//# OLD <{sSIOCGIFCOUNT}> 0
//# NEW <{sSIOCGIFCOUNT}> 1
//? Consts["/syscall/ISTRIP"] = syscall.ISTRIP
//# OLD <{sISTRIP}> 0
//# NEW <{sISTRIP}> 1
//? Consts["/syscall/ENETUNREACH"] = syscall.ENETUNREACH
//# OLD <{sENETUNREACH}> 0
//# NEW <{sENETUNREACH}> 1
//? Consts["/syscall/IFA_F_HOMEADDRESS"] = syscall.IFA_F_HOMEADDRESS
//# OLD <{sIFA_F_HOMEADDRESS}> 0
//# NEW <{sIFA_F_HOMEADDRESS}> 1
Funcs["/syscall/Getppid"] = syscall.Getppid
//# OLD <{sGetppid}> 0
//# NEW <{sGetppid}> 1
//? Consts["/syscall/IN_MOVE"] = syscall.IN_MOVE
//# OLD <{sIN_MOVE}> 0
//# NEW <{sIN_MOVE}> 1
//? Consts["/syscall/IPPROTO_DSTOPTS"] = syscall.IPPROTO_DSTOPTS
//# OLD <{sIPPROTO_DSTOPTS}> 0
//# NEW <{sIPPROTO_DSTOPTS}> 1
//? Consts["/syscall/SYS_SWAPOFF"] = syscall.SYS_SWAPOFF
//# OLD <{sSYS_SWAPOFF}> 0
//# NEW <{sSYS_SWAPOFF}> 1
Vars["/syscall/SocketDisableIPv6"] = &syscall.SocketDisableIPv6
//# OLD <{sSocketDisableIPv6}> 0
//# NEW <{sSocketDisableIPv6}> 1
//? Consts["/syscall/ETH_P_LINK_CTL"] = syscall.ETH_P_LINK_CTL
//# OLD <{sETH_P_LINK_CTL}> 0
//# NEW <{sETH_P_LINK_CTL}> 1
//? Consts["/syscall/B38400"] = syscall.B38400
//# OLD <{sB38400}> 0
//# NEW <{sB38400}> 1
//? Consts["/syscall/SYS_EPOLL_CREATE"] = syscall.SYS_EPOLL_CREATE
//# OLD <{sSYS_EPOLL_CREATE}> 0
//# NEW <{sSYS_EPOLL_CREATE}> 1
//? Consts["/syscall/SYS_GET_MEMPOLICY"] = syscall.SYS_GET_MEMPOLICY
//# OLD <{sSYS_GET_MEMPOLICY}> 0
//# NEW <{sSYS_GET_MEMPOLICY}> 1
//? Consts["/syscall/IN_CLASSC_HOST"] = syscall.IN_CLASSC_HOST
//# OLD <{sIN_CLASSC_HOST}> 0
//# NEW <{sIN_CLASSC_HOST}> 1
//? Consts["/syscall/RTF_UP"] = syscall.RTF_UP
//# OLD <{sRTF_UP}> 0
//# NEW <{sRTF_UP}> 1
//? Consts["/syscall/VREPRINT"] = syscall.VREPRINT
//# OLD <{sVREPRINT}> 0
//# NEW <{sVREPRINT}> 1
//? Consts["/syscall/NETLINK_NO_ENOBUFS"] = syscall.NETLINK_NO_ENOBUFS
//# OLD <{sNETLINK_NO_ENOBUFS}> 0
//# NEW <{sNETLINK_NO_ENOBUFS}> 1
//? Consts["/syscall/AF_X25"] = syscall.AF_X25
//# OLD <{sAF_X25}> 0
//# NEW <{sAF_X25}> 1
//? Consts["/syscall/MS_MGC_MSK"] = syscall.MS_MGC_MSK
//# OLD <{sMS_MGC_MSK}> 0
//# NEW <{sMS_MGC_MSK}> 1
//? Consts["/syscall/IP_HDRINCL"] = syscall.IP_HDRINCL
//# OLD <{sIP_HDRINCL}> 0
//# NEW <{sIP_HDRINCL}> 1
//? Consts["/syscall/SYS_SETSID"] = syscall.SYS_SETSID
//# OLD <{sSYS_SETSID}> 0
//# NEW <{sSYS_SETSID}> 1
//? Consts["/syscall/SYS_GETRESUID"] = syscall.SYS_GETRESUID
//# OLD <{sSYS_GETRESUID}> 0
//# NEW <{sSYS_GETRESUID}> 1
Funcs["/syscall/Fallocate"] = syscall.Fallocate
//# OLD <{sFallocate}> 0
//# NEW <{sFallocate}> 1
//? Consts["/syscall/SYS_UTIMES"] = syscall.SYS_UTIMES
//# OLD <{sSYS_UTIMES}> 0
//# NEW <{sSYS_UTIMES}> 1
//? Consts["/syscall/SO_DEBUG"] = syscall.SO_DEBUG
//# OLD <{sSO_DEBUG}> 0
//# NEW <{sSO_DEBUG}> 1
Funcs["/syscall/Access"] = syscall.Access
//# OLD <{sAccess}> 0
//# NEW <{sAccess}> 1
//? Consts["/syscall/IPV6_2292PKTINFO"] = syscall.IPV6_2292PKTINFO
//# OLD <{sIPV6_2292PKTINFO}> 0
//# NEW <{sIPV6_2292PKTINFO}> 1
Funcs["/syscall/EpollCreate1"] = syscall.EpollCreate1
//# OLD <{sEpollCreate1}> 0
//# NEW <{sEpollCreate1}> 1
//? Consts["/syscall/F_GETLK64"] = syscall.F_GETLK64
//# OLD <{sF_GETLK64}> 0
//# NEW <{sF_GETLK64}> 1
Types["/syscall/Inet4Pktinfo"] = new(*syscall.Inet4Pktinfo)
//# OLD <{sInet4Pktinfo}> 0
//# NEW <{sInet4Pktinfo}> 1
//? Consts["/syscall/SYS_CREAT"] = syscall.SYS_CREAT
//# OLD <{sSYS_CREAT}> 0
//# NEW <{sSYS_CREAT}> 1
//? Consts["/syscall/FD_SETSIZE"] = syscall.FD_SETSIZE
//# OLD <{sFD_SETSIZE}> 0
//# NEW <{sFD_SETSIZE}> 1
Funcs["/syscall/SetsockoptIPMreqn"] = syscall.SetsockoptIPMreqn
//# OLD <{sSetsockoptIPMreqn}> 0
//# NEW <{sSetsockoptIPMreqn}> 1
//? Consts["/syscall/IP_OFFMASK"] = syscall.IP_OFFMASK
//# OLD <{sIP_OFFMASK}> 0
//# NEW <{sIP_OFFMASK}> 1
Types["/syscall/RtAttr"] = new(*syscall.RtAttr)
//# OLD <{sRtAttr}> 0
//# NEW <{sRtAttr}> 1
//? Consts["/syscall/SYS_SWAPON"] = syscall.SYS_SWAPON
//# OLD <{sSYS_SWAPON}> 0
//# NEW <{sSYS_SWAPON}> 1
//? Consts["/syscall/SO_SNDLOWAT"] = syscall.SO_SNDLOWAT
//# OLD <{sSO_SNDLOWAT}> 0
//# NEW <{sSO_SNDLOWAT}> 1
//? Consts["/syscall/EPFNOSUPPORT"] = syscall.EPFNOSUPPORT
//# OLD <{sEPFNOSUPPORT}> 0
//# NEW <{sEPFNOSUPPORT}> 1
//? Consts["/syscall/ETH_P_802_2"] = syscall.ETH_P_802_2
//# OLD <{sETH_P_802_2}> 0
//# NEW <{sETH_P_802_2}> 1
//? Consts["/syscall/SIOCSIFLINK"] = syscall.SIOCSIFLINK
//# OLD <{sSIOCSIFLINK}> 0
//# NEW <{sSIOCSIFLINK}> 1
//? Consts["/syscall/IP_MAXPACKET"] = syscall.IP_MAXPACKET
//# OLD <{sIP_MAXPACKET}> 0
//# NEW <{sIP_MAXPACKET}> 1
//? Consts["/syscall/RTPROT_BOOT"] = syscall.RTPROT_BOOT
//# OLD <{sRTPROT_BOOT}> 0
//# NEW <{sRTPROT_BOOT}> 1
Funcs["/syscall/PtraceGetRegs"] = syscall.PtraceGetRegs
//# OLD <{sPtraceGetRegs}> 0
//# NEW <{sPtraceGetRegs}> 1
//? Consts["/syscall/TIOCM_RNG"] = syscall.TIOCM_RNG
//# OLD <{sTIOCM_RNG}> 0
//# NEW <{sTIOCM_RNG}> 1
//? Consts["/syscall/IFLA_WIRELESS"] = syscall.IFLA_WIRELESS
//# OLD <{sIFLA_WIRELESS}> 0
//# NEW <{sIFLA_WIRELESS}> 1
//? Consts["/syscall/IEXTEN"] = syscall.IEXTEN
//# OLD <{sIEXTEN}> 0
//# NEW <{sIEXTEN}> 1
//? Consts["/syscall/IP_XFRM_POLICY"] = syscall.IP_XFRM_POLICY
//# OLD <{sIP_XFRM_POLICY}> 0
//# NEW <{sIP_XFRM_POLICY}> 1
//? Consts["/syscall/BPF_A"] = syscall.BPF_A
//# OLD <{sBPF_A}> 0
//# NEW <{sBPF_A}> 1
//? Consts["/syscall/SIOCSIFHWBROADCAST"] = syscall.SIOCSIFHWBROADCAST
//# OLD <{sSIOCSIFHWBROADCAST}> 0
//# NEW <{sSIOCSIFHWBROADCAST}> 1
//? Consts["/syscall/BPF_MEMWORDS"] = syscall.BPF_MEMWORDS
//# OLD <{sBPF_MEMWORDS}> 0
//# NEW <{sBPF_MEMWORDS}> 1
//? Consts["/syscall/SYS_UTIMENSAT"] = syscall.SYS_UTIMENSAT
//# OLD <{sSYS_UTIMENSAT}> 0
//# NEW <{sSYS_UTIMENSAT}> 1
Funcs["/syscall/LsfStmt"] = syscall.LsfStmt
//# OLD <{sLsfStmt}> 0
//# NEW <{sLsfStmt}> 1
//? Consts["/syscall/ARPHRD_IRDA"] = syscall.ARPHRD_IRDA
//# OLD <{sARPHRD_IRDA}> 0
//# NEW <{sARPHRD_IRDA}> 1
//? Consts["/syscall/IFA_MAX"] = syscall.IFA_MAX
//# OLD <{sIFA_MAX}> 0
//# NEW <{sIFA_MAX}> 1
//? Consts["/syscall/RTM_GETADDRLABEL"] = syscall.RTM_GETADDRLABEL
//# OLD <{sRTM_GETADDRLABEL}> 0
//# NEW <{sRTM_GETADDRLABEL}> 1
//? Consts["/syscall/SIOCGIFBRDADDR"] = syscall.SIOCGIFBRDADDR
//# OLD <{sSIOCGIFBRDADDR}> 0
//# NEW <{sSIOCGIFBRDADDR}> 1
//? Consts["/syscall/SYS_UMOUNT2"] = syscall.SYS_UMOUNT2
//# OLD <{sSYS_UMOUNT2}> 0
//# NEW <{sSYS_UMOUNT2}> 1
//? Consts["/syscall/SO_ACCEPTCONN"] = syscall.SO_ACCEPTCONN
//# OLD <{sSO_ACCEPTCONN}> 0
//# NEW <{sSO_ACCEPTCONN}> 1
//? Consts["/syscall/PACKET_MR_MULTICAST"] = syscall.PACKET_MR_MULTICAST
//# OLD <{sPACKET_MR_MULTICAST}> 0
//# NEW <{sPACKET_MR_MULTICAST}> 1
//? Consts["/syscall/B110"] = syscall.B110
//# OLD <{sB110}> 0
//# NEW <{sB110}> 1
//? Consts["/syscall/TCP_MSS"] = syscall.TCP_MSS
//# OLD <{sTCP_MSS}> 0
//# NEW <{sTCP_MSS}> 1
//? Consts["/syscall/EDQUOT"] = syscall.EDQUOT
//# OLD <{sEDQUOT}> 0
//# NEW <{sEDQUOT}> 1
//? Consts["/syscall/PTRACE_GETFPREGS"] = syscall.PTRACE_GETFPREGS
//# OLD <{sPTRACE_GETFPREGS}> 0
//# NEW <{sPTRACE_GETFPREGS}> 1
//? Consts["/syscall/PTRACE_O_TRACEVFORKDONE"] = syscall.PTRACE_O_TRACEVFORKDONE
//# OLD <{sPTRACE_O_TRACEVFORKDONE}> 0
//# NEW <{sPTRACE_O_TRACEVFORKDONE}> 1
//? Consts["/syscall/ETH_P_BPQ"] = syscall.ETH_P_BPQ
//# OLD <{sETH_P_BPQ}> 0
//# NEW <{sETH_P_BPQ}> 1
//? Consts["/syscall/SYS_PRLIMIT64"] = syscall.SYS_PRLIMIT64
//# OLD <{sSYS_PRLIMIT64}> 0
//# NEW <{sSYS_PRLIMIT64}> 1
//? Consts["/syscall/SYS_IOPRIO_GET"] = syscall.SYS_IOPRIO_GET
//# OLD <{sSYS_IOPRIO_GET}> 0
//# NEW <{sSYS_IOPRIO_GET}> 1
//? Consts["/syscall/SIGXCPU"] = syscall.SIGXCPU
//# OLD <{sSIGXCPU}> 0
//# NEW <{sSIGXCPU}> 1
//? Consts["/syscall/PR_FP_EXC_UND"] = syscall.PR_FP_EXC_UND
//# OLD <{sPR_FP_EXC_UND}> 0
//# NEW <{sPR_FP_EXC_UND}> 1
//? Consts["/syscall/SYS_MODIFY_LDT"] = syscall.SYS_MODIFY_LDT
//# OLD <{sSYS_MODIFY_LDT}> 0
//# NEW <{sSYS_MODIFY_LDT}> 1
//? Consts["/syscall/IXOFF"] = syscall.IXOFF
//# OLD <{sIXOFF}> 0
//# NEW <{sIXOFF}> 1
//? Consts["/syscall/ARPHRD_DDCMP"] = syscall.ARPHRD_DDCMP
//# OLD <{sARPHRD_DDCMP}> 0
//# NEW <{sARPHRD_DDCMP}> 1
//? Consts["/syscall/IN_IGNORED"] = syscall.IN_IGNORED
//# OLD <{sIN_IGNORED}> 0
//# NEW <{sIN_IGNORED}> 1
//? Consts["/syscall/SYS_TIMER_GETTIME"] = syscall.SYS_TIMER_GETTIME
//# OLD <{sSYS_TIMER_GETTIME}> 0
//# NEW <{sSYS_TIMER_GETTIME}> 1
//? Consts["/syscall/IPV6_XFRM_POLICY"] = syscall.IPV6_XFRM_POLICY
//# OLD <{sIPV6_XFRM_POLICY}> 0
//# NEW <{sIPV6_XFRM_POLICY}> 1
//? Consts["/syscall/BPF_ADD"] = syscall.BPF_ADD
//# OLD <{sBPF_ADD}> 0
//# NEW <{sBPF_ADD}> 1
//? Consts["/syscall/CSIZE"] = syscall.CSIZE
//# OLD <{sCSIZE}> 0
//# NEW <{sCSIZE}> 1
//? Consts["/syscall/RUSAGE_SELF"] = syscall.RUSAGE_SELF
//# OLD <{sRUSAGE_SELF}> 0
//# NEW <{sRUSAGE_SELF}> 1
//? Consts["/syscall/SYS_READAHEAD"] = syscall.SYS_READAHEAD
//# OLD <{sSYS_READAHEAD}> 0
//# NEW <{sSYS_READAHEAD}> 1
//? Consts["/syscall/NETLINK_USERSOCK"] = syscall.NETLINK_USERSOCK
//# OLD <{sNETLINK_USERSOCK}> 0
//# NEW <{sNETLINK_USERSOCK}> 1
//? Consts["/syscall/SYS_GETDENTS64"] = syscall.SYS_GETDENTS64
//# OLD <{sSYS_GETDENTS64}> 0
//# NEW <{sSYS_GETDENTS64}> 1
//? Consts["/syscall/SYS_TIMERFD_GETTIME"] = syscall.SYS_TIMERFD_GETTIME
//# OLD <{sSYS_TIMERFD_GETTIME}> 0
//# NEW <{sSYS_TIMERFD_GETTIME}> 1
//? Consts["/syscall/NETLINK_NFLOG"] = syscall.NETLINK_NFLOG
//# OLD <{sNETLINK_NFLOG}> 0
//# NEW <{sNETLINK_NFLOG}> 1
//? Consts["/syscall/RTF_MODIFIED"] = syscall.RTF_MODIFIED
//# OLD <{sRTF_MODIFIED}> 0
//# NEW <{sRTF_MODIFIED}> 1
//? Consts["/syscall/SYS_SCHED_RR_GET_INTERVAL"] = syscall.SYS_SCHED_RR_GET_INTERVAL
//# OLD <{sSYS_SCHED_RR_GET_INTERVAL}> 0
//# NEW <{sSYS_SCHED_RR_GET_INTERVAL}> 1
//? Consts["/syscall/SYS_TIMES"] = syscall.SYS_TIMES
//# OLD <{sSYS_TIMES}> 0
//# NEW <{sSYS_TIMES}> 1
//? Consts["/syscall/NETLINK_CONNECTOR"] = syscall.NETLINK_CONNECTOR
//# OLD <{sNETLINK_CONNECTOR}> 0
//# NEW <{sNETLINK_CONNECTOR}> 1
Funcs["/syscall/Rmdir"] = syscall.Rmdir
//# OLD <{sRmdir}> 0
//# NEW <{sRmdir}> 1
//? Consts["/syscall/F_GETFD"] = syscall.F_GETFD
//# OLD <{sF_GETFD}> 0
//# NEW <{sF_GETFD}> 1
//? Consts["/syscall/RTM_GETQDISC"] = syscall.RTM_GETQDISC
//# OLD <{sRTM_GETQDISC}> 0
//# NEW <{sRTM_GETQDISC}> 1
//? Consts["/syscall/ENXIO"] = syscall.ENXIO
//# OLD <{sENXIO}> 0
//# NEW <{sENXIO}> 1
//? Consts["/syscall/RTN_XRESOLVE"] = syscall.RTN_XRESOLVE
//# OLD <{sRTN_XRESOLVE}> 0
//# NEW <{sRTN_XRESOLVE}> 1
//? Consts["/syscall/SO_SECURITY_ENCRYPTION_TRANSPORT"] = syscall.SO_SECURITY_ENCRYPTION_TRANSPORT
//# OLD <{sSO_SECURITY_ENCRYPTION_TRANSPORT}> 0
//# NEW <{sSO_SECURITY_ENCRYPTION_TRANSPORT}> 1
Funcs["/syscall/Creat"] = syscall.Creat
//# OLD <{sCreat}> 0
//# NEW <{sCreat}> 1
//? Consts["/syscall/SYS_SETRLIMIT"] = syscall.SYS_SETRLIMIT
//# OLD <{sSYS_SETRLIMIT}> 0
//# NEW <{sSYS_SETRLIMIT}> 1
//? Consts["/syscall/RTCF_DIRECTSRC"] = syscall.RTCF_DIRECTSRC
//# OLD <{sRTCF_DIRECTSRC}> 0
//# NEW <{sRTCF_DIRECTSRC}> 1
Types["/syscall/Statfs_t"] = new(*syscall.Statfs_t)
//# OLD <{sStatfs_t}> 0
//# NEW <{sStatfs_t}> 1
Funcs["/syscall/Environ"] = syscall.Environ
//# OLD <{sEnviron}> 0
//# NEW <{sEnviron}> 1
//? Consts["/syscall/RTM_NEWPREFIX"] = syscall.RTM_NEWPREFIX
//# OLD <{sRTM_NEWPREFIX}> 0
//# NEW <{sRTM_NEWPREFIX}> 1
//? Consts["/syscall/NLMSG_OVERRUN"] = syscall.NLMSG_OVERRUN
//# OLD <{sNLMSG_OVERRUN}> 0
//# NEW <{sNLMSG_OVERRUN}> 1
//? Consts["/syscall/RTN_BLACKHOLE"] = syscall.RTN_BLACKHOLE
//# OLD <{sRTN_BLACKHOLE}> 0
//# NEW <{sRTN_BLACKHOLE}> 1
//? Consts["/syscall/ENONET"] = syscall.ENONET
//# OLD <{sENONET}> 0
//# NEW <{sENONET}> 1
//? Consts["/syscall/IFA_F_DADFAILED"] = syscall.IFA_F_DADFAILED
//# OLD <{sIFA_F_DADFAILED}> 0
//# NEW <{sIFA_F_DADFAILED}> 1
//? Consts["/syscall/PTRACE_KILL"] = syscall.PTRACE_KILL
//# OLD <{sPTRACE_KILL}> 0
//# NEW <{sPTRACE_KILL}> 1
//? Consts["/syscall/SIOCATMARK"] = syscall.SIOCATMARK
//# OLD <{sSIOCATMARK}> 0
//# NEW <{sSIOCATMARK}> 1
//? Consts["/syscall/PARENB"] = syscall.PARENB
//# OLD <{sPARENB}> 0
//# NEW <{sPARENB}> 1
//? Consts["/syscall/IP_PMTUDISC_PROBE"] = syscall.IP_PMTUDISC_PROBE
//# OLD <{sIP_PMTUDISC_PROBE}> 0
//# NEW <{sIP_PMTUDISC_PROBE}> 1
//? Consts["/syscall/MS_PRIVATE"] = syscall.MS_PRIVATE
//# OLD <{sMS_PRIVATE}> 0
//# NEW <{sMS_PRIVATE}> 1
//? Consts["/syscall/ETH_P_CONTROL"] = syscall.ETH_P_CONTROL
//# OLD <{sETH_P_CONTROL}> 0
//# NEW <{sETH_P_CONTROL}> 1
//? Consts["/syscall/F_SETOWN_EX"] = syscall.F_SETOWN_EX
//# OLD <{sF_SETOWN_EX}> 0
//# NEW <{sF_SETOWN_EX}> 1
Types["/syscall/Time_t"] = new(*syscall.Time_t)
//# OLD <{sTime_t}> 0
//# NEW <{sTime_t}> 1
//? Consts["/syscall/AF_ATMSVC"] = syscall.AF_ATMSVC
//# OLD <{sAF_ATMSVC}> 0
//# NEW <{sAF_ATMSVC}> 1
//? Consts["/syscall/F_SETFL"] = syscall.F_SETFL
//# OLD <{sF_SETFL}> 0
//# NEW <{sF_SETFL}> 1
//? Consts["/syscall/B1152000"] = syscall.B1152000
//# OLD <{sB1152000}> 0
//# NEW <{sB1152000}> 1
Funcs["/syscall/GetsockoptIPMreq"] = syscall.GetsockoptIPMreq
//# OLD <{sGetsockoptIPMreq}> 0
//# NEW <{sGetsockoptIPMreq}> 1
//? Consts["/syscall/SIGBUS"] = syscall.SIGBUS
//# OLD <{sSIGBUS}> 0
//# NEW <{sSIGBUS}> 1
//? Consts["/syscall/IFLA_LINK"] = syscall.IFLA_LINK
//# OLD <{sIFLA_LINK}> 0
//# NEW <{sIFLA_LINK}> 1
//? Consts["/syscall/NLM_F_MULTI"] = syscall.NLM_F_MULTI
//# OLD <{sNLM_F_MULTI}> 0
//# NEW <{sNLM_F_MULTI}> 1
//? Consts["/syscall/CLOCAL"] = syscall.CLOCAL
//# OLD <{sCLOCAL}> 0
//# NEW <{sCLOCAL}> 1
//? Consts["/syscall/SYS_INIT_MODULE"] = syscall.SYS_INIT_MODULE
//# OLD <{sSYS_INIT_MODULE}> 0
//# NEW <{sSYS_INIT_MODULE}> 1
//? Consts["/syscall/PACKET_MR_ALLMULTI"] = syscall.PACKET_MR_ALLMULTI
//# OLD <{sPACKET_MR_ALLMULTI}> 0
//# NEW <{sPACKET_MR_ALLMULTI}> 1
//? Consts["/syscall/BPF_OR"] = syscall.BPF_OR
//# OLD <{sBPF_OR}> 0
//# NEW <{sBPF_OR}> 1
//? Consts["/syscall/ETH_P_IP"] = syscall.ETH_P_IP
//# OLD <{sETH_P_IP}> 0
//# NEW <{sETH_P_IP}> 1
//? Consts["/syscall/RTM_NEWRULE"] = syscall.RTM_NEWRULE
//# OLD <{sRTM_NEWRULE}> 0
//# NEW <{sRTM_NEWRULE}> 1
//? Consts["/syscall/SYS_PSELECT6"] = syscall.SYS_PSELECT6
//# OLD <{sSYS_PSELECT6}> 0
//# NEW <{sSYS_PSELECT6}> 1
//? Consts["/syscall/IPV6_RECVDSTOPTS"] = syscall.IPV6_RECVDSTOPTS
//# OLD <{sIPV6_RECVDSTOPTS}> 0
//# NEW <{sIPV6_RECVDSTOPTS}> 1
//? Consts["/syscall/MSG_SYN"] = syscall.MSG_SYN
//# OLD <{sMSG_SYN}> 0
//# NEW <{sMSG_SYN}> 1
Funcs["/syscall/Connect"] = syscall.Connect
//# OLD <{sConnect}> 0
//# NEW <{sConnect}> 1
Funcs["/syscall/Getrlimit"] = syscall.Getrlimit
//# OLD <{sGetrlimit}> 0
//# NEW <{sGetrlimit}> 1
Funcs["/syscall/Nanosleep"] = syscall.Nanosleep
//# OLD <{sNanosleep}> 0
//# NEW <{sNanosleep}> 1
//? Consts["/syscall/RTPROT_MRT"] = syscall.RTPROT_MRT
//# OLD <{sRTPROT_MRT}> 0
//# NEW <{sRTPROT_MRT}> 1
//? Consts["/syscall/RTA_TABLE"] = syscall.RTA_TABLE
//# OLD <{sRTA_TABLE}> 0
//# NEW <{sRTA_TABLE}> 1
//? Consts["/syscall/MSG_TRYHARD"] = syscall.MSG_TRYHARD
//# OLD <{sMSG_TRYHARD}> 0
//# NEW <{sMSG_TRYHARD}> 1
//? Consts["/syscall/MSG_WAITALL"] = syscall.MSG_WAITALL
//# OLD <{sMSG_WAITALL}> 0
//# NEW <{sMSG_WAITALL}> 1
//? Consts["/syscall/NLM_F_REQUEST"] = syscall.NLM_F_REQUEST
//# OLD <{sNLM_F_REQUEST}> 0
//# NEW <{sNLM_F_REQUEST}> 1
//? Consts["/syscall/PACKET_OUTGOING"] = syscall.PACKET_OUTGOING
//# OLD <{sPACKET_OUTGOING}> 0
//# NEW <{sPACKET_OUTGOING}> 1
//? Consts["/syscall/NETLINK_XFRM"] = syscall.NETLINK_XFRM
//# OLD <{sNETLINK_XFRM}> 0
//# NEW <{sNETLINK_XFRM}> 1
//? Consts["/syscall/IP_RECVTTL"] = syscall.IP_RECVTTL
//# OLD <{sIP_RECVTTL}> 0
//# NEW <{sIP_RECVTTL}> 1
//? Consts["/syscall/LINUX_REBOOT_CMD_HALT"] = syscall.LINUX_REBOOT_CMD_HALT
//# OLD <{sLINUX_REBOOT_CMD_HALT}> 0
//# NEW <{sLINUX_REBOOT_CMD_HALT}> 1
//? Consts["/syscall/IN_CLOSE_WRITE"] = syscall.IN_CLOSE_WRITE
//# OLD <{sIN_CLOSE_WRITE}> 0
//# NEW <{sIN_CLOSE_WRITE}> 1
Funcs["/syscall/Chdir"] = syscall.Chdir
//# OLD <{sChdir}> 0
//# NEW <{sChdir}> 1
Funcs["/syscall/Wait4"] = syscall.Wait4
//# OLD <{sWait4}> 0
//# NEW <{sWait4}> 1
//? Consts["/syscall/S_BLKSIZE"] = syscall.S_BLKSIZE
//# OLD <{sS_BLKSIZE}> 0
//# NEW <{sS_BLKSIZE}> 1
Funcs["/syscall/Fsync"] = syscall.Fsync
//# OLD <{sFsync}> 0
//# NEW <{sFsync}> 1
//? Consts["/syscall/RTA_MULTIPATH"] = syscall.RTA_MULTIPATH
//# OLD <{sRTA_MULTIPATH}> 0
//# NEW <{sRTA_MULTIPATH}> 1
//? Consts["/syscall/RTF_HOST"] = syscall.RTF_HOST
//# OLD <{sRTF_HOST}> 0
//# NEW <{sRTF_HOST}> 1
//? Consts["/syscall/SYS_MSGSND"] = syscall.SYS_MSGSND
//# OLD <{sSYS_MSGSND}> 0
//# NEW <{sSYS_MSGSND}> 1
//? Consts["/syscall/IFLA_STATS"] = syscall.IFLA_STATS
//# OLD <{sIFLA_STATS}> 0
//# NEW <{sIFLA_STATS}> 1
//? Consts["/syscall/VSWTC"] = syscall.VSWTC
//# OLD <{sVSWTC}> 0
//# NEW <{sVSWTC}> 1
Funcs["/syscall/Getegid"] = syscall.Getegid
//# OLD <{sGetegid}> 0
//# NEW <{sGetegid}> 1
//? Consts["/syscall/PTRACE_EVENT_VFORK"] = syscall.PTRACE_EVENT_VFORK
//# OLD <{sPTRACE_EVENT_VFORK}> 0
//# NEW <{sPTRACE_EVENT_VFORK}> 1
Funcs["/syscall/Fstat"] = syscall.Fstat
//# OLD <{sFstat}> 0
//# NEW <{sFstat}> 1
//? Consts["/syscall/NETLINK_UNUSED"] = syscall.NETLINK_UNUSED
//# OLD <{sNETLINK_UNUSED}> 0
//# NEW <{sNETLINK_UNUSED}> 1
//? Consts["/syscall/IFLA_NET_NS_PID"] = syscall.IFLA_NET_NS_PID
//# OLD <{sIFLA_NET_NS_PID}> 0
//# NEW <{sIFLA_NET_NS_PID}> 1
//? Consts["/syscall/EPOLLWRBAND"] = syscall.EPOLLWRBAND
//# OLD <{sEPOLLWRBAND}> 0
//# NEW <{sEPOLLWRBAND}> 1
//? Consts["/syscall/IFA_LOCAL"] = syscall.IFA_LOCAL
//# OLD <{sIFA_LOCAL}> 0
//# NEW <{sIFA_LOCAL}> 1
//? Consts["/syscall/RTM_DELQDISC"] = syscall.RTM_DELQDISC
//# OLD <{sRTM_DELQDISC}> 0
//# NEW <{sRTM_DELQDISC}> 1
//? Consts["/syscall/SYS_TIMER_CREATE"] = syscall.SYS_TIMER_CREATE
//# OLD <{sSYS_TIMER_CREATE}> 0
//# NEW <{sSYS_TIMER_CREATE}> 1
//? Consts["/syscall/TIOCMBIC"] = syscall.TIOCMBIC
//# OLD <{sTIOCMBIC}> 0
//# NEW <{sTIOCMBIC}> 1
Types["/syscall/IPMreq"] = new(*syscall.IPMreq)
//# OLD <{sIPMreq}> 0
//# NEW <{sIPMreq}> 1
//? Consts["/syscall/SCM_CREDENTIALS"] = syscall.SCM_CREDENTIALS
//# OLD <{sSCM_CREDENTIALS}> 0
//# NEW <{sSCM_CREDENTIALS}> 1
//? Consts["/syscall/S_IFLNK"] = syscall.S_IFLNK
//# OLD <{sS_IFLNK}> 0
//# NEW <{sS_IFLNK}> 1
//? Consts["/syscall/PR_TSC_ENABLE"] = syscall.PR_TSC_ENABLE
//# OLD <{sPR_TSC_ENABLE}> 0
//# NEW <{sPR_TSC_ENABLE}> 1
//? Consts["/syscall/SYS_GETTID"] = syscall.SYS_GETTID
//# OLD <{sSYS_GETTID}> 0
//# NEW <{sSYS_GETTID}> 1
//? Consts["/syscall/ETH_P_IPX"] = syscall.ETH_P_IPX
//# OLD <{sETH_P_IPX}> 0
//# NEW <{sETH_P_IPX}> 1
//? Consts["/syscall/RTCF_NAT"] = syscall.RTCF_NAT
//# OLD <{sRTCF_NAT}> 0
//# NEW <{sRTCF_NAT}> 1
//? Consts["/syscall/SCM_RIGHTS"] = syscall.SCM_RIGHTS
//# OLD <{sSCM_RIGHTS}> 0
//# NEW <{sSCM_RIGHTS}> 1
//? Consts["/syscall/RTF_ADDRCONF"] = syscall.RTF_ADDRCONF
//# OLD <{sRTF_ADDRCONF}> 0
//# NEW <{sRTF_ADDRCONF}> 1
//? Consts["/syscall/FD_CLOEXEC"] = syscall.FD_CLOEXEC
//# OLD <{sFD_CLOEXEC}> 0
//# NEW <{sFD_CLOEXEC}> 1
//? Consts["/syscall/EREMOTEIO"] = syscall.EREMOTEIO
//# OLD <{sEREMOTEIO}> 0
//# NEW <{sEREMOTEIO}> 1
Funcs["/syscall/Setenv"] = syscall.Setenv
//# OLD <{sSetenv}> 0
//# NEW <{sSetenv}> 1
//? Consts["/syscall/F_SETLK64"] = syscall.F_SETLK64
//# OLD <{sF_SETLK64}> 0
//# NEW <{sF_SETLK64}> 1
//? Consts["/syscall/TUNDETACHFILTER"] = syscall.TUNDETACHFILTER
//# OLD <{sTUNDETACHFILTER}> 0
//# NEW <{sTUNDETACHFILTER}> 1
//? Consts["/syscall/IFA_F_PERMANENT"] = syscall.IFA_F_PERMANENT
//# OLD <{sIFA_F_PERMANENT}> 0
//# NEW <{sIFA_F_PERMANENT}> 1
//? Consts["/syscall/PTRACE_POKEDATA"] = syscall.PTRACE_POKEDATA
//# OLD <{sPTRACE_POKEDATA}> 0
//# NEW <{sPTRACE_POKEDATA}> 1
//? Consts["/syscall/ENODEV"] = syscall.ENODEV
//# OLD <{sENODEV}> 0
//# NEW <{sENODEV}> 1
//? Consts["/syscall/IPV6_MULTICAST_LOOP"] = syscall.IPV6_MULTICAST_LOOP
//# OLD <{sIPV6_MULTICAST_LOOP}> 0
//# NEW <{sIPV6_MULTICAST_LOOP}> 1
//? Consts["/syscall/ENOKEY"] = syscall.ENOKEY
//# OLD <{sENOKEY}> 0
//# NEW <{sENOKEY}> 1
//? Consts["/syscall/SHUT_RDWR"] = syscall.SHUT_RDWR
//# OLD <{sSHUT_RDWR}> 0
//# NEW <{sSHUT_RDWR}> 1
//? Consts["/syscall/ARPHRD_IEEE1394"] = syscall.ARPHRD_IEEE1394
//# OLD <{sARPHRD_IEEE1394}> 0
//# NEW <{sARPHRD_IEEE1394}> 1
//? Consts["/syscall/SOL_DECNET"] = syscall.SOL_DECNET
//# OLD <{sSOL_DECNET}> 0
//# NEW <{sSOL_DECNET}> 1
//? Consts["/syscall/PR_CAPBSET_READ"] = syscall.PR_CAPBSET_READ
//# OLD <{sPR_CAPBSET_READ}> 0
//# NEW <{sPR_CAPBSET_READ}> 1
//? Consts["/syscall/IP_MINTTL"] = syscall.IP_MINTTL
//# OLD <{sIP_MINTTL}> 0
//# NEW <{sIP_MINTTL}> 1
//? Consts["/syscall/SYS_SYMLINK"] = syscall.SYS_SYMLINK
//# OLD <{sSYS_SYMLINK}> 0
//# NEW <{sSYS_SYMLINK}> 1
//? Consts["/syscall/SizeofIPMreqn"] = syscall.SizeofIPMreqn
//# OLD <{sSizeofIPMreqn}> 0
//# NEW <{sSizeofIPMreqn}> 1
//? Consts["/syscall/ENOPROTOOPT"] = syscall.ENOPROTOOPT
//# OLD <{sENOPROTOOPT}> 0
//# NEW <{sENOPROTOOPT}> 1
Funcs["/syscall/CmsgLen"] = syscall.CmsgLen
//# OLD <{sCmsgLen}> 0
//# NEW <{sCmsgLen}> 1
//? Consts["/syscall/SIOCGIFSLAVE"] = syscall.SIOCGIFSLAVE
//# OLD <{sSIOCGIFSLAVE}> 0
//# NEW <{sSIOCGIFSLAVE}> 1
//? Consts["/syscall/PROT_GROWSDOWN"] = syscall.PROT_GROWSDOWN
//# OLD <{sPROT_GROWSDOWN}> 0
//# NEW <{sPROT_GROWSDOWN}> 1
//? Consts["/syscall/IPPROTO_UDPLITE"] = syscall.IPPROTO_UDPLITE
//# OLD <{sIPPROTO_UDPLITE}> 0
//# NEW <{sIPPROTO_UDPLITE}> 1
//? Consts["/syscall/ETH_P_ARCNET"] = syscall.ETH_P_ARCNET
//# OLD <{sETH_P_ARCNET}> 0
//# NEW <{sETH_P_ARCNET}> 1
//? Consts["/syscall/OPOST"] = syscall.OPOST
//# OLD <{sOPOST}> 0
//# NEW <{sOPOST}> 1
//? Consts["/syscall/IN_CLASSC_NSHIFT"] = syscall.IN_CLASSC_NSHIFT
//# OLD <{sIN_CLASSC_NSHIFT}> 0
//# NEW <{sIN_CLASSC_NSHIFT}> 1
//? Consts["/syscall/SYS_LSTAT"] = syscall.SYS_LSTAT
//# OLD <{sSYS_LSTAT}> 0
//# NEW <{sSYS_LSTAT}> 1
//? Consts["/syscall/SYS_CLOCK_GETTIME"] = syscall.SYS_CLOCK_GETTIME
//# OLD <{sSYS_CLOCK_GETTIME}> 0
//# NEW <{sSYS_CLOCK_GETTIME}> 1
//? Consts["/syscall/RTA_DST"] = syscall.RTA_DST
//# OLD <{sRTA_DST}> 0
//# NEW <{sRTA_DST}> 1
//? Consts["/syscall/SO_SNDBUF"] = syscall.SO_SNDBUF
//# OLD <{sSO_SNDBUF}> 0
//# NEW <{sSO_SNDBUF}> 1
Funcs["/syscall/Clearenv"] = syscall.Clearenv
//# OLD <{sClearenv}> 0
//# NEW <{sClearenv}> 1
//? Consts["/syscall/PTRACE_GETEVENTMSG"] = syscall.PTRACE_GETEVENTMSG
//# OLD <{sPTRACE_GETEVENTMSG}> 0
//# NEW <{sPTRACE_GETEVENTMSG}> 1
//? Consts["/syscall/BPF_SUB"] = syscall.BPF_SUB
//# OLD <{sBPF_SUB}> 0
//# NEW <{sBPF_SUB}> 1
//? Consts["/syscall/RTF_MTU"] = syscall.RTF_MTU
//# OLD <{sRTF_MTU}> 0
//# NEW <{sRTF_MTU}> 1
//? Consts["/syscall/SYS_IOCTL"] = syscall.SYS_IOCTL
//# OLD <{sSYS_IOCTL}> 0
//# NEW <{sSYS_IOCTL}> 1
//? Consts["/syscall/SYS_FCHDIR"] = syscall.SYS_FCHDIR
//# OLD <{sSYS_FCHDIR}> 0
//# NEW <{sSYS_FCHDIR}> 1
//? Consts["/syscall/ETH_P_8021Q"] = syscall.ETH_P_8021Q
//# OLD <{sETH_P_8021Q}> 0
//# NEW <{sETH_P_8021Q}> 1
//? Consts["/syscall/SYS_FUTEX"] = syscall.SYS_FUTEX
//# OLD <{sSYS_FUTEX}> 0
//# NEW <{sSYS_FUTEX}> 1
//? Consts["/syscall/ETH_P_DDCMP"] = syscall.ETH_P_DDCMP
//# OLD <{sETH_P_DDCMP}> 0
//# NEW <{sETH_P_DDCMP}> 1
//? Consts["/syscall/WCLONE"] = syscall.WCLONE
//# OLD <{sWCLONE}> 0
//# NEW <{sWCLONE}> 1
//? Consts["/syscall/TIOCSER_TEMT"] = syscall.TIOCSER_TEMT
//# OLD <{sTIOCSER_TEMT}> 0
//# NEW <{sTIOCSER_TEMT}> 1
//? Consts["/syscall/PR_SET_KEEPCAPS"] = syscall.PR_SET_KEEPCAPS
//# OLD <{sPR_SET_KEEPCAPS}> 0
//# NEW <{sPR_SET_KEEPCAPS}> 1
//? Consts["/syscall/IFA_LABEL"] = syscall.IFA_LABEL
//# OLD <{sIFA_LABEL}> 0
//# NEW <{sIFA_LABEL}> 1
//? Consts["/syscall/RTM_DELADDRLABEL"] = syscall.RTM_DELADDRLABEL
//# OLD <{sRTM_DELADDRLABEL}> 0
//# NEW <{sRTM_DELADDRLABEL}> 1
//? Consts["/syscall/EPOLL_NONBLOCK"] = syscall.EPOLL_NONBLOCK
//# OLD <{sEPOLL_NONBLOCK}> 0
//# NEW <{sEPOLL_NONBLOCK}> 1
//? Consts["/syscall/RTF_GATEWAY"] = syscall.RTF_GATEWAY
//# OLD <{sRTF_GATEWAY}> 0
//# NEW <{sRTF_GATEWAY}> 1
//? Consts["/syscall/SIOCDRARP"] = syscall.SIOCDRARP
//# OLD <{sSIOCDRARP}> 0
//# NEW <{sSIOCDRARP}> 1
Funcs["/syscall/Mkfifo"] = syscall.Mkfifo
//# OLD <{sMkfifo}> 0
//# NEW <{sMkfifo}> 1
//? Consts["/syscall/IPV6_RECVHOPOPTS"] = syscall.IPV6_RECVHOPOPTS
//# OLD <{sIPV6_RECVHOPOPTS}> 0
//# NEW <{sIPV6_RECVHOPOPTS}> 1
//? Consts["/syscall/IP_MULTICAST_IF"] = syscall.IP_MULTICAST_IF
//# OLD <{sIP_MULTICAST_IF}> 0
//# NEW <{sIP_MULTICAST_IF}> 1
//? Consts["/syscall/SIGUNUSED"] = syscall.SIGUNUSED
//# OLD <{sSIGUNUSED}> 0
//# NEW <{sSIGUNUSED}> 1
Funcs["/syscall/Flock"] = syscall.Flock
//# OLD <{sFlock}> 0
//# NEW <{sFlock}> 1
//? Consts["/syscall/IN_ALL_EVENTS"] = syscall.IN_ALL_EVENTS
//# OLD <{sIN_ALL_EVENTS}> 0
//# NEW <{sIN_ALL_EVENTS}> 1
//? Consts["/syscall/IFLA_WEIGHT"] = syscall.IFLA_WEIGHT
//# OLD <{sIFLA_WEIGHT}> 0
//# NEW <{sIFLA_WEIGHT}> 1
//? Consts["/syscall/EMLINK"] = syscall.EMLINK
//# OLD <{sEMLINK}> 0
//# NEW <{sEMLINK}> 1
//? Consts["/syscall/SIGWINCH"] = syscall.SIGWINCH
//# OLD <{sSIGWINCH}> 0
//# NEW <{sSIGWINCH}> 1
//? Consts["/syscall/RTF_POLICY"] = syscall.RTF_POLICY
//# OLD <{sRTF_POLICY}> 0
//# NEW <{sRTF_POLICY}> 1
//? Consts["/syscall/NETLINK_DNRTMSG"] = syscall.NETLINK_DNRTMSG
//# OLD <{sNETLINK_DNRTMSG}> 0
//# NEW <{sNETLINK_DNRTMSG}> 1
//? Consts["/syscall/IPPROTO_IDP"] = syscall.IPPROTO_IDP
//# OLD <{sIPPROTO_IDP}> 0
//# NEW <{sIPPROTO_IDP}> 1
//? Consts["/syscall/TUNSETNOCSUM"] = syscall.TUNSETNOCSUM
//# OLD <{sTUNSETNOCSUM}> 0
//# NEW <{sTUNSETNOCSUM}> 1
//? Consts["/syscall/RTNH_F_PERVASIVE"] = syscall.RTNH_F_PERVASIVE
//# OLD <{sRTNH_F_PERVASIVE}> 0
//# NEW <{sRTNH_F_PERVASIVE}> 1
//? Consts["/syscall/AF_NETBEUI"] = syscall.AF_NETBEUI
//# OLD <{sAF_NETBEUI}> 0
//# NEW <{sAF_NETBEUI}> 1
//? Consts["/syscall/IPV6_ADD_MEMBERSHIP"] = syscall.IPV6_ADD_MEMBERSHIP
//# OLD <{sIPV6_ADD_MEMBERSHIP}> 0
//# NEW <{sIPV6_ADD_MEMBERSHIP}> 1
//? Consts["/syscall/LINUX_REBOOT_CMD_CAD_OFF"] = syscall.LINUX_REBOOT_CMD_CAD_OFF
//# OLD <{sLINUX_REBOOT_CMD_CAD_OFF}> 0
//# NEW <{sLINUX_REBOOT_CMD_CAD_OFF}> 1
//? Consts["/syscall/VTIME"] = syscall.VTIME
//# OLD <{sVTIME}> 0
//# NEW <{sVTIME}> 1
//? Consts["/syscall/ENOTDIR"] = syscall.ENOTDIR
//# OLD <{sENOTDIR}> 0
//# NEW <{sENOTDIR}> 1
//? Consts["/syscall/ICANON"] = syscall.ICANON
//# OLD <{sICANON}> 0
//# NEW <{sICANON}> 1
//? Consts["/syscall/IPV6_IPSEC_POLICY"] = syscall.IPV6_IPSEC_POLICY
//# OLD <{sIPV6_IPSEC_POLICY}> 0
//# NEW <{sIPV6_IPSEC_POLICY}> 1
//? Consts["/syscall/SYS_RT_SIGACTION"] = syscall.SYS_RT_SIGACTION
//# OLD <{sSYS_RT_SIGACTION}> 0
//# NEW <{sSYS_RT_SIGACTION}> 1
//? Consts["/syscall/NLM_F_ACK"] = syscall.NLM_F_ACK
//# OLD <{sNLM_F_ACK}> 0
//# NEW <{sNLM_F_ACK}> 1
//? Consts["/syscall/ARPHRD_VOID"] = syscall.ARPHRD_VOID
//# OLD <{sARPHRD_VOID}> 0
//# NEW <{sARPHRD_VOID}> 1
//? Consts["/syscall/ECONNREFUSED"] = syscall.ECONNREFUSED
//# OLD <{sECONNREFUSED}> 0
//# NEW <{sECONNREFUSED}> 1
//? Consts["/syscall/SizeofSockaddrLinklayer"] = syscall.SizeofSockaddrLinklayer
//# OLD <{sSizeofSockaddrLinklayer}> 0
//# NEW <{sSizeofSockaddrLinklayer}> 1
//? Consts["/syscall/ESRMNT"] = syscall.ESRMNT
//# OLD <{sESRMNT}> 0
//# NEW <{sESRMNT}> 1
//? Consts["/syscall/F_SETPIPE_SZ"] = syscall.F_SETPIPE_SZ
//# OLD <{sF_SETPIPE_SZ}> 0
//# NEW <{sF_SETPIPE_SZ}> 1
//? Consts["/syscall/SIOCGIFMEM"] = syscall.SIOCGIFMEM
//# OLD <{sSIOCGIFMEM}> 0
//# NEW <{sSIOCGIFMEM}> 1
//? Consts["/syscall/VEOL"] = syscall.VEOL
//# OLD <{sVEOL}> 0
//# NEW <{sVEOL}> 1
//? Consts["/syscall/S_IFSOCK"] = syscall.S_IFSOCK
//# OLD <{sS_IFSOCK}> 0
//# NEW <{sS_IFSOCK}> 1
Funcs["/syscall/Faccessat"] = syscall.Faccessat
//# OLD <{sFaccessat}> 0
//# NEW <{sFaccessat}> 1
//? Consts["/syscall/ISIG"] = syscall.ISIG
//# OLD <{sISIG}> 0
//# NEW <{sISIG}> 1
//? Consts["/syscall/IPV6_RXDSTOPTS"] = syscall.IPV6_RXDSTOPTS
//# OLD <{sIPV6_RXDSTOPTS}> 0
//# NEW <{sIPV6_RXDSTOPTS}> 1
//? Consts["/syscall/SIGPROF"] = syscall.SIGPROF
//# OLD <{sSIGPROF}> 0
//# NEW <{sSIGPROF}> 1
//? Consts["/syscall/MS_STRICTATIME"] = syscall.MS_STRICTATIME
//# OLD <{sMS_STRICTATIME}> 0
//# NEW <{sMS_STRICTATIME}> 1
//? Consts["/syscall/ARPHRD_FRAD"] = syscall.ARPHRD_FRAD
//# OLD <{sARPHRD_FRAD}> 0
//# NEW <{sARPHRD_FRAD}> 1
//? Consts["/syscall/ECONNABORTED"] = syscall.ECONNABORTED
//# OLD <{sECONNABORTED}> 0
//# NEW <{sECONNABORTED}> 1
//? Consts["/syscall/SizeofUcred"] = syscall.SizeofUcred
//# OLD <{sSizeofUcred}> 0
//# NEW <{sSizeofUcred}> 1
//? Consts["/syscall/IFF_PORTSEL"] = syscall.IFF_PORTSEL
//# OLD <{sIFF_PORTSEL}> 0
//# NEW <{sIFF_PORTSEL}> 1
Funcs["/syscall/InotifyInit1"] = syscall.InotifyInit1
//# OLD <{sInotifyInit1}> 0
//# NEW <{sInotifyInit1}> 1
//? Consts["/syscall/SYS_RECVMSG"] = syscall.SYS_RECVMSG
//# OLD <{sSYS_RECVMSG}> 0
//# NEW <{sSYS_RECVMSG}> 1
//? Consts["/syscall/MSG_NOSIGNAL"] = syscall.MSG_NOSIGNAL
//# OLD <{sMSG_NOSIGNAL}> 0
//# NEW <{sMSG_NOSIGNAL}> 1
//? Consts["/syscall/IP_MTU"] = syscall.IP_MTU
//# OLD <{sIP_MTU}> 0
//# NEW <{sIP_MTU}> 1
//? Consts["/syscall/IFA_F_DEPRECATED"] = syscall.IFA_F_DEPRECATED
//# OLD <{sIFA_F_DEPRECATED}> 0
//# NEW <{sIFA_F_DEPRECATED}> 1
Funcs["/syscall/Getpgrp"] = syscall.Getpgrp
//# OLD <{sGetpgrp}> 0
//# NEW <{sGetpgrp}> 1
Funcs["/syscall/PtracePeekText"] = syscall.PtracePeekText
//# OLD <{sPtracePeekText}> 0
//# NEW <{sPtracePeekText}> 1
//? Consts["/syscall/SYS_SETTIMEOFDAY"] = syscall.SYS_SETTIMEOFDAY
//# OLD <{sSYS_SETTIMEOFDAY}> 0
//# NEW <{sSYS_SETTIMEOFDAY}> 1
Funcs["/syscall/Lstat"] = syscall.Lstat
//# OLD <{sLstat}> 0
//# NEW <{sLstat}> 1
//? Consts["/syscall/SYS_WRITEV"] = syscall.SYS_WRITEV
//# OLD <{sSYS_WRITEV}> 0
//# NEW <{sSYS_WRITEV}> 1
//? Consts["/syscall/SYS_TIMERFD_CREATE"] = syscall.SYS_TIMERFD_CREATE
//# OLD <{sSYS_TIMERFD_CREATE}> 0
//# NEW <{sSYS_TIMERFD_CREATE}> 1
//? Consts["/syscall/SYS_MQ_UNLINK"] = syscall.SYS_MQ_UNLINK
//# OLD <{sSYS_MQ_UNLINK}> 0
//# NEW <{sSYS_MQ_UNLINK}> 1
//? Consts["/syscall/O_FSYNC"] = syscall.O_FSYNC
//# OLD <{sO_FSYNC}> 0
//# NEW <{sO_FSYNC}> 1
//? Consts["/syscall/RT_CLASS_MAIN"] = syscall.RT_CLASS_MAIN
//# OLD <{sRT_CLASS_MAIN}> 0
//# NEW <{sRT_CLASS_MAIN}> 1
//? Consts["/syscall/SYS_SEMGET"] = syscall.SYS_SEMGET
//# OLD <{sSYS_SEMGET}> 0
//# NEW <{sSYS_SEMGET}> 1
//? Consts["/syscall/SOCK_CLOEXEC"] = syscall.SOCK_CLOEXEC
//# OLD <{sSOCK_CLOEXEC}> 0
//# NEW <{sSOCK_CLOEXEC}> 1
//? Consts["/syscall/SYS_SETFSGID"] = syscall.SYS_SETFSGID
//# OLD <{sSYS_SETFSGID}> 0
//# NEW <{sSYS_SETFSGID}> 1
//? Consts["/syscall/SYS_CLOSE"] = syscall.SYS_CLOSE
//# OLD <{sSYS_CLOSE}> 0
//# NEW <{sSYS_CLOSE}> 1
//? Consts["/syscall/RTCF_VALVE"] = syscall.RTCF_VALVE
//# OLD <{sRTCF_VALVE}> 0
//# NEW <{sRTCF_VALVE}> 1
//? Consts["/syscall/PTRACE_SINGLESTEP"] = syscall.PTRACE_SINGLESTEP
//# OLD <{sPTRACE_SINGLESTEP}> 0
//# NEW <{sPTRACE_SINGLESTEP}> 1
//? Consts["/syscall/SYS_POLL"] = syscall.SYS_POLL
//# OLD <{sSYS_POLL}> 0
//# NEW <{sSYS_POLL}> 1
//? Consts["/syscall/IP_UNBLOCK_SOURCE"] = syscall.IP_UNBLOCK_SOURCE
//# OLD <{sIP_UNBLOCK_SOURCE}> 0
//# NEW <{sIP_UNBLOCK_SOURCE}> 1
//? Consts["/syscall/IN_CLOSE"] = syscall.IN_CLOSE
//# OLD <{sIN_CLOSE}> 0
//# NEW <{sIN_CLOSE}> 1
//? Consts["/syscall/IPV6_NEXTHOP"] = syscall.IPV6_NEXTHOP
//# OLD <{sIPV6_NEXTHOP}> 0
//# NEW <{sIPV6_NEXTHOP}> 1
//? Consts["/syscall/SO_BROADCAST"] = syscall.SO_BROADCAST
//# OLD <{sSO_BROADCAST}> 0
//# NEW <{sSO_BROADCAST}> 1
Funcs["/syscall/Sendto"] = syscall.Sendto
//# OLD <{sSendto}> 0
//# NEW <{sSendto}> 1
//? Consts["/syscall/TIOCM_DTR"] = syscall.TIOCM_DTR
//# OLD <{sTIOCM_DTR}> 0
//# NEW <{sTIOCM_DTR}> 1
//? Consts["/syscall/RTA_ALIGNTO"] = syscall.RTA_ALIGNTO
//# OLD <{sRTA_ALIGNTO}> 0
//# NEW <{sRTA_ALIGNTO}> 1
//? Consts["/syscall/MAP_DENYWRITE"] = syscall.MAP_DENYWRITE
//# OLD <{sMAP_DENYWRITE}> 0
//# NEW <{sMAP_DENYWRITE}> 1
//? Consts["/syscall/SIOCSIFNETMASK"] = syscall.SIOCSIFNETMASK
//# OLD <{sSIOCSIFNETMASK}> 0
//# NEW <{sSIOCSIFNETMASK}> 1
//? Consts["/syscall/ETH_P_DNA_RT"] = syscall.ETH_P_DNA_RT
//# OLD <{sETH_P_DNA_RT}> 0
//# NEW <{sETH_P_DNA_RT}> 1
//? Consts["/syscall/SYS_FTRUNCATE"] = syscall.SYS_FTRUNCATE
//# OLD <{sSYS_FTRUNCATE}> 0
//# NEW <{sSYS_FTRUNCATE}> 1
//? Consts["/syscall/NETLINK_ADD_MEMBERSHIP"] = syscall.NETLINK_ADD_MEMBERSHIP
//# OLD <{sNETLINK_ADD_MEMBERSHIP}> 0
//# NEW <{sNETLINK_ADD_MEMBERSHIP}> 1
//? Consts["/syscall/ARPHRD_FCFABRIC"] = syscall.ARPHRD_FCFABRIC
//# OLD <{sARPHRD_FCFABRIC}> 0
//# NEW <{sARPHRD_FCFABRIC}> 1
//? Consts["/syscall/SYS_PTRACE"] = syscall.SYS_PTRACE
//# OLD <{sSYS_PTRACE}> 0
//# NEW <{sSYS_PTRACE}> 1
//? Consts["/syscall/SYS_RENAME"] = syscall.SYS_RENAME
//# OLD <{sSYS_RENAME}> 0
//# NEW <{sSYS_RENAME}> 1
//? Consts["/syscall/MADV_WILLNEED"] = syscall.MADV_WILLNEED
//# OLD <{sMADV_WILLNEED}> 0
//# NEW <{sMADV_WILLNEED}> 1
//? Consts["/syscall/RTN_PROHIBIT"] = syscall.RTN_PROHIBIT
//# OLD <{sRTN_PROHIBIT}> 0
//# NEW <{sRTN_PROHIBIT}> 1
//? Consts["/syscall/RTAX_LOCK"] = syscall.RTAX_LOCK
//# OLD <{sRTAX_LOCK}> 0
//# NEW <{sRTAX_LOCK}> 1
//? Consts["/syscall/SYS_EVENTFD2"] = syscall.SYS_EVENTFD2
//# OLD <{sSYS_EVENTFD2}> 0
//# NEW <{sSYS_EVENTFD2}> 1
//? Consts["/syscall/SO_RCVTIMEO"] = syscall.SO_RCVTIMEO
//# OLD <{sSO_RCVTIMEO}> 0
//# NEW <{sSO_RCVTIMEO}> 1
//? Consts["/syscall/EALREADY"] = syscall.EALREADY
//# OLD <{sEALREADY}> 0
//# NEW <{sEALREADY}> 1
//? Consts["/syscall/EHOSTDOWN"] = syscall.EHOSTDOWN
//# OLD <{sEHOSTDOWN}> 0
//# NEW <{sEHOSTDOWN}> 1
//? Consts["/syscall/ETH_P_ATMMPOA"] = syscall.ETH_P_ATMMPOA
//# OLD <{sETH_P_ATMMPOA}> 0
//# NEW <{sETH_P_ATMMPOA}> 1
//? Consts["/syscall/RLIMIT_FSIZE"] = syscall.RLIMIT_FSIZE
//# OLD <{sRLIMIT_FSIZE}> 0
//# NEW <{sRLIMIT_FSIZE}> 1
//? Consts["/syscall/PR_CAPBSET_DROP"] = syscall.PR_CAPBSET_DROP
//# OLD <{sPR_CAPBSET_DROP}> 0
//# NEW <{sPR_CAPBSET_DROP}> 1
//? Consts["/syscall/SYS_FSETXATTR"] = syscall.SYS_FSETXATTR
//# OLD <{sSYS_FSETXATTR}> 0
//# NEW <{sSYS_FSETXATTR}> 1
//? Consts["/syscall/SizeofMsghdr"] = syscall.SizeofMsghdr
//# OLD <{sSizeofMsghdr}> 0
//# NEW <{sSizeofMsghdr}> 1
//? Consts["/syscall/IFA_F_SECONDARY"] = syscall.IFA_F_SECONDARY
//# OLD <{sIFA_F_SECONDARY}> 0
//# NEW <{sIFA_F_SECONDARY}> 1
//? Consts["/syscall/SYS_VMSPLICE"] = syscall.SYS_VMSPLICE
//# OLD <{sSYS_VMSPLICE}> 0
//# NEW <{sSYS_VMSPLICE}> 1
//? Consts["/syscall/PR_GET_UNALIGN"] = syscall.PR_GET_UNALIGN
//# OLD <{sPR_GET_UNALIGN}> 0
//# NEW <{sPR_GET_UNALIGN}> 1
Funcs["/syscall/RawSyscall"] = syscall.RawSyscall
//# OLD <{sRawSyscall}> 0
//# NEW <{sRawSyscall}> 1
//? Consts["/syscall/SYS_RT_TGSIGQUEUEINFO"] = syscall.SYS_RT_TGSIGQUEUEINFO
//# OLD <{sSYS_RT_TGSIGQUEUEINFO}> 0
//# NEW <{sSYS_RT_TGSIGQUEUEINFO}> 1
//? Consts["/syscall/MSG_OOB"] = syscall.MSG_OOB
//# OLD <{sMSG_OOB}> 0
//# NEW <{sMSG_OOB}> 1
//? Consts["/syscall/NLM_F_REPLACE"] = syscall.NLM_F_REPLACE
//# OLD <{sNLM_F_REPLACE}> 0
//# NEW <{sNLM_F_REPLACE}> 1
//? Consts["/syscall/AF_CAIF"] = syscall.AF_CAIF
//# OLD <{sAF_CAIF}> 0
//# NEW <{sAF_CAIF}> 1
//? Consts["/syscall/ENOLCK"] = syscall.ENOLCK
//# OLD <{sENOLCK}> 0
//# NEW <{sENOLCK}> 1
Funcs["/syscall/Setsid"] = syscall.Setsid
//# OLD <{sSetsid}> 0
//# NEW <{sSetsid}> 1
//? Consts["/syscall/TUNGETSNDBUF"] = syscall.TUNGETSNDBUF
//# OLD <{sTUNGETSNDBUF}> 0
//# NEW <{sTUNGETSNDBUF}> 1
//? Consts["/syscall/SYS_KEXEC_LOAD"] = syscall.SYS_KEXEC_LOAD
//# OLD <{sSYS_KEXEC_LOAD}> 0
//# NEW <{sSYS_KEXEC_LOAD}> 1
//? Consts["/syscall/EISNAM"] = syscall.EISNAM
//# OLD <{sEISNAM}> 0
//# NEW <{sEISNAM}> 1
//? Consts["/syscall/SIOCDARP"] = syscall.SIOCDARP
//# OLD <{sSIOCDARP}> 0
//# NEW <{sSIOCDARP}> 1
//? Consts["/syscall/SIOCRTMSG"] = syscall.SIOCRTMSG
//# OLD <{sSIOCRTMSG}> 0
//# NEW <{sSIOCRTMSG}> 1
Types["/syscall/RawSockaddrLinklayer"] = new(*syscall.RawSockaddrLinklayer)
//# OLD <{sRawSockaddrLinklayer}> 0
//# NEW <{sRawSockaddrLinklayer}> 1
//? Consts["/syscall/IPV6_JOIN_ANYCAST"] = syscall.IPV6_JOIN_ANYCAST
//# OLD <{sIPV6_JOIN_ANYCAST}> 0
//# NEW <{sIPV6_JOIN_ANYCAST}> 1
//? Consts["/syscall/PTRACE_SETSIGINFO"] = syscall.PTRACE_SETSIGINFO
//# OLD <{sPTRACE_SETSIGINFO}> 0
//# NEW <{sPTRACE_SETSIGINFO}> 1
//? Consts["/syscall/SIGQUIT"] = syscall.SIGQUIT
//# OLD <{sSIGQUIT}> 0
//# NEW <{sSIGQUIT}> 1
//? Consts["/syscall/NETLINK_PKTINFO"] = syscall.NETLINK_PKTINFO
//# OLD <{sNETLINK_PKTINFO}> 0
//# NEW <{sNETLINK_PKTINFO}> 1
//? Consts["/syscall/ARPHRD_ETHER"] = syscall.ARPHRD_ETHER
//# OLD <{sARPHRD_ETHER}> 0
//# NEW <{sARPHRD_ETHER}> 1
//? Consts["/syscall/SIOCGIFHWADDR"] = syscall.SIOCGIFHWADDR
//# OLD <{sSIOCGIFHWADDR}> 0
//# NEW <{sSIOCGIFHWADDR}> 1
//? Consts["/syscall/ENODATA"] = syscall.ENODATA
//# OLD <{sENODATA}> 0
//# NEW <{sENODATA}> 1
//? Consts["/syscall/MADV_REMOVE"] = syscall.MADV_REMOVE
//# OLD <{sMADV_REMOVE}> 0
//# NEW <{sMADV_REMOVE}> 1
//? Consts["/syscall/MS_NOSUID"] = syscall.MS_NOSUID
//# OLD <{sMS_NOSUID}> 0
//# NEW <{sMS_NOSUID}> 1
//? Consts["/syscall/SYS_FREMOVEXATTR"] = syscall.SYS_FREMOVEXATTR
//# OLD <{sSYS_FREMOVEXATTR}> 0
//# NEW <{sSYS_FREMOVEXATTR}> 1
//? Consts["/syscall/ENOSPC"] = syscall.ENOSPC
//# OLD <{sENOSPC}> 0
//# NEW <{sENOSPC}> 1
//? Consts["/syscall/TIOCSERGETMULTI"] = syscall.TIOCSERGETMULTI
//# OLD <{sTIOCSERGETMULTI}> 0
//# NEW <{sTIOCSERGETMULTI}> 1
Funcs["/syscall/SetsockoptTimeval"] = syscall.SetsockoptTimeval
//# OLD <{sSetsockoptTimeval}> 0
//# NEW <{sSetsockoptTimeval}> 1
//? Consts["/syscall/F_GETFL"] = syscall.F_GETFL
//# OLD <{sF_GETFL}> 0
//# NEW <{sF_GETFL}> 1
//? Consts["/syscall/PTRACE_O_TRACEEXEC"] = syscall.PTRACE_O_TRACEEXEC
//# OLD <{sPTRACE_O_TRACEEXEC}> 0
//# NEW <{sPTRACE_O_TRACEEXEC}> 1
//? Consts["/syscall/ENOTSOCK"] = syscall.ENOTSOCK
//# OLD <{sENOTSOCK}> 0
//# NEW <{sENOTSOCK}> 1
//? Consts["/syscall/HUPCL"] = syscall.HUPCL
//# OLD <{sHUPCL}> 0
//# NEW <{sHUPCL}> 1
//? Consts["/syscall/SYS_SCHED_SETPARAM"] = syscall.SYS_SCHED_SETPARAM
//# OLD <{sSYS_SCHED_SETPARAM}> 0
//# NEW <{sSYS_SCHED_SETPARAM}> 1
//? Consts["/syscall/SIGPIPE"] = syscall.SIGPIPE
//# OLD <{sSIGPIPE}> 0
//# NEW <{sSIGPIPE}> 1
//? Consts["/syscall/RTM_NEWNEIGHTBL"] = syscall.RTM_NEWNEIGHTBL
//# OLD <{sRTM_NEWNEIGHTBL}> 0
//# NEW <{sRTM_NEWNEIGHTBL}> 1
Funcs["/syscall/ReadDirent"] = syscall.ReadDirent
//# OLD <{sReadDirent}> 0
//# NEW <{sReadDirent}> 1
//? Consts["/syscall/ETH_P_ECONET"] = syscall.ETH_P_ECONET
//# OLD <{sETH_P_ECONET}> 0
//# NEW <{sETH_P_ECONET}> 1
//? Consts["/syscall/IPV6_PMTUDISC_DONT"] = syscall.IPV6_PMTUDISC_DONT
//# OLD <{sIPV6_PMTUDISC_DONT}> 0
//# NEW <{sIPV6_PMTUDISC_DONT}> 1
//? Consts["/syscall/AF_ECONET"] = syscall.AF_ECONET
//# OLD <{sAF_ECONET}> 0
//# NEW <{sAF_ECONET}> 1
Funcs["/syscall/Read"] = syscall.Read
//# OLD <{sRead}> 0
//# NEW <{sRead}> 1
//? Consts["/syscall/NLA_F_NET_BYTEORDER"] = syscall.NLA_F_NET_BYTEORDER
//# OLD <{sNLA_F_NET_BYTEORDER}> 0
//# NEW <{sNLA_F_NET_BYTEORDER}> 1
//? Consts["/syscall/SYS_SETSOCKOPT"] = syscall.SYS_SETSOCKOPT
//# OLD <{sSYS_SETSOCKOPT}> 0
//# NEW <{sSYS_SETSOCKOPT}> 1
//? Consts["/syscall/RTM_DELLINK"] = syscall.RTM_DELLINK
//# OLD <{sRTM_DELLINK}> 0
//# NEW <{sRTM_DELLINK}> 1
//? Consts["/syscall/O_NOCTTY"] = syscall.O_NOCTTY
//# OLD <{sO_NOCTTY}> 0
//# NEW <{sO_NOCTTY}> 1
//? Consts["/syscall/RTPROT_REDIRECT"] = syscall.RTPROT_REDIRECT
//# OLD <{sRTPROT_REDIRECT}> 0
//# NEW <{sRTPROT_REDIRECT}> 1
//? Consts["/syscall/ARPHRD_RSRVD"] = syscall.ARPHRD_RSRVD
//# OLD <{sARPHRD_RSRVD}> 0
//# NEW <{sARPHRD_RSRVD}> 1
Funcs["/syscall/UnixRights"] = syscall.UnixRights
//# OLD <{sUnixRights}> 0
//# NEW <{sUnixRights}> 1
//? Consts["/syscall/SYS_RT_SIGPENDING"] = syscall.SYS_RT_SIGPENDING
//# OLD <{sSYS_RT_SIGPENDING}> 0
//# NEW <{sSYS_RT_SIGPENDING}> 1
//? Consts["/syscall/ELIBBAD"] = syscall.ELIBBAD
//# OLD <{sELIBBAD}> 0
//# NEW <{sELIBBAD}> 1
//? Consts["/syscall/IP_DROP_SOURCE_MEMBERSHIP"] = syscall.IP_DROP_SOURCE_MEMBERSHIP
//# OLD <{sIP_DROP_SOURCE_MEMBERSHIP}> 0
//# NEW <{sIP_DROP_SOURCE_MEMBERSHIP}> 1
//? Consts["/syscall/EPOLLRDBAND"] = syscall.EPOLLRDBAND
//# OLD <{sEPOLLRDBAND}> 0
//# NEW <{sEPOLLRDBAND}> 1
//? Consts["/syscall/TIOCMIWAIT"] = syscall.TIOCMIWAIT
//# OLD <{sTIOCMIWAIT}> 0
//# NEW <{sTIOCMIWAIT}> 1
//? Consts["/syscall/VDISCARD"] = syscall.VDISCARD
//# OLD <{sVDISCARD}> 0
//# NEW <{sVDISCARD}> 1
//? Consts["/syscall/RTF_DEFAULT"] = syscall.RTF_DEFAULT
//# OLD <{sRTF_DEFAULT}> 0
//# NEW <{sRTF_DEFAULT}> 1
//? Consts["/syscall/EPOLLPRI"] = syscall.EPOLLPRI
//# OLD <{sEPOLLPRI}> 0
//# NEW <{sEPOLLPRI}> 1
//? Consts["/syscall/TIOCM_ST"] = syscall.TIOCM_ST
//# OLD <{sTIOCM_ST}> 0
//# NEW <{sTIOCM_ST}> 1
Funcs["/syscall/NetlinkRIB"] = syscall.NetlinkRIB
//# OLD <{sNetlinkRIB}> 0
//# NEW <{sNetlinkRIB}> 1
//? Consts["/syscall/LINUX_REBOOT_CMD_CAD_ON"] = syscall.LINUX_REBOOT_CMD_CAD_ON
//# OLD <{sLINUX_REBOOT_CMD_CAD_ON}> 0
//# NEW <{sLINUX_REBOOT_CMD_CAD_ON}> 1
//? Consts["/syscall/PARODD"] = syscall.PARODD
//# OLD <{sPARODD}> 0
//# NEW <{sPARODD}> 1
//? Consts["/syscall/IFA_MULTICAST"] = syscall.IFA_MULTICAST
//# OLD <{sIFA_MULTICAST}> 0
//# NEW <{sIFA_MULTICAST}> 1
//? Consts["/syscall/SIOCDELDLCI"] = syscall.SIOCDELDLCI
//# OLD <{sSIOCDELDLCI}> 0
//# NEW <{sSIOCDELDLCI}> 1
//? Consts["/syscall/AF_MAX"] = syscall.AF_MAX
//# OLD <{sAF_MAX}> 0
//# NEW <{sAF_MAX}> 1
//? Consts["/syscall/SYS_UNAME"] = syscall.SYS_UNAME
//# OLD <{sSYS_UNAME}> 0
//# NEW <{sSYS_UNAME}> 1
//? Consts["/syscall/IFF_NOTRAILERS"] = syscall.IFF_NOTRAILERS
//# OLD <{sIFF_NOTRAILERS}> 0
//# NEW <{sIFF_NOTRAILERS}> 1
//? Consts["/syscall/RTM_SETLINK"] = syscall.RTM_SETLINK
//# OLD <{sRTM_SETLINK}> 0
//# NEW <{sRTM_SETLINK}> 1
Funcs["/syscall/Accept"] = syscall.Accept
//# OLD <{sAccept}> 0
//# NEW <{sAccept}> 1
//? Consts["/syscall/PTRACE_O_TRACECLONE"] = syscall.PTRACE_O_TRACECLONE
//# OLD <{sPTRACE_O_TRACECLONE}> 0
//# NEW <{sPTRACE_O_TRACECLONE}> 1
//? Consts["/syscall/IPV6_HOPOPTS"] = syscall.IPV6_HOPOPTS
//# OLD <{sIPV6_HOPOPTS}> 0
//# NEW <{sIPV6_HOPOPTS}> 1
//? Consts["/syscall/RTCF_MASQ"] = syscall.RTCF_MASQ
//# OLD <{sRTCF_MASQ}> 0
//# NEW <{sRTCF_MASQ}> 1
//? Consts["/syscall/ETH_P_1588"] = syscall.ETH_P_1588
//# OLD <{sETH_P_1588}> 0
//# NEW <{sETH_P_1588}> 1
//? Consts["/syscall/SYS_SYSFS"] = syscall.SYS_SYSFS
//# OLD <{sSYS_SYSFS}> 0
//# NEW <{sSYS_SYSFS}> 1
//? Consts["/syscall/ARPHRD_NETROM"] = syscall.ARPHRD_NETROM
//# OLD <{sARPHRD_NETROM}> 0
//# NEW <{sARPHRD_NETROM}> 1
//? Consts["/syscall/ARPHRD_PPP"] = syscall.ARPHRD_PPP
//# OLD <{sARPHRD_PPP}> 0
//# NEW <{sARPHRD_PPP}> 1
//? Consts["/syscall/ETH_P_WCCP"] = syscall.ETH_P_WCCP
//# OLD <{sETH_P_WCCP}> 0
//# NEW <{sETH_P_WCCP}> 1
//? Consts["/syscall/SYS_PIPE"] = syscall.SYS_PIPE
//# OLD <{sSYS_PIPE}> 0
//# NEW <{sSYS_PIPE}> 1
//? Consts["/syscall/TIOCM_RTS"] = syscall.TIOCM_RTS
//# OLD <{sTIOCM_RTS}> 0
//# NEW <{sTIOCM_RTS}> 1
//? Consts["/syscall/SYS_SCHED_GETPARAM"] = syscall.SYS_SCHED_GETPARAM
//# OLD <{sSYS_SCHED_GETPARAM}> 0
//# NEW <{sSYS_SCHED_GETPARAM}> 1
//? Consts["/syscall/S_IFIFO"] = syscall.S_IFIFO
//# OLD <{sS_IFIFO}> 0
//# NEW <{sS_IFIFO}> 1
//? Consts["/syscall/RTM_NEWLINK"] = syscall.RTM_NEWLINK
//# OLD <{sRTM_NEWLINK}> 0
//# NEW <{sRTM_NEWLINK}> 1
//? Consts["/syscall/SYS_SHMDT"] = syscall.SYS_SHMDT
//# OLD <{sSYS_SHMDT}> 0
//# NEW <{sSYS_SHMDT}> 1
//? Consts["/syscall/TIOCSIG"] = syscall.TIOCSIG
//# OLD <{sTIOCSIG}> 0
//# NEW <{sTIOCSIG}> 1
//? Consts["/syscall/IPV6_DSTOPTS"] = syscall.IPV6_DSTOPTS
//# OLD <{sIPV6_DSTOPTS}> 0
//# NEW <{sIPV6_DSTOPTS}> 1
//? Consts["/syscall/SYS_EPOLL_WAIT_OLD"] = syscall.SYS_EPOLL_WAIT_OLD
//# OLD <{sSYS_EPOLL_WAIT_OLD}> 0
//# NEW <{sSYS_EPOLL_WAIT_OLD}> 1
//? Consts["/syscall/EIO"] = syscall.EIO
//# OLD <{sEIO}> 0
//# NEW <{sEIO}> 1
//? Consts["/syscall/RTM_GETRULE"] = syscall.RTM_GETRULE
//# OLD <{sRTM_GETRULE}> 0
//# NEW <{sRTM_GETRULE}> 1
//? Consts["/syscall/TCP_LINGER2"] = syscall.TCP_LINGER2
//# OLD <{sTCP_LINGER2}> 0
//# NEW <{sTCP_LINGER2}> 1
//? Consts["/syscall/S_IRUSR"] = syscall.S_IRUSR
//# OLD <{sS_IRUSR}> 0
//# NEW <{sS_IRUSR}> 1
Types["/syscall/SockaddrLinklayer"] = new(*syscall.SockaddrLinklayer)
//# OLD <{sSockaddrLinklayer}> 0
//# NEW <{sSockaddrLinklayer}> 1
//? Consts["/syscall/SCM_TIMESTAMP"] = syscall.SCM_TIMESTAMP
//# OLD <{sSCM_TIMESTAMP}> 0
//# NEW <{sSCM_TIMESTAMP}> 1
//? Consts["/syscall/SYS_SCHED_SETAFFINITY"] = syscall.SYS_SCHED_SETAFFINITY
//# OLD <{sSYS_SCHED_SETAFFINITY}> 0
//# NEW <{sSYS_SCHED_SETAFFINITY}> 1
//? Consts["/syscall/MAP_GROWSDOWN"] = syscall.MAP_GROWSDOWN
//# OLD <{sMAP_GROWSDOWN}> 0
//# NEW <{sMAP_GROWSDOWN}> 1
Funcs["/syscall/Bind"] = syscall.Bind
//# OLD <{sBind}> 0
//# NEW <{sBind}> 1
//? Consts["/syscall/SIOCDELRT"] = syscall.SIOCDELRT
//# OLD <{sSIOCDELRT}> 0
//# NEW <{sSIOCDELRT}> 1
//? Consts["/syscall/MAP_TYPE"] = syscall.MAP_TYPE
//# OLD <{sMAP_TYPE}> 0
//# NEW <{sMAP_TYPE}> 1
//? Consts["/syscall/SO_REUSEADDR"] = syscall.SO_REUSEADDR
//# OLD <{sSO_REUSEADDR}> 0
//# NEW <{sSO_REUSEADDR}> 1
//? Consts["/syscall/MS_SHARED"] = syscall.MS_SHARED
//# OLD <{sMS_SHARED}> 0
//# NEW <{sMS_SHARED}> 1
Types["/syscall/RawSockaddrUnix"] = new(*syscall.RawSockaddrUnix)
//# OLD <{sRawSockaddrUnix}> 0
//# NEW <{sRawSockaddrUnix}> 1
//? Consts["/syscall/TIOCPKT_FLUSHREAD"] = syscall.TIOCPKT_FLUSHREAD
//# OLD <{sTIOCPKT_FLUSHREAD}> 0
//# NEW <{sTIOCPKT_FLUSHREAD}> 1
//? Consts["/syscall/SYS_CLOCK_GETRES"] = syscall.SYS_CLOCK_GETRES
//# OLD <{sSYS_CLOCK_GETRES}> 0
//# NEW <{sSYS_CLOCK_GETRES}> 1
//? Consts["/syscall/EBADF"] = syscall.EBADF
//# OLD <{sEBADF}> 0
//# NEW <{sEBADF}> 1
Types["/syscall/RawSockaddrNetlink"] = new(*syscall.RawSockaddrNetlink)
//# OLD <{sRawSockaddrNetlink}> 0
//# NEW <{sRawSockaddrNetlink}> 1
Types["/syscall/NlMsgerr"] = new(*syscall.NlMsgerr)
//# OLD <{sNlMsgerr}> 0
//# NEW <{sNlMsgerr}> 1
//? Consts["/syscall/IN_ISDIR"] = syscall.IN_ISDIR
//# OLD <{sIN_ISDIR}> 0
//# NEW <{sIN_ISDIR}> 1
//? Consts["/syscall/ETH_P_CAN"] = syscall.ETH_P_CAN
//# OLD <{sETH_P_CAN}> 0
//# NEW <{sETH_P_CAN}> 1
//? Consts["/syscall/RTM_DELTFILTER"] = syscall.RTM_DELTFILTER
//# OLD <{sRTM_DELTFILTER}> 0
//# NEW <{sRTM_DELTFILTER}> 1
//? Consts["/syscall/ENOPKG"] = syscall.ENOPKG
//# OLD <{sENOPKG}> 0
//# NEW <{sENOPKG}> 1
//? Consts["/syscall/EPROTONOSUPPORT"] = syscall.EPROTONOSUPPORT
//# OLD <{sEPROTONOSUPPORT}> 0
//# NEW <{sEPROTONOSUPPORT}> 1
//? Consts["/syscall/SYS_FCHOWN"] = syscall.SYS_FCHOWN
//# OLD <{sSYS_FCHOWN}> 0
//# NEW <{sSYS_FCHOWN}> 1
//? Consts["/syscall/ENOTBLK"] = syscall.ENOTBLK
//# OLD <{sENOTBLK}> 0
//# NEW <{sENOTBLK}> 1
//? Consts["/syscall/EREMOTE"] = syscall.EREMOTE
//# OLD <{sEREMOTE}> 0
//# NEW <{sEREMOTE}> 1
Funcs["/syscall/Exit"] = syscall.Exit
//# OLD <{sExit}> 0
//# NEW <{sExit}> 1
//? Consts["/syscall/TOSTOP"] = syscall.TOSTOP
//# OLD <{sTOSTOP}> 0
//# NEW <{sTOSTOP}> 1
//? Consts["/syscall/SYS_RECVFROM"] = syscall.SYS_RECVFROM
//# OLD <{sSYS_RECVFROM}> 0
//# NEW <{sSYS_RECVFROM}> 1
Funcs["/syscall/Fchown"] = syscall.Fchown
//# OLD <{sFchown}> 0
//# NEW <{sFchown}> 1
//? Consts["/syscall/ARPHRD_IEEE802154_PHY"] = syscall.ARPHRD_IEEE802154_PHY
//# OLD <{sARPHRD_IEEE802154_PHY}> 0
//# NEW <{sARPHRD_IEEE802154_PHY}> 1
//? Consts["/syscall/BPF_JGT"] = syscall.BPF_JGT
//# OLD <{sBPF_JGT}> 0
//# NEW <{sBPF_JGT}> 1
//? Consts["/syscall/SYS_SCHED_GETSCHEDULER"] = syscall.SYS_SCHED_GETSCHEDULER
//# OLD <{sSYS_SCHED_GETSCHEDULER}> 0
//# NEW <{sSYS_SCHED_GETSCHEDULER}> 1
//? Consts["/syscall/SYS_ARCH_PRCTL"] = syscall.SYS_ARCH_PRCTL
//# OLD <{sSYS_ARCH_PRCTL}> 0
//# NEW <{sSYS_ARCH_PRCTL}> 1
Funcs["/syscall/Uname"] = syscall.Uname
//# OLD <{sUname}> 0
//# NEW <{sUname}> 1
//? Consts["/syscall/EHOSTUNREACH"] = syscall.EHOSTUNREACH
//# OLD <{sEHOSTUNREACH}> 0
//# NEW <{sEHOSTUNREACH}> 1
//? Consts["/syscall/TIOCM_LE"] = syscall.TIOCM_LE
//# OLD <{sTIOCM_LE}> 0
//# NEW <{sTIOCM_LE}> 1
//? Consts["/syscall/S_IWOTH"] = syscall.S_IWOTH
//# OLD <{sS_IWOTH}> 0
//# NEW <{sS_IWOTH}> 1
//? Consts["/syscall/SYS_SETPGID"] = syscall.SYS_SETPGID
//# OLD <{sSYS_SETPGID}> 0
//# NEW <{sSYS_SETPGID}> 1
//? Consts["/syscall/SIGVTALRM"] = syscall.SIGVTALRM
//# OLD <{sSIGVTALRM}> 0
//# NEW <{sSIGVTALRM}> 1
//? Consts["/syscall/SYS_UNLINK"] = syscall.SYS_UNLINK
//# OLD <{sSYS_UNLINK}> 0
//# NEW <{sSYS_UNLINK}> 1
//? Consts["/syscall/RTM_GETMULTICAST"] = syscall.RTM_GETMULTICAST
//# OLD <{sRTM_GETMULTICAST}> 0
//# NEW <{sRTM_GETMULTICAST}> 1
//? Consts["/syscall/SIOCSIFMAP"] = syscall.SIOCSIFMAP
//# OLD <{sSIOCSIFMAP}> 0
//# NEW <{sSIOCSIFMAP}> 1
//? Consts["/syscall/MSG_CTRUNC"] = syscall.MSG_CTRUNC
//# OLD <{sMSG_CTRUNC}> 0
//# NEW <{sMSG_CTRUNC}> 1
//? Consts["/syscall/SYS_SETDOMAINNAME"] = syscall.SYS_SETDOMAINNAME
//# OLD <{sSYS_SETDOMAINNAME}> 0
//# NEW <{sSYS_SETDOMAINNAME}> 1
//? Consts["/syscall/SIOCSIFFLAGS"] = syscall.SIOCSIFFLAGS
//# OLD <{sSIOCSIFFLAGS}> 0
//# NEW <{sSIOCSIFFLAGS}> 1
//? Consts["/syscall/PROT_NONE"] = syscall.PROT_NONE
//# OLD <{sPROT_NONE}> 0
//# NEW <{sPROT_NONE}> 1
Funcs["/syscall/Klogctl"] = syscall.Klogctl
//# OLD <{sKlogctl}> 0
//# NEW <{sKlogctl}> 1
//? Consts["/syscall/SYS_MQ_TIMEDRECEIVE"] = syscall.SYS_MQ_TIMEDRECEIVE
//# OLD <{sSYS_MQ_TIMEDRECEIVE}> 0
//# NEW <{sSYS_MQ_TIMEDRECEIVE}> 1
//? Consts["/syscall/RTF_REINSTATE"] = syscall.RTF_REINSTATE
//# OLD <{sRTF_REINSTATE}> 0
//# NEW <{sRTF_REINSTATE}> 1
//? Consts["/syscall/IFLA_LINKINFO"] = syscall.IFLA_LINKINFO
//# OLD <{sIFLA_LINKINFO}> 0
//# NEW <{sIFLA_LINKINFO}> 1
//? Consts["/syscall/EMSGSIZE"] = syscall.EMSGSIZE
//# OLD <{sEMSGSIZE}> 0
//# NEW <{sEMSGSIZE}> 1
//? Consts["/syscall/SYS_PWRITE64"] = syscall.SYS_PWRITE64
//# OLD <{sSYS_PWRITE64}> 0
//# NEW <{sSYS_PWRITE64}> 1
Funcs["/syscall/Rename"] = syscall.Rename
//# OLD <{sRename}> 0
//# NEW <{sRename}> 1
Funcs["/syscall/Iopl"] = syscall.Iopl
//# OLD <{sIopl}> 0
//# NEW <{sIopl}> 1
//? Consts["/syscall/IN_UNMOUNT"] = syscall.IN_UNMOUNT
//# OLD <{sIN_UNMOUNT}> 0
//# NEW <{sIN_UNMOUNT}> 1
//? Consts["/syscall/ENOTRECOVERABLE"] = syscall.ENOTRECOVERABLE
//# OLD <{sENOTRECOVERABLE}> 0
//# NEW <{sENOTRECOVERABLE}> 1
//? Consts["/syscall/PR_SET_FPEXC"] = syscall.PR_SET_FPEXC
//# OLD <{sPR_SET_FPEXC}> 0
//# NEW <{sPR_SET_FPEXC}> 1
//? Consts["/syscall/RTF_IRTT"] = syscall.RTF_IRTT
//# OLD <{sRTF_IRTT}> 0
//# NEW <{sRTF_IRTT}> 1
//? Consts["/syscall/IPPROTO_EGP"] = syscall.IPPROTO_EGP
//# OLD <{sIPPROTO_EGP}> 0
//# NEW <{sIPPROTO_EGP}> 1
//? Consts["/syscall/MS_NODIRATIME"] = syscall.MS_NODIRATIME
//# OLD <{sMS_NODIRATIME}> 0
//# NEW <{sMS_NODIRATIME}> 1
//? Consts["/syscall/SYS_CAPGET"] = syscall.SYS_CAPGET
//# OLD <{sSYS_CAPGET}> 0
//# NEW <{sSYS_CAPGET}> 1
//? Consts["/syscall/TIOCGSOFTCAR"] = syscall.TIOCGSOFTCAR
//# OLD <{sTIOCGSOFTCAR}> 0
//# NEW <{sTIOCGSOFTCAR}> 1
//? Consts["/syscall/IPV6_RECVTCLASS"] = syscall.IPV6_RECVTCLASS
//# OLD <{sIPV6_RECVTCLASS}> 0
//# NEW <{sIPV6_RECVTCLASS}> 1
//? Consts["/syscall/B2000000"] = syscall.B2000000
//# OLD <{sB2000000}> 0
//# NEW <{sB2000000}> 1
//? Consts["/syscall/AF_KEY"] = syscall.AF_KEY
//# OLD <{sAF_KEY}> 0
//# NEW <{sAF_KEY}> 1
//? Consts["/syscall/PACKET_RECV_OUTPUT"] = syscall.PACKET_RECV_OUTPUT
//# OLD <{sPACKET_RECV_OUTPUT}> 0
//# NEW <{sPACKET_RECV_OUTPUT}> 1
//? Consts["/syscall/ARPHRD_SIT"] = syscall.ARPHRD_SIT
//# OLD <{sARPHRD_SIT}> 0
//# NEW <{sARPHRD_SIT}> 1
Funcs["/syscall/Exec"] = syscall.Exec
//# OLD <{sExec}> 0
//# NEW <{sExec}> 1
//? Consts["/syscall/PR_FP_EXC_RES"] = syscall.PR_FP_EXC_RES
//# OLD <{sPR_FP_EXC_RES}> 0
//# NEW <{sPR_FP_EXC_RES}> 1
//? Consts["/syscall/IFF_LOOPBACK"] = syscall.IFF_LOOPBACK
//# OLD <{sIFF_LOOPBACK}> 0
//# NEW <{sIFF_LOOPBACK}> 1
//? Consts["/syscall/TUNGETFEATURES"] = syscall.TUNGETFEATURES
//# OLD <{sTUNGETFEATURES}> 0
//# NEW <{sTUNGETFEATURES}> 1
//? Consts["/syscall/BPF_LEN"] = syscall.BPF_LEN
//# OLD <{sBPF_LEN}> 0
//# NEW <{sBPF_LEN}> 1
//? Consts["/syscall/ARPHRD_ADAPT"] = syscall.ARPHRD_ADAPT
//# OLD <{sARPHRD_ADAPT}> 0
//# NEW <{sARPHRD_ADAPT}> 1
Funcs["/syscall/InotifyAddWatch"] = syscall.InotifyAddWatch
//# OLD <{sInotifyAddWatch}> 0
//# NEW <{sInotifyAddWatch}> 1
//? Consts["/syscall/SO_KEEPALIVE"] = syscall.SO_KEEPALIVE
//# OLD <{sSO_KEEPALIVE}> 0
//# NEW <{sSO_KEEPALIVE}> 1
//? Consts["/syscall/SYS_READV"] = syscall.SYS_READV
//# OLD <{sSYS_READV}> 0
//# NEW <{sSYS_READV}> 1
//? Consts["/syscall/AF_PACKET"] = syscall.AF_PACKET
//# OLD <{sAF_PACKET}> 0
//# NEW <{sAF_PACKET}> 1
//? Consts["/syscall/ARPHRD_LOOPBACK"] = syscall.ARPHRD_LOOPBACK
//# OLD <{sARPHRD_LOOPBACK}> 0
//# NEW <{sARPHRD_LOOPBACK}> 1
//? Consts["/syscall/EPOLLMSG"] = syscall.EPOLLMSG
//# OLD <{sEPOLLMSG}> 0
//# NEW <{sEPOLLMSG}> 1
//? Consts["/syscall/IFA_ADDRESS"] = syscall.IFA_ADDRESS
//# OLD <{sIFA_ADDRESS}> 0
//# NEW <{sIFA_ADDRESS}> 1
Funcs["/syscall/LsfJump"] = syscall.LsfJump
//# OLD <{sLsfJump}> 0
//# NEW <{sLsfJump}> 1
//? Consts["/syscall/IFF_POINTOPOINT"] = syscall.IFF_POINTOPOINT
//# OLD <{sIFF_POINTOPOINT}> 0
//# NEW <{sIFF_POINTOPOINT}> 1
//? Consts["/syscall/ARPHRD_CSLIP6"] = syscall.ARPHRD_CSLIP6
//# OLD <{sARPHRD_CSLIP6}> 0
//# NEW <{sARPHRD_CSLIP6}> 1
//? Consts["/syscall/IPV6_ROUTER_ALERT"] = syscall.IPV6_ROUTER_ALERT
//# OLD <{sIPV6_ROUTER_ALERT}> 0
//# NEW <{sIPV6_ROUTER_ALERT}> 1
//? Consts["/syscall/SYS_GETGROUPS"] = syscall.SYS_GETGROUPS
//# OLD <{sSYS_GETGROUPS}> 0
//# NEW <{sSYS_GETGROUPS}> 1
Types["/syscall/Timespec"] = new(*syscall.Timespec)
//# OLD <{sTimespec}> 0
//# NEW <{sTimespec}> 1
//? Consts["/syscall/IN_CLASSB_HOST"] = syscall.IN_CLASSB_HOST
//# OLD <{sIN_CLASSB_HOST}> 0
//# NEW <{sIN_CLASSB_HOST}> 1
//? Consts["/syscall/TCP_MAXSEG"] = syscall.TCP_MAXSEG
//# OLD <{sTCP_MAXSEG}> 0
//# NEW <{sTCP_MAXSEG}> 1
//? Consts["/syscall/SYS_SYNC"] = syscall.SYS_SYNC
//# OLD <{sSYS_SYNC}> 0
//# NEW <{sSYS_SYNC}> 1
//? Consts["/syscall/SIGCHLD"] = syscall.SIGCHLD
//# OLD <{sSIGCHLD}> 0
//# NEW <{sSIGCHLD}> 1
//? Consts["/syscall/SHUT_WR"] = syscall.SHUT_WR
//# OLD <{sSHUT_WR}> 0
//# NEW <{sSHUT_WR}> 1
Funcs["/syscall/Getgid"] = syscall.Getgid
//# OLD <{sGetgid}> 0
//# NEW <{sGetgid}> 1
//? Consts["/syscall/MADV_NOHUGEPAGE"] = syscall.MADV_NOHUGEPAGE
//# OLD <{sMADV_NOHUGEPAGE}> 0
//# NEW <{sMADV_NOHUGEPAGE}> 1
//? Consts["/syscall/SO_PROTOCOL"] = syscall.SO_PROTOCOL
//# OLD <{sSO_PROTOCOL}> 0
//# NEW <{sSO_PROTOCOL}> 1
//? Consts["/syscall/EAFNOSUPPORT"] = syscall.EAFNOSUPPORT
//# OLD <{sEAFNOSUPPORT}> 0
//# NEW <{sEAFNOSUPPORT}> 1
//? Consts["/syscall/SYS_EPOLL_CTL"] = syscall.SYS_EPOLL_CTL
//# OLD <{sSYS_EPOLL_CTL}> 0
//# NEW <{sSYS_EPOLL_CTL}> 1
//? Consts["/syscall/EPROTOTYPE"] = syscall.EPROTOTYPE
//# OLD <{sEPROTOTYPE}> 0
//# NEW <{sEPROTOTYPE}> 1
//? Consts["/syscall/SizeofNlMsgerr"] = syscall.SizeofNlMsgerr
//# OLD <{sSizeofNlMsgerr}> 0
//# NEW <{sSizeofNlMsgerr}> 1
//? Consts["/syscall/SO_MARK"] = syscall.SO_MARK
//# OLD <{sSO_MARK}> 0
//# NEW <{sSO_MARK}> 1
//? Consts["/syscall/SYS_LINK"] = syscall.SYS_LINK
//# OLD <{sSYS_LINK}> 0
//# NEW <{sSYS_LINK}> 1
//? Consts["/syscall/SizeofNlAttr"] = syscall.SizeofNlAttr
//# OLD <{sSizeofNlAttr}> 0
//# NEW <{sSizeofNlAttr}> 1
Funcs["/syscall/Munlock"] = syscall.Munlock
//# OLD <{sMunlock}> 0
//# NEW <{sMunlock}> 1
//? Consts["/syscall/MS_REMOUNT"] = syscall.MS_REMOUNT
//# OLD <{sMS_REMOUNT}> 0
//# NEW <{sMS_REMOUNT}> 1
//? Consts["/syscall/SYS_SHMAT"] = syscall.SYS_SHMAT
//# OLD <{sSYS_SHMAT}> 0
//# NEW <{sSYS_SHMAT}> 1
//? Consts["/syscall/PROT_READ"] = syscall.PROT_READ
//# OLD <{sPROT_READ}> 0
//# NEW <{sPROT_READ}> 1
//? Consts["/syscall/RTN_UNSPEC"] = syscall.RTN_UNSPEC
//# OLD <{sRTN_UNSPEC}> 0
//# NEW <{sRTN_UNSPEC}> 1
//? Consts["/syscall/O_DSYNC"] = syscall.O_DSYNC
//# OLD <{sO_DSYNC}> 0
//# NEW <{sO_DSYNC}> 1
//? Consts["/syscall/O_RSYNC"] = syscall.O_RSYNC
//# OLD <{sO_RSYNC}> 0
//# NEW <{sO_RSYNC}> 1
Funcs["/syscall/SetsockoptInt"] = syscall.SetsockoptInt
//# OLD <{sSetsockoptInt}> 0
//# NEW <{sSetsockoptInt}> 1
//? Consts["/syscall/SYS_SIGNALFD4"] = syscall.SYS_SIGNALFD4
//# OLD <{sSYS_SIGNALFD4}> 0
//# NEW <{sSYS_SIGNALFD4}> 1
//? Consts["/syscall/SYS_GETRUSAGE"] = syscall.SYS_GETRUSAGE
//# OLD <{sSYS_GETRUSAGE}> 0
//# NEW <{sSYS_GETRUSAGE}> 1
//? Consts["/syscall/PTRACE_EVENT_EXEC"] = syscall.PTRACE_EVENT_EXEC
//# OLD <{sPTRACE_EVENT_EXEC}> 0
//# NEW <{sPTRACE_EVENT_EXEC}> 1
Funcs["/syscall/AttachLsf"] = syscall.AttachLsf
//# OLD <{sAttachLsf}> 0
//# NEW <{sAttachLsf}> 1
//? Consts["/syscall/EISCONN"] = syscall.EISCONN
//# OLD <{sEISCONN}> 0
//# NEW <{sEISCONN}> 1
Funcs["/syscall/Openat"] = syscall.Openat
//# OLD <{sOpenat}> 0
//# NEW <{sOpenat}> 1
//? Consts["/syscall/ENOTCONN"] = syscall.ENOTCONN
//# OLD <{sENOTCONN}> 0
//# NEW <{sENOTCONN}> 1
//? Consts["/syscall/NETLINK_FIB_LOOKUP"] = syscall.NETLINK_FIB_LOOKUP
//# OLD <{sNETLINK_FIB_LOOKUP}> 0
//# NEW <{sNETLINK_FIB_LOOKUP}> 1
//? Consts["/syscall/SYS_TGKILL"] = syscall.SYS_TGKILL
//# OLD <{sSYS_TGKILL}> 0
//# NEW <{sSYS_TGKILL}> 1
//? Consts["/syscall/SYS_LSEEK"] = syscall.SYS_LSEEK
//# OLD <{sSYS_LSEEK}> 0
//# NEW <{sSYS_LSEEK}> 1
//? Consts["/syscall/PROT_EXEC"] = syscall.PROT_EXEC
//# OLD <{sPROT_EXEC}> 0
//# NEW <{sPROT_EXEC}> 1
//? Consts["/syscall/LINUX_REBOOT_CMD_KEXEC"] = syscall.LINUX_REBOOT_CMD_KEXEC
//# OLD <{sLINUX_REBOOT_CMD_KEXEC}> 0
//# NEW <{sLINUX_REBOOT_CMD_KEXEC}> 1
//? Consts["/syscall/SYS_VFORK"] = syscall.SYS_VFORK
//# OLD <{sSYS_VFORK}> 0
//# NEW <{sSYS_VFORK}> 1
//? Consts["/syscall/IN_CREATE"] = syscall.IN_CREATE
//# OLD <{sIN_CREATE}> 0
//# NEW <{sIN_CREATE}> 1
Funcs["/syscall/Getdents"] = syscall.Getdents
//# OLD <{sGetdents}> 0
//# NEW <{sGetdents}> 1
//? Consts["/syscall/EINPROGRESS"] = syscall.EINPROGRESS
//# OLD <{sEINPROGRESS}> 0
//# NEW <{sEINPROGRESS}> 1
//? Consts["/syscall/IP_RETOPTS"] = syscall.IP_RETOPTS
//# OLD <{sIP_RETOPTS}> 0
//# NEW <{sIP_RETOPTS}> 1
//? Consts["/syscall/RTN_LOCAL"] = syscall.RTN_LOCAL
//# OLD <{sRTN_LOCAL}> 0
//# NEW <{sRTN_LOCAL}> 1
//? Consts["/syscall/SOCK_DGRAM"] = syscall.SOCK_DGRAM
//# OLD <{sSOCK_DGRAM}> 0
//# NEW <{sSOCK_DGRAM}> 1
//? Consts["/syscall/F_SETLEASE"] = syscall.F_SETLEASE
//# OLD <{sF_SETLEASE}> 0
//# NEW <{sF_SETLEASE}> 1
//? Consts["/syscall/SYS_MUNMAP"] = syscall.SYS_MUNMAP
//# OLD <{sSYS_MUNMAP}> 0
//# NEW <{sSYS_MUNMAP}> 1
//? Consts["/syscall/RT_CLASS_LOCAL"] = syscall.RT_CLASS_LOCAL
//# OLD <{sRT_CLASS_LOCAL}> 0
//# NEW <{sRT_CLASS_LOCAL}> 1
//? Consts["/syscall/ETH_P_DNA_RC"] = syscall.ETH_P_DNA_RC
//# OLD <{sETH_P_DNA_RC}> 0
//# NEW <{sETH_P_DNA_RC}> 1
//? Consts["/syscall/IP_PKTOPTIONS"] = syscall.IP_PKTOPTIONS
//# OLD <{sIP_PKTOPTIONS}> 0
//# NEW <{sIP_PKTOPTIONS}> 1
//? Consts["/syscall/PTRACE_GETSIGINFO"] = syscall.PTRACE_GETSIGINFO
//# OLD <{sPTRACE_GETSIGINFO}> 0
//# NEW <{sPTRACE_GETSIGINFO}> 1
Types["/syscall/RawSockaddrInet6"] = new(*syscall.RawSockaddrInet6)
//# OLD <{sRawSockaddrInet6}> 0
//# NEW <{sRawSockaddrInet6}> 1
//? Consts["/syscall/F_GETPIPE_SZ"] = syscall.F_GETPIPE_SZ
//# OLD <{sF_GETPIPE_SZ}> 0
//# NEW <{sF_GETPIPE_SZ}> 1
//? Consts["/syscall/IFF_MASTER"] = syscall.IFF_MASTER
//# OLD <{sIFF_MASTER}> 0
//# NEW <{sIFF_MASTER}> 1
//? Consts["/syscall/O_APPEND"] = syscall.O_APPEND
//# OLD <{sO_APPEND}> 0
//# NEW <{sO_APPEND}> 1
//? Consts["/syscall/F_SETLK"] = syscall.F_SETLK
//# OLD <{sF_SETLK}> 0
//# NEW <{sF_SETLK}> 1
Funcs["/syscall/StringSlicePtr"] = syscall.StringSlicePtr
//# OLD <{sStringSlicePtr}> 0
//# NEW <{sStringSlicePtr}> 1
//? Consts["/syscall/NLMSG_ALIGNTO"] = syscall.NLMSG_ALIGNTO
//# OLD <{sNLMSG_ALIGNTO}> 0
//# NEW <{sNLMSG_ALIGNTO}> 1
//? Consts["/syscall/ECHOCTL"] = syscall.ECHOCTL
//# OLD <{sECHOCTL}> 0
//# NEW <{sECHOCTL}> 1
Funcs["/syscall/Kill"] = syscall.Kill
//# OLD <{sKill}> 0
//# NEW <{sKill}> 1
//? Consts["/syscall/B0"] = syscall.B0
//# OLD <{sB0}> 0
//# NEW <{sB0}> 1
Funcs["/syscall/TimespecToNsec"] = syscall.TimespecToNsec
//# OLD <{sTimespecToNsec}> 0
//# NEW <{sTimespecToNsec}> 1
//? Consts["/syscall/NLA_ALIGNTO"] = syscall.NLA_ALIGNTO
//# OLD <{sNLA_ALIGNTO}> 0
//# NEW <{sNLA_ALIGNTO}> 1
//? Consts["/syscall/MADV_DOFORK"] = syscall.MADV_DOFORK
//# OLD <{sMADV_DOFORK}> 0
//# NEW <{sMADV_DOFORK}> 1
//? Consts["/syscall/SYS_ACCEPT"] = syscall.SYS_ACCEPT
//# OLD <{sSYS_ACCEPT}> 0
//# NEW <{sSYS_ACCEPT}> 1
//? Consts["/syscall/MADV_SEQUENTIAL"] = syscall.MADV_SEQUENTIAL
//# OLD <{sMADV_SEQUENTIAL}> 0
//# NEW <{sMADV_SEQUENTIAL}> 1
Types["/syscall/Rlimit"] = new(*syscall.Rlimit)
//# OLD <{sRlimit}> 0
//# NEW <{sRlimit}> 1
//? Consts["/syscall/RTF_REJECT"] = syscall.RTF_REJECT
//# OLD <{sRTF_REJECT}> 0
//# NEW <{sRTF_REJECT}> 1
//? Consts["/syscall/RTM_NEWNEIGH"] = syscall.RTM_NEWNEIGH
//# OLD <{sRTM_NEWNEIGH}> 0
//# NEW <{sRTM_NEWNEIGH}> 1
Funcs["/syscall/Getwd"] = syscall.Getwd
//# OLD <{sGetwd}> 0
//# NEW <{sGetwd}> 1
//? Consts["/syscall/ERANGE"] = syscall.ERANGE
//# OLD <{sERANGE}> 0
//# NEW <{sERANGE}> 1
//? Consts["/syscall/IP_IPSEC_POLICY"] = syscall.IP_IPSEC_POLICY
//# OLD <{sIP_IPSEC_POLICY}> 0
//# NEW <{sIP_IPSEC_POLICY}> 1
//? Consts["/syscall/IFLA_OPERSTATE"] = syscall.IFLA_OPERSTATE
//# OLD <{sIFLA_OPERSTATE}> 0
//# NEW <{sIFLA_OPERSTATE}> 1
//? Consts["/syscall/RTAX_MAX"] = syscall.RTAX_MAX
//# OLD <{sRTAX_MAX}> 0
//# NEW <{sRTAX_MAX}> 1
//? Consts["/syscall/F_DUPFD"] = syscall.F_DUPFD
//# OLD <{sF_DUPFD}> 0
//# NEW <{sF_DUPFD}> 1
//? Consts["/syscall/BPF_TAX"] = syscall.BPF_TAX
//# OLD <{sBPF_TAX}> 0
//# NEW <{sBPF_TAX}> 1
Funcs["/syscall/Listen"] = syscall.Listen
//# OLD <{sListen}> 0
//# NEW <{sListen}> 1
//? Consts["/syscall/SYS_SET_MEMPOLICY"] = syscall.SYS_SET_MEMPOLICY
//# OLD <{sSYS_SET_MEMPOLICY}> 0
//# NEW <{sSYS_SET_MEMPOLICY}> 1
//? Consts["/syscall/ETH_P_ATMFATE"] = syscall.ETH_P_ATMFATE
//# OLD <{sETH_P_ATMFATE}> 0
//# NEW <{sETH_P_ATMFATE}> 1
Funcs["/syscall/Mount"] = syscall.Mount
//# OLD <{sMount}> 0
//# NEW <{sMount}> 1
//? Consts["/syscall/SYS_ACCESS"] = syscall.SYS_ACCESS
//# OLD <{sSYS_ACCESS}> 0
//# NEW <{sSYS_ACCESS}> 1
//? Consts["/syscall/AF_UNSPEC"] = syscall.AF_UNSPEC
//# OLD <{sAF_UNSPEC}> 0
//# NEW <{sAF_UNSPEC}> 1
//? Consts["/syscall/SIGCLD"] = syscall.SIGCLD
//# OLD <{sSIGCLD}> 0
//# NEW <{sSIGCLD}> 1
//? Consts["/syscall/IPPROTO_MTP"] = syscall.IPPROTO_MTP
//# OLD <{sIPPROTO_MTP}> 0
//# NEW <{sIPPROTO_MTP}> 1
//? Consts["/syscall/SOCK_DCCP"] = syscall.SOCK_DCCP
//# OLD <{sSOCK_DCCP}> 0
//# NEW <{sSOCK_DCCP}> 1
//? Consts["/syscall/SYS_FSYNC"] = syscall.SYS_FSYNC
//# OLD <{sSYS_FSYNC}> 0
//# NEW <{sSYS_FSYNC}> 1
//? Consts["/syscall/MSG_WAITFORONE"] = syscall.MSG_WAITFORONE
//# OLD <{sMSG_WAITFORONE}> 0
//# NEW <{sMSG_WAITFORONE}> 1
Funcs["/syscall/Munmap"] = syscall.Munmap
//# OLD <{sMunmap}> 0
//# NEW <{sMunmap}> 1
//? Consts["/syscall/ARPHRD_IEEE802"] = syscall.ARPHRD_IEEE802
//# OLD <{sARPHRD_IEEE802}> 0
//# NEW <{sARPHRD_IEEE802}> 1
//? Consts["/syscall/IP_TRANSPARENT"] = syscall.IP_TRANSPARENT
//# OLD <{sIP_TRANSPARENT}> 0
//# NEW <{sIP_TRANSPARENT}> 1
//? Consts["/syscall/IPV6_DROP_MEMBERSHIP"] = syscall.IPV6_DROP_MEMBERSHIP
//# OLD <{sIPV6_DROP_MEMBERSHIP}> 0
//# NEW <{sIPV6_DROP_MEMBERSHIP}> 1
//? Consts["/syscall/BPF_K"] = syscall.BPF_K
//# OLD <{sBPF_K}> 0
//# NEW <{sBPF_K}> 1
//? Consts["/syscall/CS8"] = syscall.CS8
//# OLD <{sCS8}> 0
//# NEW <{sCS8}> 1
//? Consts["/syscall/MS_SYNC"] = syscall.MS_SYNC
//# OLD <{sMS_SYNC}> 0
//# NEW <{sMS_SYNC}> 1
//? Consts["/syscall/EFBIG"] = syscall.EFBIG
//# OLD <{sEFBIG}> 0
//# NEW <{sEFBIG}> 1
//? Consts["/syscall/MSG_DONTROUTE"] = syscall.MSG_DONTROUTE
//# OLD <{sMSG_DONTROUTE}> 0
//# NEW <{sMSG_DONTROUTE}> 1
//? Consts["/syscall/IP_RECVRETOPTS"] = syscall.IP_RECVRETOPTS
//# OLD <{sIP_RECVRETOPTS}> 0
//# NEW <{sIP_RECVRETOPTS}> 1
//? Consts["/syscall/PACKET_LOOPBACK"] = syscall.PACKET_LOOPBACK
//# OLD <{sPACKET_LOOPBACK}> 0
//# NEW <{sPACKET_LOOPBACK}> 1
//? Consts["/syscall/SIOCSIFNAME"] = syscall.SIOCSIFNAME
//# OLD <{sSIOCSIFNAME}> 0
//# NEW <{sSIOCSIFNAME}> 1
//? Consts["/syscall/IP_PMTUDISC_DONT"] = syscall.IP_PMTUDISC_DONT
//# OLD <{sIP_PMTUDISC_DONT}> 0
//# NEW <{sIP_PMTUDISC_DONT}> 1
Funcs["/syscall/Sysinfo"] = syscall.Sysinfo
//# OLD <{sSysinfo}> 0
//# NEW <{sSysinfo}> 1
Funcs["/syscall/Setreuid"] = syscall.Setreuid
//# OLD <{sSetreuid}> 0
//# NEW <{sSetreuid}> 1
//? Consts["/syscall/SIOCSIFTXQLEN"] = syscall.SIOCSIFTXQLEN
//# OLD <{sSIOCSIFTXQLEN}> 0
//# NEW <{sSIOCSIFTXQLEN}> 1
//? Consts["/syscall/ARPHRD_IEEE802_TR"] = syscall.ARPHRD_IEEE802_TR
//# OLD <{sARPHRD_IEEE802_TR}> 0
//# NEW <{sARPHRD_IEEE802_TR}> 1
//? Consts["/syscall/SYS_SECURITY"] = syscall.SYS_SECURITY
//# OLD <{sSYS_SECURITY}> 0
//# NEW <{sSYS_SECURITY}> 1
//? Consts["/syscall/TCP_INFO"] = syscall.TCP_INFO
//# OLD <{sTCP_INFO}> 0
//# NEW <{sTCP_INFO}> 1
Funcs["/syscall/Reboot"] = syscall.Reboot
//# OLD <{sReboot}> 0
//# NEW <{sReboot}> 1
Funcs["/syscall/Pread"] = syscall.Pread
//# OLD <{sPread}> 0
//# NEW <{sPread}> 1
//? Consts["/syscall/IPPROTO_IPIP"] = syscall.IPPROTO_IPIP
//# OLD <{sIPPROTO_IPIP}> 0
//# NEW <{sIPPROTO_IPIP}> 1
//? Consts["/syscall/E2BIG"] = syscall.E2BIG
//# OLD <{sE2BIG}> 0
//# NEW <{sE2BIG}> 1
//? Consts["/syscall/IPV6_MTU_DISCOVER"] = syscall.IPV6_MTU_DISCOVER
//# OLD <{sIPV6_MTU_DISCOVER}> 0
//# NEW <{sIPV6_MTU_DISCOVER}> 1
//? Consts["/syscall/S_IFBLK"] = syscall.S_IFBLK
//# OLD <{sS_IFBLK}> 0
//# NEW <{sS_IFBLK}> 1
//? Consts["/syscall/B57600"] = syscall.B57600
//# OLD <{sB57600}> 0
//# NEW <{sB57600}> 1
Funcs["/syscall/PtracePeekData"] = syscall.PtracePeekData
//# OLD <{sPtracePeekData}> 0
//# NEW <{sPtracePeekData}> 1
//? Consts["/syscall/IFLA_MAP"] = syscall.IFLA_MAP
//# OLD <{sIFLA_MAP}> 0
//# NEW <{sIFLA_MAP}> 1
//? Consts["/syscall/IFLA_BROADCAST"] = syscall.IFLA_BROADCAST
//# OLD <{sIFLA_BROADCAST}> 0
//# NEW <{sIFLA_BROADCAST}> 1
//? Consts["/syscall/IP_MTU_DISCOVER"] = syscall.IP_MTU_DISCOVER
//# OLD <{sIP_MTU_DISCOVER}> 0
//# NEW <{sIP_MTU_DISCOVER}> 1
Funcs["/syscall/Mknodat"] = syscall.Mknodat
//# OLD <{sMknodat}> 0
//# NEW <{sMknodat}> 1
//? Consts["/syscall/SYS_SHMCTL"] = syscall.SYS_SHMCTL
//# OLD <{sSYS_SHMCTL}> 0
//# NEW <{sSYS_SHMCTL}> 1
//? Consts["/syscall/PACKET_BROADCAST"] = syscall.PACKET_BROADCAST
//# OLD <{sPACKET_BROADCAST}> 0
//# NEW <{sPACKET_BROADCAST}> 1
Types["/syscall/Iovec"] = new(*syscall.Iovec)
//# OLD <{sIovec}> 0
//# NEW <{sIovec}> 1
//? Consts["/syscall/TCP_MD5SIG"] = syscall.TCP_MD5SIG
//# OLD <{sTCP_MD5SIG}> 0
//# NEW <{sTCP_MD5SIG}> 1
//? Consts["/syscall/SYS_MMAP"] = syscall.SYS_MMAP
//# OLD <{sSYS_MMAP}> 0
//# NEW <{sSYS_MMAP}> 1
//? Consts["/syscall/MAP_STACK"] = syscall.MAP_STACK
//# OLD <{sMAP_STACK}> 0
//# NEW <{sMAP_STACK}> 1
//? Consts["/syscall/MSG_RST"] = syscall.MSG_RST
//# OLD <{sMSG_RST}> 0
//# NEW <{sMSG_RST}> 1
//? Consts["/syscall/NLMSG_HDRLEN"] = syscall.NLMSG_HDRLEN
//# OLD <{sNLMSG_HDRLEN}> 0
//# NEW <{sNLMSG_HDRLEN}> 1
//? Consts["/syscall/TIOCSSOFTCAR"] = syscall.TIOCSSOFTCAR
//# OLD <{sTIOCSSOFTCAR}> 0
//# NEW <{sTIOCSSOFTCAR}> 1
Types["/syscall/RtNexthop"] = new(*syscall.RtNexthop)
//# OLD <{sRtNexthop}> 0
//# NEW <{sRtNexthop}> 1
Funcs["/syscall/Gettid"] = syscall.Gettid
//# OLD <{sGettid}> 0
//# NEW <{sGettid}> 1
//? Consts["/syscall/XCASE"] = syscall.XCASE
//# OLD <{sXCASE}> 0
//# NEW <{sXCASE}> 1
//? Consts["/syscall/SYS_GETCWD"] = syscall.SYS_GETCWD
//# OLD <{sSYS_GETCWD}> 0
//# NEW <{sSYS_GETCWD}> 1
//? Consts["/syscall/MNT_FORCE"] = syscall.MNT_FORCE
//# OLD <{sMNT_FORCE}> 0
//# NEW <{sMNT_FORCE}> 1
//? Consts["/syscall/ECONNRESET"] = syscall.ECONNRESET
//# OLD <{sECONNRESET}> 0
//# NEW <{sECONNRESET}> 1
//? Consts["/syscall/SIOCADDMULTI"] = syscall.SIOCADDMULTI
//# OLD <{sSIOCADDMULTI}> 0
//# NEW <{sSIOCADDMULTI}> 1
//? Consts["/syscall/F_OK"] = syscall.F_OK
//# OLD <{sF_OK}> 0
//# NEW <{sF_OK}> 1
Funcs["/syscall/Chroot"] = syscall.Chroot
//# OLD <{sChroot}> 0
//# NEW <{sChroot}> 1
//? Consts["/syscall/TIOCINQ"] = syscall.TIOCINQ
//# OLD <{sTIOCINQ}> 0
//# NEW <{sTIOCINQ}> 1
//? Consts["/syscall/RTN_MULTICAST"] = syscall.RTN_MULTICAST
//# OLD <{sRTN_MULTICAST}> 0
//# NEW <{sRTN_MULTICAST}> 1
//? Consts["/syscall/INPCK"] = syscall.INPCK
//# OLD <{sINPCK}> 0
//# NEW <{sINPCK}> 1
//? Consts["/syscall/RTAX_RTO_MIN"] = syscall.RTAX_RTO_MIN
//# OLD <{sRTAX_RTO_MIN}> 0
//# NEW <{sRTAX_RTO_MIN}> 1
//? Consts["/syscall/O_LARGEFILE"] = syscall.O_LARGEFILE
//# OLD <{sO_LARGEFILE}> 0
//# NEW <{sO_LARGEFILE}> 1
//? Consts["/syscall/MS_I_VERSION"] = syscall.MS_I_VERSION
//# OLD <{sMS_I_VERSION}> 0
//# NEW <{sMS_I_VERSION}> 1
//? Consts["/syscall/SIOCSIFADDR"] = syscall.SIOCSIFADDR
//# OLD <{sSIOCSIFADDR}> 0
//# NEW <{sSIOCSIFADDR}> 1
//? Consts["/syscall/MNT_EXPIRE"] = syscall.MNT_EXPIRE
//# OLD <{sMNT_EXPIRE}> 0
//# NEW <{sMNT_EXPIRE}> 1
//? Consts["/syscall/SYS_FANOTIFY_INIT"] = syscall.SYS_FANOTIFY_INIT
//# OLD <{sSYS_FANOTIFY_INIT}> 0
//# NEW <{sSYS_FANOTIFY_INIT}> 1
//? Consts["/syscall/TCP_CORK"] = syscall.TCP_CORK
//# OLD <{sTCP_CORK}> 0
//# NEW <{sTCP_CORK}> 1
//? Consts["/syscall/PR_FP_EXC_PRECISE"] = syscall.PR_FP_EXC_PRECISE
//# OLD <{sPR_FP_EXC_PRECISE}> 0
//# NEW <{sPR_FP_EXC_PRECISE}> 1
//? Consts["/syscall/NETLINK_NETFILTER"] = syscall.NETLINK_NETFILTER
//# OLD <{sNETLINK_NETFILTER}> 0
//# NEW <{sNETLINK_NETFILTER}> 1
//? Consts["/syscall/RTNH_F_DEAD"] = syscall.RTNH_F_DEAD
//# OLD <{sRTNH_F_DEAD}> 0
//# NEW <{sRTNH_F_DEAD}> 1
//? Consts["/syscall/SYS_GETUID"] = syscall.SYS_GETUID
//# OLD <{sSYS_GETUID}> 0
//# NEW <{sSYS_GETUID}> 1
//? Consts["/syscall/PTRACE_EVENT_FORK"] = syscall.PTRACE_EVENT_FORK
//# OLD <{sPTRACE_EVENT_FORK}> 0
//# NEW <{sPTRACE_EVENT_FORK}> 1
//? Consts["/syscall/F_ULOCK"] = syscall.F_ULOCK
//# OLD <{sF_ULOCK}> 0
//# NEW <{sF_ULOCK}> 1
//? Consts["/syscall/SO_PASSSEC"] = syscall.SO_PASSSEC
//# OLD <{sSO_PASSSEC}> 0
//# NEW <{sSO_PASSSEC}> 1
//? Consts["/syscall/ETH_P_SCA"] = syscall.ETH_P_SCA
//# OLD <{sETH_P_SCA}> 0
//# NEW <{sETH_P_SCA}> 1
//? Consts["/syscall/SYS_IO_DESTROY"] = syscall.SYS_IO_DESTROY
//# OLD <{sSYS_IO_DESTROY}> 0
//# NEW <{sSYS_IO_DESTROY}> 1
//? Consts["/syscall/PR_ENDIAN_PPC_LITTLE"] = syscall.PR_ENDIAN_PPC_LITTLE
//# OLD <{sPR_ENDIAN_PPC_LITTLE}> 0
//# NEW <{sPR_ENDIAN_PPC_LITTLE}> 1
//? Consts["/syscall/RTF_STATIC"] = syscall.RTF_STATIC
//# OLD <{sRTF_STATIC}> 0
//# NEW <{sRTF_STATIC}> 1
//? Consts["/syscall/B1000000"] = syscall.B1000000
//# OLD <{sB1000000}> 0
//# NEW <{sB1000000}> 1
//? Consts["/syscall/PACKET_MULTICAST"] = syscall.PACKET_MULTICAST
//# OLD <{sPACKET_MULTICAST}> 0
//# NEW <{sPACKET_MULTICAST}> 1
//? Consts["/syscall/TIOCMBIS"] = syscall.TIOCMBIS
//# OLD <{sTIOCMBIS}> 0
//# NEW <{sTIOCMBIS}> 1
Types["/syscall/Tms"] = new(*syscall.Tms)
//# OLD <{sTms}> 0
//# NEW <{sTms}> 1
//? Consts["/syscall/SizeofSockaddrInet4"] = syscall.SizeofSockaddrInet4
//# OLD <{sSizeofSockaddrInet4}> 0
//# NEW <{sSizeofSockaddrInet4}> 1
//? Consts["/syscall/PR_FP_EXC_DISABLED"] = syscall.PR_FP_EXC_DISABLED
//# OLD <{sPR_FP_EXC_DISABLED}> 0
//# NEW <{sPR_FP_EXC_DISABLED}> 1
//? Consts["/syscall/EILSEQ"] = syscall.EILSEQ
//# OLD <{sEILSEQ}> 0
//# NEW <{sEILSEQ}> 1
//? Consts["/syscall/RTPROT_BIRD"] = syscall.RTPROT_BIRD
//# OLD <{sRTPROT_BIRD}> 0
//# NEW <{sRTPROT_BIRD}> 1
//? Consts["/syscall/SYS_SENDFILE"] = syscall.SYS_SENDFILE
//# OLD <{sSYS_SENDFILE}> 0
//# NEW <{sSYS_SENDFILE}> 1
//? Consts["/syscall/IPPROTO_RSVP"] = syscall.IPPROTO_RSVP
//# OLD <{sIPPROTO_RSVP}> 0
//# NEW <{sIPPROTO_RSVP}> 1
//? Consts["/syscall/PR_GET_TIMERSLACK"] = syscall.PR_GET_TIMERSLACK
//# OLD <{sPR_GET_TIMERSLACK}> 0
//# NEW <{sPR_GET_TIMERSLACK}> 1
//? Consts["/syscall/PACKET_OTHERHOST"] = syscall.PACKET_OTHERHOST
//# OLD <{sPACKET_OTHERHOST}> 0
//# NEW <{sPACKET_OTHERHOST}> 1
//? Consts["/syscall/EADV"] = syscall.EADV
//# OLD <{sEADV}> 0
//# NEW <{sEADV}> 1
//? Consts["/syscall/LINUX_REBOOT_CMD_POWER_OFF"] = syscall.LINUX_REBOOT_CMD_POWER_OFF
//# OLD <{sLINUX_REBOOT_CMD_POWER_OFF}> 0
//# NEW <{sLINUX_REBOOT_CMD_POWER_OFF}> 1
//? Consts["/syscall/VEOF"] = syscall.VEOF
//# OLD <{sVEOF}> 0
//# NEW <{sVEOF}> 1
//? Consts["/syscall/PACKET_HOST"] = syscall.PACKET_HOST
//# OLD <{sPACKET_HOST}> 0
//# NEW <{sPACKET_HOST}> 1
Funcs["/syscall/StartProcess"] = syscall.StartProcess
//# OLD <{sStartProcess}> 0
//# NEW <{sStartProcess}> 1
//? Consts["/syscall/EIDRM"] = syscall.EIDRM
//# OLD <{sEIDRM}> 0
//# NEW <{sEIDRM}> 1
//? Consts["/syscall/TUNGETIFF"] = syscall.TUNGETIFF
//# OLD <{sTUNGETIFF}> 0
//# NEW <{sTUNGETIFF}> 1
//? Consts["/syscall/O_RDONLY"] = syscall.O_RDONLY
//# OLD <{sO_RDONLY}> 0
//# NEW <{sO_RDONLY}> 1
//? Consts["/syscall/PR_MCE_KILL_LATE"] = syscall.PR_MCE_KILL_LATE
//# OLD <{sPR_MCE_KILL_LATE}> 0
//# NEW <{sPR_MCE_KILL_LATE}> 1
//? Consts["/syscall/MAP_HUGETLB"] = syscall.MAP_HUGETLB
//# OLD <{sMAP_HUGETLB}> 0
//# NEW <{sMAP_HUGETLB}> 1
//? Consts["/syscall/SYS_GETPGRP"] = syscall.SYS_GETPGRP
//# OLD <{sSYS_GETPGRP}> 0
//# NEW <{sSYS_GETPGRP}> 1
//? Consts["/syscall/RUSAGE_CHILDREN"] = syscall.RUSAGE_CHILDREN
//# OLD <{sRUSAGE_CHILDREN}> 0
//# NEW <{sRUSAGE_CHILDREN}> 1
//? Consts["/syscall/SYS_GETPGID"] = syscall.SYS_GETPGID
//# OLD <{sSYS_GETPGID}> 0
//# NEW <{sSYS_GETPGID}> 1
//? Consts["/syscall/IPV6_2292RTHDR"] = syscall.IPV6_2292RTHDR
//# OLD <{sIPV6_2292RTHDR}> 0
//# NEW <{sIPV6_2292RTHDR}> 1
//? Consts["/syscall/BPF_JEQ"] = syscall.BPF_JEQ
//# OLD <{sBPF_JEQ}> 0
//# NEW <{sBPF_JEQ}> 1
//? Consts["/syscall/IPV6_JOIN_GROUP"] = syscall.IPV6_JOIN_GROUP
//# OLD <{sIPV6_JOIN_GROUP}> 0
//# NEW <{sIPV6_JOIN_GROUP}> 1
//? Consts["/syscall/TUNSETDEBUG"] = syscall.TUNSETDEBUG
//# OLD <{sTUNSETDEBUG}> 0
//# NEW <{sTUNSETDEBUG}> 1
Types["/syscall/Msghdr"] = new(*syscall.Msghdr)
//# OLD <{sMsghdr}> 0
//# NEW <{sMsghdr}> 1
//? Consts["/syscall/SYS_VHANGUP"] = syscall.SYS_VHANGUP
//# OLD <{sSYS_VHANGUP}> 0
//# NEW <{sSYS_VHANGUP}> 1
//? Consts["/syscall/SIGILL"] = syscall.SIGILL
//# OLD <{sSIGILL}> 0
//# NEW <{sSIGILL}> 1
//? Consts["/syscall/NLM_F_ATOMIC"] = syscall.NLM_F_ATOMIC
//# OLD <{sNLM_F_ATOMIC}> 0
//# NEW <{sNLM_F_ATOMIC}> 1
Funcs["/syscall/CloseOnExec"] = syscall.CloseOnExec
//# OLD <{sCloseOnExec}> 0
//# NEW <{sCloseOnExec}> 1
//? Consts["/syscall/EPOLLWRNORM"] = syscall.EPOLLWRNORM
//# OLD <{sEPOLLWRNORM}> 0
//# NEW <{sEPOLLWRNORM}> 1
//? Consts["/syscall/O_ACCMODE"] = syscall.O_ACCMODE
//# OLD <{sO_ACCMODE}> 0
//# NEW <{sO_ACCMODE}> 1
//? Consts["/syscall/SCM_TIMESTAMPING"] = syscall.SCM_TIMESTAMPING
//# OLD <{sSCM_TIMESTAMPING}> 0
//# NEW <{sSCM_TIMESTAMPING}> 1
//? Consts["/syscall/SYS_SCHED_GET_PRIORITY_MAX"] = syscall.SYS_SCHED_GET_PRIORITY_MAX
//# OLD <{sSYS_SCHED_GET_PRIORITY_MAX}> 0
//# NEW <{sSYS_SCHED_GET_PRIORITY_MAX}> 1
//? Consts["/syscall/EPOLLET"] = syscall.EPOLLET
//# OLD <{sEPOLLET}> 0
//# NEW <{sEPOLLET}> 1
//? Consts["/syscall/MAP_32BIT"] = syscall.MAP_32BIT
//# OLD <{sMAP_32BIT}> 0
//# NEW <{sMAP_32BIT}> 1
//? Consts["/syscall/IPPROTO_UDP"] = syscall.IPPROTO_UDP
//# OLD <{sIPPROTO_UDP}> 0
//# NEW <{sIPPROTO_UDP}> 1
Funcs["/syscall/Umask"] = syscall.Umask
//# OLD <{sUmask}> 0
//# NEW <{sUmask}> 1
//? Consts["/syscall/RTF_WINDOW"] = syscall.RTF_WINDOW
//# OLD <{sRTF_WINDOW}> 0
//# NEW <{sRTF_WINDOW}> 1
//? Consts["/syscall/TUNSETIFF"] = syscall.TUNSETIFF
//# OLD <{sTUNSETIFF}> 0
//# NEW <{sTUNSETIFF}> 1
Funcs["/syscall/SetsockoptString"] = syscall.SetsockoptString
//# OLD <{sSetsockoptString}> 0
//# NEW <{sSetsockoptString}> 1
Funcs["/syscall/PtraceSingleStep"] = syscall.PtraceSingleStep
//# OLD <{sPtraceSingleStep}> 0
//# NEW <{sPtraceSingleStep}> 1
//? Consts["/syscall/EWOULDBLOCK"] = syscall.EWOULDBLOCK
//# OLD <{sEWOULDBLOCK}> 0
//# NEW <{sEWOULDBLOCK}> 1
//? Consts["/syscall/IGNBRK"] = syscall.IGNBRK
//# OLD <{sIGNBRK}> 0
//# NEW <{sIGNBRK}> 1
//? Consts["/syscall/ARPHRD_SLIP"] = syscall.ARPHRD_SLIP
//# OLD <{sARPHRD_SLIP}> 0
//# NEW <{sARPHRD_SLIP}> 1
//? Consts["/syscall/IFF_TUN_EXCL"] = syscall.IFF_TUN_EXCL
//# OLD <{sIFF_TUN_EXCL}> 0
//# NEW <{sIFF_TUN_EXCL}> 1
//? Consts["/syscall/EL3HLT"] = syscall.EL3HLT
//# OLD <{sEL3HLT}> 0
//# NEW <{sEL3HLT}> 1
//? Consts["/syscall/F_DUPFD_CLOEXEC"] = syscall.F_DUPFD_CLOEXEC
//# OLD <{sF_DUPFD_CLOEXEC}> 0
//# NEW <{sF_DUPFD_CLOEXEC}> 1
//? Consts["/syscall/SYS_PERSONALITY"] = syscall.SYS_PERSONALITY
//# OLD <{sSYS_PERSONALITY}> 0
//# NEW <{sSYS_PERSONALITY}> 1
//? Consts["/syscall/RTAX_HOPLIMIT"] = syscall.RTAX_HOPLIMIT
//# OLD <{sRTAX_HOPLIMIT}> 0
//# NEW <{sRTAX_HOPLIMIT}> 1
//? Consts["/syscall/RT_TABLE_UNSPEC"] = syscall.RT_TABLE_UNSPEC
//# OLD <{sRT_TABLE_UNSPEC}> 0
//# NEW <{sRT_TABLE_UNSPEC}> 1
//? Consts["/syscall/SIGTSTP"] = syscall.SIGTSTP
//# OLD <{sSIGTSTP}> 0
//# NEW <{sSIGTSTP}> 1
Types["/syscall/RtGenmsg"] = new(*syscall.RtGenmsg)
//# OLD <{sRtGenmsg}> 0
//# NEW <{sRtGenmsg}> 1
//? Consts["/syscall/BPF_MUL"] = syscall.BPF_MUL
//# OLD <{sBPF_MUL}> 0
//# NEW <{sBPF_MUL}> 1
//? Consts["/syscall/VSTART"] = syscall.VSTART
//# OLD <{sVSTART}> 0
//# NEW <{sVSTART}> 1
Funcs["/syscall/Sendmsg"] = syscall.Sendmsg
//# OLD <{sSendmsg}> 0
//# NEW <{sSendmsg}> 1
//? Consts["/syscall/IPV6_LEAVE_ANYCAST"] = syscall.IPV6_LEAVE_ANYCAST
//# OLD <{sIPV6_LEAVE_ANYCAST}> 0
//# NEW <{sIPV6_LEAVE_ANYCAST}> 1
//? Consts["/syscall/RTN_THROW"] = syscall.RTN_THROW
//# OLD <{sRTN_THROW}> 0
//# NEW <{sRTN_THROW}> 1
//? Consts["/syscall/PTRACE_DETACH"] = syscall.PTRACE_DETACH
//# OLD <{sPTRACE_DETACH}> 0
//# NEW <{sPTRACE_DETACH}> 1
//? Consts["/syscall/PTRACE_O_TRACEVFORK"] = syscall.PTRACE_O_TRACEVFORK
//# OLD <{sPTRACE_O_TRACEVFORK}> 0
//# NEW <{sPTRACE_O_TRACEVFORK}> 1
Funcs["/syscall/SetsockoptIPMreq"] = syscall.SetsockoptIPMreq
//# OLD <{sSetsockoptIPMreq}> 0
//# NEW <{sSetsockoptIPMreq}> 1
//? Consts["/syscall/S_IRWXG"] = syscall.S_IRWXG
//# OLD <{sS_IRWXG}> 0
//# NEW <{sS_IRWXG}> 1
//? Consts["/syscall/SYS_MUNLOCKALL"] = syscall.SYS_MUNLOCKALL
//# OLD <{sSYS_MUNLOCKALL}> 0
//# NEW <{sSYS_MUNLOCKALL}> 1
//? Consts["/syscall/TIOCPKT_NOSTOP"] = syscall.TIOCPKT_NOSTOP
//# OLD <{sTIOCPKT_NOSTOP}> 0
//# NEW <{sTIOCPKT_NOSTOP}> 1
//? Consts["/syscall/RTA_UNSPEC"] = syscall.RTA_UNSPEC
//# OLD <{sRTA_UNSPEC}> 0
//# NEW <{sRTA_UNSPEC}> 1
//? Consts["/syscall/SYS_CHDIR"] = syscall.SYS_CHDIR
//# OLD <{sSYS_CHDIR}> 0
//# NEW <{sSYS_CHDIR}> 1
//? Consts["/syscall/MSG_PROXY"] = syscall.MSG_PROXY
//# OLD <{sMSG_PROXY}> 0
//# NEW <{sMSG_PROXY}> 1
//? Consts["/syscall/SYS_MPROTECT"] = syscall.SYS_MPROTECT
//# OLD <{sSYS_MPROTECT}> 0
//# NEW <{sSYS_MPROTECT}> 1
Funcs["/syscall/Utimes"] = syscall.Utimes
//# OLD <{sUtimes}> 0
//# NEW <{sUtimes}> 1
//? Consts["/syscall/SIOCGIFFLAGS"] = syscall.SIOCGIFFLAGS
//# OLD <{sSIOCGIFFLAGS}> 0
//# NEW <{sSIOCGIFFLAGS}> 1
//? Consts["/syscall/AF_NETROM"] = syscall.AF_NETROM
//# OLD <{sAF_NETROM}> 0
//# NEW <{sAF_NETROM}> 1
//? Consts["/syscall/VSTOP"] = syscall.VSTOP
//# OLD <{sVSTOP}> 0
//# NEW <{sVSTOP}> 1
Funcs["/syscall/Madvise"] = syscall.Madvise
//# OLD <{sMadvise}> 0
//# NEW <{sMadvise}> 1
//? Consts["/syscall/PENDIN"] = syscall.PENDIN
//# OLD <{sPENDIN}> 0
//# NEW <{sPENDIN}> 1
//? Consts["/syscall/BPF_MISC"] = syscall.BPF_MISC
//# OLD <{sBPF_MISC}> 0
//# NEW <{sBPF_MISC}> 1
//? Consts["/syscall/TCP_KEEPCNT"] = syscall.TCP_KEEPCNT
//# OLD <{sTCP_KEEPCNT}> 0
//# NEW <{sTCP_KEEPCNT}> 1
//? Consts["/syscall/SIOCDEVPRIVATE"] = syscall.SIOCDEVPRIVATE
//# OLD <{sSIOCDEVPRIVATE}> 0
//# NEW <{sSIOCDEVPRIVATE}> 1
//? Consts["/syscall/EOPNOTSUPP"] = syscall.EOPNOTSUPP
//# OLD <{sEOPNOTSUPP}> 0
//# NEW <{sEOPNOTSUPP}> 1
//? Consts["/syscall/SO_ATTACH_FILTER"] = syscall.SO_ATTACH_FILTER
//# OLD <{sSO_ATTACH_FILTER}> 0
//# NEW <{sSO_ATTACH_FILTER}> 1
Funcs["/syscall/Setfsgid"] = syscall.Setfsgid
//# OLD <{sSetfsgid}> 0
//# NEW <{sSetfsgid}> 1
//? Consts["/syscall/IPV6_HOPLIMIT"] = syscall.IPV6_HOPLIMIT
//# OLD <{sIPV6_HOPLIMIT}> 0
//# NEW <{sIPV6_HOPLIMIT}> 1
//? Consts["/syscall/ETH_P_DIAG"] = syscall.ETH_P_DIAG
//# OLD <{sETH_P_DIAG}> 0
//# NEW <{sETH_P_DIAG}> 1
//? Consts["/syscall/BPF_W"] = syscall.BPF_W
//# OLD <{sBPF_W}> 0
//# NEW <{sBPF_W}> 1
//? Consts["/syscall/TIOCSERGSTRUCT"] = syscall.TIOCSERGSTRUCT
//# OLD <{sTIOCSERGSTRUCT}> 0
//# NEW <{sTIOCSERGSTRUCT}> 1
//? Consts["/syscall/RTA_SRC"] = syscall.RTA_SRC
//# OLD <{sRTA_SRC}> 0
//# NEW <{sRTA_SRC}> 1
//? Consts["/syscall/SizeofSockaddrAny"] = syscall.SizeofSockaddrAny
//# OLD <{sSizeofSockaddrAny}> 0
//# NEW <{sSizeofSockaddrAny}> 1
//? Consts["/syscall/NLMSG_NOOP"] = syscall.NLMSG_NOOP
//# OLD <{sNLMSG_NOOP}> 0
//# NEW <{sNLMSG_NOOP}> 1
Funcs["/syscall/Socket"] = syscall.Socket
//# OLD <{sSocket}> 0
//# NEW <{sSocket}> 1
Funcs["/syscall/ParseSocketControlMessage"] = syscall.ParseSocketControlMessage
//# OLD <{sParseSocketControlMessage}> 0
//# NEW <{sParseSocketControlMessage}> 1
//? Consts["/syscall/NETLINK_GENERIC"] = syscall.NETLINK_GENERIC
//# OLD <{sNETLINK_GENERIC}> 0
//# NEW <{sNETLINK_GENERIC}> 1
//? Consts["/syscall/S_IWRITE"] = syscall.S_IWRITE
//# OLD <{sS_IWRITE}> 0
//# NEW <{sS_IWRITE}> 1
//? Consts["/syscall/IP_MSFILTER"] = syscall.IP_MSFILTER
//# OLD <{sIP_MSFILTER}> 0
//# NEW <{sIP_MSFILTER}> 1
Funcs["/syscall/Utime"] = syscall.Utime
//# OLD <{sUtime}> 0
//# NEW <{sUtime}> 1
//? Consts["/syscall/EMEDIUMTYPE"] = syscall.EMEDIUMTYPE
//# OLD <{sEMEDIUMTYPE}> 0
//# NEW <{sEMEDIUMTYPE}> 1
//? Consts["/syscall/SO_DONTROUTE"] = syscall.SO_DONTROUTE
//# OLD <{sSO_DONTROUTE}> 0
//# NEW <{sSO_DONTROUTE}> 1
//? Consts["/syscall/SOL_ICMPV6"] = syscall.SOL_ICMPV6
//# OLD <{sSOL_ICMPV6}> 0
//# NEW <{sSOL_ICMPV6}> 1
//? Consts["/syscall/SYS_TEE"] = syscall.SYS_TEE
//# OLD <{sSYS_TEE}> 0
//# NEW <{sSYS_TEE}> 1
Types["/syscall/Ustat_t"] = new(*syscall.Ustat_t)
//# OLD <{sUstat_t}> 0
//# NEW <{sUstat_t}> 1
//? Consts["/syscall/RLIMIT_CPU"] = syscall.RLIMIT_CPU
//# OLD <{sRLIMIT_CPU}> 0
//# NEW <{sRLIMIT_CPU}> 1
//? Consts["/syscall/EINVAL"] = syscall.EINVAL
//# OLD <{sEINVAL}> 0
//# NEW <{sEINVAL}> 1
//? Consts["/syscall/PR_UNALIGN_SIGBUS"] = syscall.PR_UNALIGN_SIGBUS
//# OLD <{sPR_UNALIGN_SIGBUS}> 0
//# NEW <{sPR_UNALIGN_SIGBUS}> 1
//? Consts["/syscall/SIOCSIFMETRIC"] = syscall.SIOCSIFMETRIC
//# OLD <{sSIOCSIFMETRIC}> 0
//# NEW <{sSIOCSIFMETRIC}> 1
Funcs["/syscall/Syscall"] = syscall.Syscall
//# OLD <{sSyscall}> 0
//# NEW <{sSyscall}> 1
//? Consts["/syscall/TIOCCONS"] = syscall.TIOCCONS
//# OLD <{sTIOCCONS}> 0
//# NEW <{sTIOCCONS}> 1
//? Consts["/syscall/ARPHRD_NONE"] = syscall.ARPHRD_NONE
//# OLD <{sARPHRD_NONE}> 0
//# NEW <{sARPHRD_NONE}> 1
//? Consts["/syscall/SYS_UMASK"] = syscall.SYS_UMASK
//# OLD <{sSYS_UMASK}> 0
//# NEW <{sSYS_UMASK}> 1
Funcs["/syscall/Mlock"] = syscall.Mlock
//# OLD <{sMlock}> 0
//# NEW <{sMlock}> 1
//? Consts["/syscall/ETH_P_PUP"] = syscall.ETH_P_PUP
//# OLD <{sETH_P_PUP}> 0
//# NEW <{sETH_P_PUP}> 1
Funcs["/syscall/GetsockoptInt"] = syscall.GetsockoptInt
//# OLD <{sGetsockoptInt}> 0
//# NEW <{sGetsockoptInt}> 1
//? Consts["/syscall/SYS_SETREGID"] = syscall.SYS_SETREGID
//# OLD <{sSYS_SETREGID}> 0
//# NEW <{sSYS_SETREGID}> 1
//? Consts["/syscall/ENOSTR"] = syscall.ENOSTR
//# OLD <{sENOSTR}> 0
//# NEW <{sENOSTR}> 1
Funcs["/syscall/Acct"] = syscall.Acct
//# OLD <{sAcct}> 0
//# NEW <{sAcct}> 1
//? Consts["/syscall/ENETDOWN"] = syscall.ENETDOWN
//# OLD <{sENETDOWN}> 0
//# NEW <{sENETDOWN}> 1
//? Consts["/syscall/SizeofSockFprog"] = syscall.SizeofSockFprog
//# OLD <{sSizeofSockFprog}> 0
//# NEW <{sSizeofSockFprog}> 1
//? Consts["/syscall/ELIBSCN"] = syscall.ELIBSCN
//# OLD <{sELIBSCN}> 0
//# NEW <{sELIBSCN}> 1
//? Consts["/syscall/SYS_GETRESGID"] = syscall.SYS_GETRESGID
//# OLD <{sSYS_GETRESGID}> 0
//# NEW <{sSYS_GETRESGID}> 1
//? Consts["/syscall/MS_REC"] = syscall.MS_REC
//# OLD <{sMS_REC}> 0
//# NEW <{sMS_REC}> 1
//? Consts["/syscall/IPV6_RECVPKTINFO"] = syscall.IPV6_RECVPKTINFO
//# OLD <{sIPV6_RECVPKTINFO}> 0
//# NEW <{sIPV6_RECVPKTINFO}> 1
Types["/syscall/Sysinfo_t"] = new(*syscall.Sysinfo_t)
//# OLD <{sSysinfo_t}> 0
//# NEW <{sSysinfo_t}> 1
//? Consts["/syscall/SYS_CREATE_MODULE"] = syscall.SYS_CREATE_MODULE
//# OLD <{sSYS_CREATE_MODULE}> 0
//# NEW <{sSYS_CREATE_MODULE}> 1
//? Consts["/syscall/SYS_PPOLL"] = syscall.SYS_PPOLL
//# OLD <{sSYS_PPOLL}> 0
//# NEW <{sSYS_PPOLL}> 1
//? Consts["/syscall/ETH_P_CUST"] = syscall.ETH_P_CUST
//# OLD <{sETH_P_CUST}> 0
//# NEW <{sETH_P_CUST}> 1
Funcs["/syscall/SyncFileRange"] = syscall.SyncFileRange
//# OLD <{sSyncFileRange}> 0
//# NEW <{sSyncFileRange}> 1
//? Consts["/syscall/IFLA_PRIORITY"] = syscall.IFLA_PRIORITY
//# OLD <{sIFLA_PRIORITY}> 0
//# NEW <{sIFLA_PRIORITY}> 1
//? Consts["/syscall/IFF_NO_PI"] = syscall.IFF_NO_PI
//# OLD <{sIFF_NO_PI}> 0
//# NEW <{sIFF_NO_PI}> 1
//? Consts["/syscall/SYS_NANOSLEEP"] = syscall.SYS_NANOSLEEP
//# OLD <{sSYS_NANOSLEEP}> 0
//# NEW <{sSYS_NANOSLEEP}> 1
//? Consts["/syscall/IN_MOVED_FROM"] = syscall.IN_MOVED_FROM
//# OLD <{sIN_MOVED_FROM}> 0
//# NEW <{sIN_MOVED_FROM}> 1
//? Consts["/syscall/RTM_F_CLONED"] = syscall.RTM_F_CLONED
//# OLD <{sRTM_F_CLONED}> 0
//# NEW <{sRTM_F_CLONED}> 1
//? Consts["/syscall/S_IREAD"] = syscall.S_IREAD
//# OLD <{sS_IREAD}> 0
//# NEW <{sS_IREAD}> 1
Funcs["/syscall/BindToDevice"] = syscall.BindToDevice
//# OLD <{sBindToDevice}> 0
//# NEW <{sBindToDevice}> 1
//? Consts["/syscall/ETH_P_TR_802_2"] = syscall.ETH_P_TR_802_2
//# OLD <{sETH_P_TR_802_2}> 0
//# NEW <{sETH_P_TR_802_2}> 1
//? Consts["/syscall/IPV6_V6ONLY"] = syscall.IPV6_V6ONLY
//# OLD <{sIPV6_V6ONLY}> 0
//# NEW <{sIPV6_V6ONLY}> 1
Funcs["/syscall/PtraceGetEventMsg"] = syscall.PtraceGetEventMsg
//# OLD <{sPtraceGetEventMsg}> 0
//# NEW <{sPtraceGetEventMsg}> 1
//? Consts["/syscall/PTRACE_PEEKUSR"] = syscall.PTRACE_PEEKUSR
//# OLD <{sPTRACE_PEEKUSR}> 0
//# NEW <{sPTRACE_PEEKUSR}> 1
//? Consts["/syscall/SYS_MOVE_PAGES"] = syscall.SYS_MOVE_PAGES
//# OLD <{sSYS_MOVE_PAGES}> 0
//# NEW <{sSYS_MOVE_PAGES}> 1
//? Consts["/syscall/PR_ENDIAN_LITTLE"] = syscall.PR_ENDIAN_LITTLE
//# OLD <{sPR_ENDIAN_LITTLE}> 0
//# NEW <{sPR_ENDIAN_LITTLE}> 1
//? Consts["/syscall/IN_MASK_ADD"] = syscall.IN_MASK_ADD
//# OLD <{sIN_MASK_ADD}> 0
//# NEW <{sIN_MASK_ADD}> 1
//? Consts["/syscall/SYS_CAPSET"] = syscall.SYS_CAPSET
//# OLD <{sSYS_CAPSET}> 0
//# NEW <{sSYS_CAPSET}> 1
//? Consts["/syscall/ARPHRD_RAWHDLC"] = syscall.ARPHRD_RAWHDLC
//# OLD <{sARPHRD_RAWHDLC}> 0
//# NEW <{sARPHRD_RAWHDLC}> 1
//? Consts["/syscall/PR_FP_EXC_OVF"] = syscall.PR_FP_EXC_OVF
//# OLD <{sPR_FP_EXC_OVF}> 0
//# NEW <{sPR_FP_EXC_OVF}> 1
//? Consts["/syscall/NLM_F_EXCL"] = syscall.NLM_F_EXCL
//# OLD <{sNLM_F_EXCL}> 0
//# NEW <{sNLM_F_EXCL}> 1
Types["/syscall/NetlinkRouteAttr"] = new(*syscall.NetlinkRouteAttr)
//# OLD <{sNetlinkRouteAttr}> 0
//# NEW <{sNetlinkRouteAttr}> 1
//? Consts["/syscall/SYS_RT_SIGRETURN"] = syscall.SYS_RT_SIGRETURN
//# OLD <{sSYS_RT_SIGRETURN}> 0
//# NEW <{sSYS_RT_SIGRETURN}> 1
//? Consts["/syscall/SYS_SETUID"] = syscall.SYS_SETUID
//# OLD <{sSYS_SETUID}> 0
//# NEW <{sSYS_SETUID}> 1
//? Consts["/syscall/SO_LINGER"] = syscall.SO_LINGER
//# OLD <{sSO_LINGER}> 0
//# NEW <{sSO_LINGER}> 1
//? Consts["/syscall/NLM_F_DUMP"] = syscall.NLM_F_DUMP
//# OLD <{sNLM_F_DUMP}> 0
//# NEW <{sNLM_F_DUMP}> 1
//? Consts["/syscall/LOCK_SH"] = syscall.LOCK_SH
//# OLD <{sLOCK_SH}> 0
//# NEW <{sLOCK_SH}> 1
//? Consts["/syscall/ENAVAIL"] = syscall.ENAVAIL
//# OLD <{sENAVAIL}> 0
//# NEW <{sENAVAIL}> 1
//? Consts["/syscall/IPPROTO_TCP"] = syscall.IPPROTO_TCP
//# OLD <{sIPPROTO_TCP}> 0
//# NEW <{sIPPROTO_TCP}> 1
Funcs["/syscall/Getpgid"] = syscall.Getpgid
//# OLD <{sGetpgid}> 0
//# NEW <{sGetpgid}> 1
//? Consts["/syscall/PR_MCE_KILL_SET"] = syscall.PR_MCE_KILL_SET
//# OLD <{sPR_MCE_KILL_SET}> 0
//# NEW <{sPR_MCE_KILL_SET}> 1
//? Consts["/syscall/IN_CLASSA_NET"] = syscall.IN_CLASSA_NET
//# OLD <{sIN_CLASSA_NET}> 0
//# NEW <{sIN_CLASSA_NET}> 1
Types["/syscall/Inet6Pktinfo"] = new(*syscall.Inet6Pktinfo)
//# OLD <{sInet6Pktinfo}> 0
//# NEW <{sInet6Pktinfo}> 1
Funcs["/syscall/Ustat"] = syscall.Ustat
//# OLD <{sUstat}> 0
//# NEW <{sUstat}> 1
//? Consts["/syscall/ARPHRD_IEEE80211"] = syscall.ARPHRD_IEEE80211
//# OLD <{sARPHRD_IEEE80211}> 0
//# NEW <{sARPHRD_IEEE80211}> 1
//? Consts["/syscall/ETH_P_MPLS_UC"] = syscall.ETH_P_MPLS_UC
//# OLD <{sETH_P_MPLS_UC}> 0
//# NEW <{sETH_P_MPLS_UC}> 1
//? Consts["/syscall/PR_GET_PDEATHSIG"] = syscall.PR_GET_PDEATHSIG
//# OLD <{sPR_GET_PDEATHSIG}> 0
//# NEW <{sPR_GET_PDEATHSIG}> 1
//? Consts["/syscall/ETOOMANYREFS"] = syscall.ETOOMANYREFS
//# OLD <{sETOOMANYREFS}> 0
//# NEW <{sETOOMANYREFS}> 1
//? Consts["/syscall/RLIMIT_AS"] = syscall.RLIMIT_AS
//# OLD <{sRLIMIT_AS}> 0
//# NEW <{sRLIMIT_AS}> 1
//? Consts["/syscall/O_RDWR"] = syscall.O_RDWR
//# OLD <{sO_RDWR}> 0
//# NEW <{sO_RDWR}> 1
//? Consts["/syscall/RTPROT_DNROUTED"] = syscall.RTPROT_DNROUTED
//# OLD <{sRTPROT_DNROUTED}> 0
//# NEW <{sRTPROT_DNROUTED}> 1
//? Consts["/syscall/IFF_TUN"] = syscall.IFF_TUN
//# OLD <{sIFF_TUN}> 0
//# NEW <{sIFF_TUN}> 1
//? Consts["/syscall/ESOCKTNOSUPPORT"] = syscall.ESOCKTNOSUPPORT
//# OLD <{sESOCKTNOSUPPORT}> 0
//# NEW <{sESOCKTNOSUPPORT}> 1
//? Consts["/syscall/OFDEL"] = syscall.OFDEL
//# OLD <{sOFDEL}> 0
//# NEW <{sOFDEL}> 1
//? Consts["/syscall/SYS_SCHED_GETAFFINITY"] = syscall.SYS_SCHED_GETAFFINITY
//# OLD <{sSYS_SCHED_GETAFFINITY}> 0
//# NEW <{sSYS_SCHED_GETAFFINITY}> 1
//? Consts["/syscall/BPF_RSH"] = syscall.BPF_RSH
//# OLD <{sBPF_RSH}> 0
//# NEW <{sBPF_RSH}> 1
//? Consts["/syscall/BRKINT"] = syscall.BRKINT
//# OLD <{sBRKINT}> 0
//# NEW <{sBRKINT}> 1
//? Consts["/syscall/SYS__SYSCTL"] = syscall.SYS__SYSCTL
//# OLD <{sSYS__SYSCTL}> 0
//# NEW <{sSYS__SYSCTL}> 1
//? Consts["/syscall/TIOCPKT_IOCTL"] = syscall.TIOCPKT_IOCTL
//# OLD <{sTIOCPKT_IOCTL}> 0
//# NEW <{sTIOCPKT_IOCTL}> 1
//? Consts["/syscall/SYS_TRUNCATE"] = syscall.SYS_TRUNCATE
//# OLD <{sSYS_TRUNCATE}> 0
//# NEW <{sSYS_TRUNCATE}> 1
//? Consts["/syscall/MADV_HUGEPAGE"] = syscall.MADV_HUGEPAGE
//# OLD <{sMADV_HUGEPAGE}> 0
//# NEW <{sMADV_HUGEPAGE}> 1
//? Consts["/syscall/BPF_LD"] = syscall.BPF_LD
//# OLD <{sBPF_LD}> 0
//# NEW <{sBPF_LD}> 1
//? Consts["/syscall/MAP_NONBLOCK"] = syscall.MAP_NONBLOCK
//# OLD <{sMAP_NONBLOCK}> 0
//# NEW <{sMAP_NONBLOCK}> 1
//? Consts["/syscall/F_TEST"] = syscall.F_TEST
//# OLD <{sF_TEST}> 0
//# NEW <{sF_TEST}> 1
Funcs["/syscall/PivotRoot"] = syscall.PivotRoot
//# OLD <{sPivotRoot}> 0
//# NEW <{sPivotRoot}> 1
//? Consts["/syscall/VSUSP"] = syscall.VSUSP
//# OLD <{sVSUSP}> 0
//# NEW <{sVSUSP}> 1
//? Consts["/syscall/EMULTIHOP"] = syscall.EMULTIHOP
//# OLD <{sEMULTIHOP}> 0
//# NEW <{sEMULTIHOP}> 1
//? Consts["/syscall/PACKET_DROP_MEMBERSHIP"] = syscall.PACKET_DROP_MEMBERSHIP
//# OLD <{sPACKET_DROP_MEMBERSHIP}> 0
//# NEW <{sPACKET_DROP_MEMBERSHIP}> 1
//? Consts["/syscall/RTAX_FEATURE_SACK"] = syscall.RTAX_FEATURE_SACK
//# OLD <{sRTAX_FEATURE_SACK}> 0
//# NEW <{sRTAX_FEATURE_SACK}> 1
//? Consts["/syscall/RLIMIT_NOFILE"] = syscall.RLIMIT_NOFILE
//# OLD <{sRLIMIT_NOFILE}> 0
//# NEW <{sRLIMIT_NOFILE}> 1
//? Consts["/syscall/ETH_P_TEB"] = syscall.ETH_P_TEB
//# OLD <{sETH_P_TEB}> 0
//# NEW <{sETH_P_TEB}> 1
//? Consts["/syscall/ETH_P_LOOP"] = syscall.ETH_P_LOOP
//# OLD <{sETH_P_LOOP}> 0
//# NEW <{sETH_P_LOOP}> 1
//? Consts["/syscall/SOMAXCONN"] = syscall.SOMAXCONN
//# OLD <{sSOMAXCONN}> 0
//# NEW <{sSOMAXCONN}> 1
Funcs["/syscall/Gettimeofday"] = syscall.Gettimeofday
//# OLD <{sGettimeofday}> 0
//# NEW <{sGettimeofday}> 1
//? Consts["/syscall/O_WRONLY"] = syscall.O_WRONLY
//# OLD <{sO_WRONLY}> 0
//# NEW <{sO_WRONLY}> 1
//? Consts["/syscall/DT_WHT"] = syscall.DT_WHT
//# OLD <{sDT_WHT}> 0
//# NEW <{sDT_WHT}> 1
//? Consts["/syscall/TIOCNOTTY"] = syscall.TIOCNOTTY
//# OLD <{sTIOCNOTTY}> 0
//# NEW <{sTIOCNOTTY}> 1
//? Consts["/syscall/B1200"] = syscall.B1200
//# OLD <{sB1200}> 0
//# NEW <{sB1200}> 1
Types["/syscall/Timeval"] = new(*syscall.Timeval)
//# OLD <{sTimeval}> 0
//# NEW <{sTimeval}> 1
//? Consts["/syscall/PACKET_MR_PROMISC"] = syscall.PACKET_MR_PROMISC
//# OLD <{sPACKET_MR_PROMISC}> 0
//# NEW <{sPACKET_MR_PROMISC}> 1
//? Consts["/syscall/SYS_EPOLL_PWAIT"] = syscall.SYS_EPOLL_PWAIT
//# OLD <{sSYS_EPOLL_PWAIT}> 0
//# NEW <{sSYS_EPOLL_PWAIT}> 1
//? Consts["/syscall/BPF_MAJOR_VERSION"] = syscall.BPF_MAJOR_VERSION
//# OLD <{sBPF_MAJOR_VERSION}> 0
//# NEW <{sBPF_MAJOR_VERSION}> 1
//? Consts["/syscall/EPOLL_CLOEXEC"] = syscall.EPOLL_CLOEXEC
//# OLD <{sEPOLL_CLOEXEC}> 0
//# NEW <{sEPOLL_CLOEXEC}> 1
//? Consts["/syscall/NLM_F_CREATE"] = syscall.NLM_F_CREATE
//# OLD <{sNLM_F_CREATE}> 0
//# NEW <{sNLM_F_CREATE}> 1
//? Consts["/syscall/ETH_P_RARP"] = syscall.ETH_P_RARP
//# OLD <{sETH_P_RARP}> 0
//# NEW <{sETH_P_RARP}> 1
//? Consts["/syscall/BPF_MAXINSNS"] = syscall.BPF_MAXINSNS
//# OLD <{sBPF_MAXINSNS}> 0
//# NEW <{sBPF_MAXINSNS}> 1
//? Consts["/syscall/SIGPWR"] = syscall.SIGPWR
//# OLD <{sSIGPWR}> 0
//# NEW <{sSIGPWR}> 1
//? Consts["/syscall/PTRACE_EVENT_VFORK_DONE"] = syscall.PTRACE_EVENT_VFORK_DONE
//# OLD <{sPTRACE_EVENT_VFORK_DONE}> 0
//# NEW <{sPTRACE_EVENT_VFORK_DONE}> 1
//? Consts["/syscall/B9600"] = syscall.B9600
//# OLD <{sB9600}> 0
//# NEW <{sB9600}> 1
//? Consts["/syscall/SYS_MREMAP"] = syscall.SYS_MREMAP
//# OLD <{sSYS_MREMAP}> 0
//# NEW <{sSYS_MREMAP}> 1
//? Consts["/syscall/SYS_STAT"] = syscall.SYS_STAT
//# OLD <{sSYS_STAT}> 0
//# NEW <{sSYS_STAT}> 1
//? Consts["/syscall/IFLA_IFALIAS"] = syscall.IFLA_IFALIAS
//# OLD <{sIFLA_IFALIAS}> 0
//# NEW <{sIFLA_IFALIAS}> 1
Types["/syscall/Errno"] = new(*syscall.Errno)
//# OLD <{sErrno}> 0
//# NEW <{sErrno}> 1
//? Consts["/syscall/ERESTART"] = syscall.ERESTART
//# OLD <{sERESTART}> 0
//# NEW <{sERESTART}> 1
Types["/syscall/Linger"] = new(*syscall.Linger)
//# OLD <{sLinger}> 0
//# NEW <{sLinger}> 1
//? Consts["/syscall/IPV6_RTHDR_TYPE_0"] = syscall.IPV6_RTHDR_TYPE_0
//# OLD <{sIPV6_RTHDR_TYPE_0}> 0
//# NEW <{sIPV6_RTHDR_TYPE_0}> 1
//? Consts["/syscall/SYS_GETXATTR"] = syscall.SYS_GETXATTR
//# OLD <{sSYS_GETXATTR}> 0
//# NEW <{sSYS_GETXATTR}> 1
//? Consts["/syscall/IP_PMTUDISC_DO"] = syscall.IP_PMTUDISC_DO
//# OLD <{sIP_PMTUDISC_DO}> 0
//# NEW <{sIP_PMTUDISC_DO}> 1
//? Consts["/syscall/SizeofSockaddrNetlink"] = syscall.SizeofSockaddrNetlink
//# OLD <{sSizeofSockaddrNetlink}> 0
//# NEW <{sSizeofSockaddrNetlink}> 1
//? Consts["/syscall/EPERM"] = syscall.EPERM
//# OLD <{sEPERM}> 0
//# NEW <{sEPERM}> 1
//? Consts["/syscall/EPOLLONESHOT"] = syscall.EPOLLONESHOT
//# OLD <{sEPOLLONESHOT}> 0
//# NEW <{sEPOLLONESHOT}> 1
Types["/syscall/SocketControlMessage"] = new(*syscall.SocketControlMessage)
//# OLD <{sSocketControlMessage}> 0
//# NEW <{sSocketControlMessage}> 1
//? Consts["/syscall/SYS_NEWFSTATAT"] = syscall.SYS_NEWFSTATAT
//# OLD <{sSYS_NEWFSTATAT}> 0
//# NEW <{sSYS_NEWFSTATAT}> 1
//? Consts["/syscall/EACCES"] = syscall.EACCES
//# OLD <{sEACCES}> 0
//# NEW <{sEACCES}> 1
//? Consts["/syscall/NLA_F_NESTED"] = syscall.NLA_F_NESTED
//# OLD <{sNLA_F_NESTED}> 0
//# NEW <{sNLA_F_NESTED}> 1
//? Consts["/syscall/SYS_GETTIMEOFDAY"] = syscall.SYS_GETTIMEOFDAY
//# OLD <{sSYS_GETTIMEOFDAY}> 0
//# NEW <{sSYS_GETTIMEOFDAY}> 1
//? Consts["/syscall/IN_CLASSB_MAX"] = syscall.IN_CLASSB_MAX
//# OLD <{sIN_CLASSB_MAX}> 0
//# NEW <{sIN_CLASSB_MAX}> 1
//? Consts["/syscall/IPV6_AUTHHDR"] = syscall.IPV6_AUTHHDR
//# OLD <{sIPV6_AUTHHDR}> 0
//# NEW <{sIPV6_AUTHHDR}> 1
//? Consts["/syscall/RTN_MAX"] = syscall.RTN_MAX
//# OLD <{sRTN_MAX}> 0
//# NEW <{sRTN_MAX}> 1
//? Consts["/syscall/RTM_F_EQUALIZE"] = syscall.RTM_F_EQUALIZE
//# OLD <{sRTM_F_EQUALIZE}> 0
//# NEW <{sRTM_F_EQUALIZE}> 1
//? Consts["/syscall/AF_UNIX"] = syscall.AF_UNIX
//# OLD <{sAF_UNIX}> 0
//# NEW <{sAF_UNIX}> 1
Vars["/syscall/Stdout"] = &syscall.Stdout
//# OLD <{sStdout}> 0
//# NEW <{sStdout}> 1
//? Consts["/syscall/ARPHRD_CHAOS"] = syscall.ARPHRD_CHAOS
//# OLD <{sARPHRD_CHAOS}> 0
//# NEW <{sARPHRD_CHAOS}> 1
//? Consts["/syscall/SYS_FLISTXATTR"] = syscall.SYS_FLISTXATTR
//# OLD <{sSYS_FLISTXATTR}> 0
//# NEW <{sSYS_FLISTXATTR}> 1
//? Consts["/syscall/ARPHRD_EUI64"] = syscall.ARPHRD_EUI64
//# OLD <{sARPHRD_EUI64}> 0
//# NEW <{sARPHRD_EUI64}> 1
//? Consts["/syscall/SYS_USELIB"] = syscall.SYS_USELIB
//# OLD <{sSYS_USELIB}> 0
//# NEW <{sSYS_USELIB}> 1
//? Consts["/syscall/SOL_ATM"] = syscall.SOL_ATM
//# OLD <{sSOL_ATM}> 0
//# NEW <{sSOL_ATM}> 1
//? Consts["/syscall/SIOCGIFNETMASK"] = syscall.SIOCGIFNETMASK
//# OLD <{sSIOCGIFNETMASK}> 0
//# NEW <{sSIOCGIFNETMASK}> 1
//? Consts["/syscall/IPV6_PMTUDISC_WANT"] = syscall.IPV6_PMTUDISC_WANT
//# OLD <{sIPV6_PMTUDISC_WANT}> 0
//# NEW <{sIPV6_PMTUDISC_WANT}> 1
//? Consts["/syscall/RTN_UNREACHABLE"] = syscall.RTN_UNREACHABLE
//# OLD <{sRTN_UNREACHABLE}> 0
//# NEW <{sRTN_UNREACHABLE}> 1
//? Consts["/syscall/IP_PASSSEC"] = syscall.IP_PASSSEC
//# OLD <{sIP_PASSSEC}> 0
//# NEW <{sIP_PASSSEC}> 1
//? Consts["/syscall/SizeofRtGenmsg"] = syscall.SizeofRtGenmsg
//# OLD <{sSizeofRtGenmsg}> 0
//# NEW <{sSizeofRtGenmsg}> 1
//? Consts["/syscall/RTM_GETACTION"] = syscall.RTM_GETACTION
//# OLD <{sRTM_GETACTION}> 0
//# NEW <{sRTM_GETACTION}> 1
//? Consts["/syscall/O_ASYNC"] = syscall.O_ASYNC
//# OLD <{sO_ASYNC}> 0
//# NEW <{sO_ASYNC}> 1
//? Consts["/syscall/SO_RCVBUFFORCE"] = syscall.SO_RCVBUFFORCE
//# OLD <{sSO_RCVBUFFORCE}> 0
//# NEW <{sSO_RCVBUFFORCE}> 1
//? Consts["/syscall/BPF_TXA"] = syscall.BPF_TXA
//# OLD <{sBPF_TXA}> 0
//# NEW <{sBPF_TXA}> 1
//? Consts["/syscall/ETH_P_X25"] = syscall.ETH_P_X25
//# OLD <{sETH_P_X25}> 0
//# NEW <{sETH_P_X25}> 1
Funcs["/syscall/GetsockoptIPv6Mreq"] = syscall.GetsockoptIPv6Mreq
//# OLD <{sGetsockoptIPv6Mreq}> 0
//# NEW <{sGetsockoptIPv6Mreq}> 1
Types["/syscall/Timex"] = new(*syscall.Timex)
//# OLD <{sTimex}> 0
//# NEW <{sTimex}> 1
//? Consts["/syscall/SYS_GETPEERNAME"] = syscall.SYS_GETPEERNAME
//# OLD <{sSYS_GETPEERNAME}> 0
//# NEW <{sSYS_GETPEERNAME}> 1
//? Consts["/syscall/SYS_CLOCK_SETTIME"] = syscall.SYS_CLOCK_SETTIME
//# OLD <{sSYS_CLOCK_SETTIME}> 0
//# NEW <{sSYS_CLOCK_SETTIME}> 1
//? Consts["/syscall/RT_TABLE_MAX"] = syscall.RT_TABLE_MAX
//# OLD <{sRT_TABLE_MAX}> 0
//# NEW <{sRT_TABLE_MAX}> 1
//? Consts["/syscall/IPV6_PMTUDISC_PROBE"] = syscall.IPV6_PMTUDISC_PROBE
//# OLD <{sIPV6_PMTUDISC_PROBE}> 0
//# NEW <{sIPV6_PMTUDISC_PROBE}> 1
Funcs["/syscall/Pipe"] = syscall.Pipe
//# OLD <{sPipe}> 0
//# NEW <{sPipe}> 1
//? Consts["/syscall/PR_GET_TSC"] = syscall.PR_GET_TSC
//# OLD <{sPR_GET_TSC}> 0
//# NEW <{sPR_GET_TSC}> 1
//? Consts["/syscall/IMAXBEL"] = syscall.IMAXBEL
//# OLD <{sIMAXBEL}> 0
//# NEW <{sIMAXBEL}> 1
//? Consts["/syscall/SYS_GET_THREAD_AREA"] = syscall.SYS_GET_THREAD_AREA
//# OLD <{sSYS_GET_THREAD_AREA}> 0
//# NEW <{sSYS_GET_THREAD_AREA}> 1
Types["/syscall/InotifyEvent"] = new(*syscall.InotifyEvent)
//# OLD <{sInotifyEvent}> 0
//# NEW <{sInotifyEvent}> 1
Types["/syscall/NlMsghdr"] = new(*syscall.NlMsghdr)
//# OLD <{sNlMsghdr}> 0
//# NEW <{sNlMsghdr}> 1
//? Consts["/syscall/TCP_KEEPINTVL"] = syscall.TCP_KEEPINTVL
//# OLD <{sTCP_KEEPINTVL}> 0
//# NEW <{sTCP_KEEPINTVL}> 1
//? Consts["/syscall/MS_MGC_VAL"] = syscall.MS_MGC_VAL
//# OLD <{sMS_MGC_VAL}> 0
//# NEW <{sMS_MGC_VAL}> 1
Funcs["/syscall/PtracePokeData"] = syscall.PtracePokeData
//# OLD <{sPtracePokeData}> 0
//# NEW <{sPtracePokeData}> 1
//? Consts["/syscall/TUNSETGROUP"] = syscall.TUNSETGROUP
//# OLD <{sTUNSETGROUP}> 0
//# NEW <{sTUNSETGROUP}> 1
Funcs["/syscall/Setresgid"] = syscall.Setresgid
//# OLD <{sSetresgid}> 0
//# NEW <{sSetresgid}> 1
//? Consts["/syscall/RTM_GETNEIGHTBL"] = syscall.RTM_GETNEIGHTBL
//# OLD <{sRTM_GETNEIGHTBL}> 0
//# NEW <{sRTM_GETNEIGHTBL}> 1
//? Consts["/syscall/IN_DELETE"] = syscall.IN_DELETE
//# OLD <{sIN_DELETE}> 0
//# NEW <{sIN_DELETE}> 1
//? Consts["/syscall/PR_SET_SECCOMP"] = syscall.PR_SET_SECCOMP
//# OLD <{sPR_SET_SECCOMP}> 0
//# NEW <{sPR_SET_SECCOMP}> 1
//? Consts["/syscall/RLIMIT_CORE"] = syscall.RLIMIT_CORE
//# OLD <{sRLIMIT_CORE}> 0
//# NEW <{sRLIMIT_CORE}> 1
//? Consts["/syscall/ARPHRD_ASH"] = syscall.ARPHRD_ASH
//# OLD <{sARPHRD_ASH}> 0
//# NEW <{sARPHRD_ASH}> 1
//? Consts["/syscall/CREAD"] = syscall.CREAD
//# OLD <{sCREAD}> 0
//# NEW <{sCREAD}> 1
//? Consts["/syscall/SO_TYPE"] = syscall.SO_TYPE
//# OLD <{sSO_TYPE}> 0
//# NEW <{sSO_TYPE}> 1
Vars["/syscall/ForkLock"] = &syscall.ForkLock
//# OLD <{sForkLock}> 0
//# NEW <{sForkLock}> 1
//? Consts["/syscall/SYS_PIVOT_ROOT"] = syscall.SYS_PIVOT_ROOT
//# OLD <{sSYS_PIVOT_ROOT}> 0
//# NEW <{sSYS_PIVOT_ROOT}> 1
//? Consts["/syscall/SOCK_PACKET"] = syscall.SOCK_PACKET
//# OLD <{sSOCK_PACKET}> 0
//# NEW <{sSOCK_PACKET}> 1
//? Consts["/syscall/IFF_TAP"] = syscall.IFF_TAP
//# OLD <{sIFF_TAP}> 0
//# NEW <{sIFF_TAP}> 1
//? Consts["/syscall/ENOEXEC"] = syscall.ENOEXEC
//# OLD <{sENOEXEC}> 0
//# NEW <{sENOEXEC}> 1
//? Consts["/syscall/PTRACE_SETFPXREGS"] = syscall.PTRACE_SETFPXREGS
//# OLD <{sPTRACE_SETFPXREGS}> 0
//# NEW <{sPTRACE_SETFPXREGS}> 1
//? Consts["/syscall/EBADE"] = syscall.EBADE
//# OLD <{sEBADE}> 0
//# NEW <{sEBADE}> 1
//? Consts["/syscall/SIOCGIFINDEX"] = syscall.SIOCGIFINDEX
//# OLD <{sSIOCGIFINDEX}> 0
//# NEW <{sSIOCGIFINDEX}> 1
//? Consts["/syscall/IUTF8"] = syscall.IUTF8
//# OLD <{sIUTF8}> 0
//# NEW <{sIUTF8}> 1
//? Consts["/syscall/IGNCR"] = syscall.IGNCR
//# OLD <{sIGNCR}> 0
//# NEW <{sIGNCR}> 1
//? Consts["/syscall/CSTOPB"] = syscall.CSTOPB
//# OLD <{sCSTOPB}> 0
//# NEW <{sCSTOPB}> 1
//? Consts["/syscall/SIOCADDRT"] = syscall.SIOCADDRT
//# OLD <{sSIOCADDRT}> 0
//# NEW <{sSIOCADDRT}> 1
//? Consts["/syscall/RTAX_REORDERING"] = syscall.RTAX_REORDERING
//# OLD <{sRTAX_REORDERING}> 0
//# NEW <{sRTAX_REORDERING}> 1
//? Consts["/syscall/MS_RELATIME"] = syscall.MS_RELATIME
//# OLD <{sMS_RELATIME}> 0
//# NEW <{sMS_RELATIME}> 1
//? Consts["/syscall/SIGSEGV"] = syscall.SIGSEGV
//# OLD <{sSIGSEGV}> 0
//# NEW <{sSIGSEGV}> 1
//? Consts["/syscall/SYS_INOTIFY_INIT1"] = syscall.SYS_INOTIFY_INIT1
//# OLD <{sSYS_INOTIFY_INIT1}> 0
//# NEW <{sSYS_INOTIFY_INIT1}> 1
Funcs["/syscall/Munlockall"] = syscall.Munlockall
//# OLD <{sMunlockall}> 0
//# NEW <{sMunlockall}> 1
//? Consts["/syscall/RTM_DELACTION"] = syscall.RTM_DELACTION
//# OLD <{sRTM_DELACTION}> 0
//# NEW <{sRTM_DELACTION}> 1
//? Consts["/syscall/RTM_BASE"] = syscall.RTM_BASE
//# OLD <{sRTM_BASE}> 0
//# NEW <{sRTM_BASE}> 1
//? Consts["/syscall/EUCLEAN"] = syscall.EUCLEAN
//# OLD <{sEUCLEAN}> 0
//# NEW <{sEUCLEAN}> 1
//? Consts["/syscall/ECHILD"] = syscall.ECHILD
//# OLD <{sECHILD}> 0
//# NEW <{sECHILD}> 1
//? Consts["/syscall/SO_RCVBUF"] = syscall.SO_RCVBUF
//# OLD <{sSO_RCVBUF}> 0
//# NEW <{sSO_RCVBUF}> 1
//? Consts["/syscall/IP_RF"] = syscall.IP_RF
//# OLD <{sIP_RF}> 0
//# NEW <{sIP_RF}> 1
//? Consts["/syscall/RTPROT_DHCP"] = syscall.RTPROT_DHCP
//# OLD <{sRTPROT_DHCP}> 0
//# NEW <{sRTPROT_DHCP}> 1
//? Consts["/syscall/IN_ONLYDIR"] = syscall.IN_ONLYDIR
//# OLD <{sIN_ONLYDIR}> 0
//# NEW <{sIN_ONLYDIR}> 1
//? Consts["/syscall/SYS_SETGID"] = syscall.SYS_SETGID
//# OLD <{sSYS_SETGID}> 0
//# NEW <{sSYS_SETGID}> 1
//? Consts["/syscall/IN_CLASSA_MAX"] = syscall.IN_CLASSA_MAX
//# OLD <{sIN_CLASSA_MAX}> 0
//# NEW <{sIN_CLASSA_MAX}> 1
//? Consts["/syscall/SizeofSockaddrInet6"] = syscall.SizeofSockaddrInet6
//# OLD <{sSizeofSockaddrInet6}> 0
//# NEW <{sSizeofSockaddrInet6}> 1
//? Consts["/syscall/IFLA_LINKMODE"] = syscall.IFLA_LINKMODE
//# OLD <{sIFLA_LINKMODE}> 0
//# NEW <{sIFLA_LINKMODE}> 1
//? Consts["/syscall/IUCLC"] = syscall.IUCLC
//# OLD <{sIUCLC}> 0
//# NEW <{sIUCLC}> 1
//? Consts["/syscall/LINUX_REBOOT_CMD_SW_SUSPEND"] = syscall.LINUX_REBOOT_CMD_SW_SUSPEND
//# OLD <{sLINUX_REBOOT_CMD_SW_SUSPEND}> 0
//# NEW <{sLINUX_REBOOT_CMD_SW_SUSPEND}> 1
Funcs["/syscall/Ftruncate"] = syscall.Ftruncate
//# OLD <{sFtruncate}> 0
//# NEW <{sFtruncate}> 1
//? Consts["/syscall/SYS_RESTART_SYSCALL"] = syscall.SYS_RESTART_SYSCALL
//# OLD <{sSYS_RESTART_SYSCALL}> 0
//# NEW <{sSYS_RESTART_SYSCALL}> 1
//? Consts["/syscall/IN_CLOEXEC"] = syscall.IN_CLOEXEC
//# OLD <{sIN_CLOEXEC}> 0
//# NEW <{sIN_CLOEXEC}> 1
Funcs["/syscall/UnixCredentials"] = syscall.UnixCredentials
//# OLD <{sUnixCredentials}> 0
//# NEW <{sUnixCredentials}> 1
//? Consts["/syscall/SYS_FCNTL"] = syscall.SYS_FCNTL
//# OLD <{sSYS_FCNTL}> 0
//# NEW <{sSYS_FCNTL}> 1
//? Consts["/syscall/SYS_REMOVEXATTR"] = syscall.SYS_REMOVEXATTR
//# OLD <{sSYS_REMOVEXATTR}> 0
//# NEW <{sSYS_REMOVEXATTR}> 1
//? Consts["/syscall/ETH_P_SLOW"] = syscall.ETH_P_SLOW
//# OLD <{sETH_P_SLOW}> 0
//# NEW <{sETH_P_SLOW}> 1
//? Consts["/syscall/SIGUSR2"] = syscall.SIGUSR2
//# OLD <{sSIGUSR2}> 0
//# NEW <{sSIGUSR2}> 1
//? Consts["/syscall/TIOCSCTTY"] = syscall.TIOCSCTTY
//# OLD <{sTIOCSCTTY}> 0
//# NEW <{sTIOCSCTTY}> 1
//? Consts["/syscall/IFLA_MTU"] = syscall.IFLA_MTU
//# OLD <{sIFLA_MTU}> 0
//# NEW <{sIFLA_MTU}> 1
//? Consts["/syscall/IN_CLASSA_HOST"] = syscall.IN_CLASSA_HOST
//# OLD <{sIN_CLASSA_HOST}> 0
//# NEW <{sIN_CLASSA_HOST}> 1
//? Consts["/syscall/RTPROT_STATIC"] = syscall.RTPROT_STATIC
//# OLD <{sRTPROT_STATIC}> 0
//# NEW <{sRTPROT_STATIC}> 1
//? Consts["/syscall/B300"] = syscall.B300
//# OLD <{sB300}> 0
//# NEW <{sB300}> 1
//? Consts["/syscall/SYS_SETITIMER"] = syscall.SYS_SETITIMER
//# OLD <{sSYS_SETITIMER}> 0
//# NEW <{sSYS_SETITIMER}> 1
//? Consts["/syscall/SYS_GETSOCKNAME"] = syscall.SYS_GETSOCKNAME
//# OLD <{sSYS_GETSOCKNAME}> 0
//# NEW <{sSYS_GETSOCKNAME}> 1
//? Consts["/syscall/SIGCONT"] = syscall.SIGCONT
//# OLD <{sSIGCONT}> 0
//# NEW <{sSIGCONT}> 1
//? Consts["/syscall/ARPHRD_SKIP"] = syscall.ARPHRD_SKIP
//# OLD <{sARPHRD_SKIP}> 0
//# NEW <{sARPHRD_SKIP}> 1
//? Consts["/syscall/RTM_SETNEIGHTBL"] = syscall.RTM_SETNEIGHTBL
//# OLD <{sRTM_SETNEIGHTBL}> 0
//# NEW <{sRTM_SETNEIGHTBL}> 1
//? Consts["/syscall/MS_SYNCHRONOUS"] = syscall.MS_SYNCHRONOUS
//# OLD <{sMS_SYNCHRONOUS}> 0
//# NEW <{sMS_SYNCHRONOUS}> 1
//? Consts["/syscall/RTF_MSS"] = syscall.RTF_MSS
//# OLD <{sRTF_MSS}> 0
//# NEW <{sRTF_MSS}> 1
//? Consts["/syscall/SYS_GETITIMER"] = syscall.SYS_GETITIMER
//# OLD <{sSYS_GETITIMER}> 0
//# NEW <{sSYS_GETITIMER}> 1
//? Consts["/syscall/SYS_MQ_GETSETATTR"] = syscall.SYS_MQ_GETSETATTR
//# OLD <{sSYS_MQ_GETSETATTR}> 0
//# NEW <{sSYS_MQ_GETSETATTR}> 1
//? Consts["/syscall/PTRACE_POKETEXT"] = syscall.PTRACE_POKETEXT
//# OLD <{sPTRACE_POKETEXT}> 0
//# NEW <{sPTRACE_POKETEXT}> 1
//? Consts["/syscall/RT_SCOPE_SITE"] = syscall.RT_SCOPE_SITE
//# OLD <{sRT_SCOPE_SITE}> 0
//# NEW <{sRT_SCOPE_SITE}> 1
//? Consts["/syscall/S_ISGID"] = syscall.S_ISGID
//# OLD <{sS_ISGID}> 0
//# NEW <{sS_ISGID}> 1
//? Consts["/syscall/IN_CLASSA_NSHIFT"] = syscall.IN_CLASSA_NSHIFT
//# OLD <{sIN_CLASSA_NSHIFT}> 0
//# NEW <{sIN_CLASSA_NSHIFT}> 1
Funcs["/syscall/Link"] = syscall.Link
//# OLD <{sLink}> 0
//# NEW <{sLink}> 1
//? Consts["/syscall/RTA_PRIORITY"] = syscall.RTA_PRIORITY
//# OLD <{sRTA_PRIORITY}> 0
//# NEW <{sRTA_PRIORITY}> 1
//? Consts["/syscall/IP_MAX_MEMBERSHIPS"] = syscall.IP_MAX_MEMBERSHIPS
//# OLD <{sIP_MAX_MEMBERSHIPS}> 0
//# NEW <{sIP_MAX_MEMBERSHIPS}> 1
//? Consts["/syscall/B3500000"] = syscall.B3500000
//# OLD <{sB3500000}> 0
//# NEW <{sB3500000}> 1
//? Consts["/syscall/IFF_DEBUG"] = syscall.IFF_DEBUG
//# OLD <{sIFF_DEBUG}> 0
//# NEW <{sIFF_DEBUG}> 1
Funcs["/syscall/Chmod"] = syscall.Chmod
//# OLD <{sChmod}> 0
//# NEW <{sChmod}> 1
//? Consts["/syscall/ECHO"] = syscall.ECHO
//# OLD <{sECHO}> 0
//# NEW <{sECHO}> 1
//? Consts["/syscall/EOWNERDEAD"] = syscall.EOWNERDEAD
//# OLD <{sEOWNERDEAD}> 0
//# NEW <{sEOWNERDEAD}> 1
Types["/syscall/WaitStatus"] = new(*syscall.WaitStatus)
//# OLD <{sWaitStatus}> 0
//# NEW <{sWaitStatus}> 1
//? Consts["/syscall/TIOCM_SR"] = syscall.TIOCM_SR
//# OLD <{sTIOCM_SR}> 0
//# NEW <{sTIOCM_SR}> 1
//? Consts["/syscall/SYS_GETEUID"] = syscall.SYS_GETEUID
//# OLD <{sSYS_GETEUID}> 0
//# NEW <{sSYS_GETEUID}> 1
//? Consts["/syscall/IFA_F_NODAD"] = syscall.IFA_F_NODAD
//# OLD <{sIFA_F_NODAD}> 0
//# NEW <{sIFA_F_NODAD}> 1
Funcs["/syscall/PtracePokeText"] = syscall.PtracePokeText
//# OLD <{sPtracePokeText}> 0
//# NEW <{sPtracePokeText}> 1
//? Consts["/syscall/SYS_OPENAT"] = syscall.SYS_OPENAT
//# OLD <{sSYS_OPENAT}> 0
//# NEW <{sSYS_OPENAT}> 1
//? Consts["/syscall/IPPROTO_COMP"] = syscall.IPPROTO_COMP
//# OLD <{sIPPROTO_COMP}> 0
//# NEW <{sIPPROTO_COMP}> 1
//? Consts["/syscall/SYS_SEMCTL"] = syscall.SYS_SEMCTL
//# OLD <{sSYS_SEMCTL}> 0
//# NEW <{sSYS_SEMCTL}> 1
//? Consts["/syscall/EBADRQC"] = syscall.EBADRQC
//# OLD <{sEBADRQC}> 0
//# NEW <{sEBADRQC}> 1
//? Consts["/syscall/IPV6_MULTICAST_HOPS"] = syscall.IPV6_MULTICAST_HOPS
//# OLD <{sIPV6_MULTICAST_HOPS}> 0
//# NEW <{sIPV6_MULTICAST_HOPS}> 1
//? Consts["/syscall/SYS_SIGALTSTACK"] = syscall.SYS_SIGALTSTACK
//# OLD <{sSYS_SIGALTSTACK}> 0
//# NEW <{sSYS_SIGALTSTACK}> 1
//? Consts["/syscall/SYS_GET_KERNEL_SYMS"] = syscall.SYS_GET_KERNEL_SYMS
//# OLD <{sSYS_GET_KERNEL_SYMS}> 0
//# NEW <{sSYS_GET_KERNEL_SYMS}> 1
//? Consts["/syscall/SIGXFSZ"] = syscall.SIGXFSZ
//# OLD <{sSIGXFSZ}> 0
//# NEW <{sSIGXFSZ}> 1
//? Consts["/syscall/IPV6_2292DSTOPTS"] = syscall.IPV6_2292DSTOPTS
//# OLD <{sIPV6_2292DSTOPTS}> 0
//# NEW <{sIPV6_2292DSTOPTS}> 1
//? Consts["/syscall/RT_CLASS_UNSPEC"] = syscall.RT_CLASS_UNSPEC
//# OLD <{sRT_CLASS_UNSPEC}> 0
//# NEW <{sRT_CLASS_UNSPEC}> 1
//? Consts["/syscall/TIOCSERSETMULTI"] = syscall.TIOCSERSETMULTI
//# OLD <{sTIOCSERSETMULTI}> 0
//# NEW <{sTIOCSERSETMULTI}> 1
//? Consts["/syscall/VINTR"] = syscall.VINTR
//# OLD <{sVINTR}> 0
//# NEW <{sVINTR}> 1
//? Consts["/syscall/O_NONBLOCK"] = syscall.O_NONBLOCK
//# OLD <{sO_NONBLOCK}> 0
//# NEW <{sO_NONBLOCK}> 1
//? Consts["/syscall/PR_FP_EXC_INV"] = syscall.PR_FP_EXC_INV
//# OLD <{sPR_FP_EXC_INV}> 0
//# NEW <{sPR_FP_EXC_INV}> 1
//? Consts["/syscall/SYS_SIGNALFD"] = syscall.SYS_SIGNALFD
//# OLD <{sSYS_SIGNALFD}> 0
//# NEW <{sSYS_SIGNALFD}> 1
//? Consts["/syscall/DT_DIR"] = syscall.DT_DIR
//# OLD <{sDT_DIR}> 0
//# NEW <{sDT_DIR}> 1
//? Consts["/syscall/IN_MODIFY"] = syscall.IN_MODIFY
//# OLD <{sIN_MODIFY}> 0
//# NEW <{sIN_MODIFY}> 1
//? Consts["/syscall/OLCUC"] = syscall.OLCUC
//# OLD <{sOLCUC}> 0
//# NEW <{sOLCUC}> 1
//? Consts["/syscall/SYS_GETPMSG"] = syscall.SYS_GETPMSG
//# OLD <{sSYS_GETPMSG}> 0
//# NEW <{sSYS_GETPMSG}> 1
//? Consts["/syscall/SOL_SOCKET"] = syscall.SOL_SOCKET
//# OLD <{sSOL_SOCKET}> 0
//# NEW <{sSOL_SOCKET}> 1
//? Consts["/syscall/SIOCPROTOPRIVATE"] = syscall.SIOCPROTOPRIVATE
//# OLD <{sSIOCPROTOPRIVATE}> 0
//# NEW <{sSIOCPROTOPRIVATE}> 1
//? Consts["/syscall/INLCR"] = syscall.INLCR
//# OLD <{sINLCR}> 0
//# NEW <{sINLCR}> 1
//? Consts["/syscall/AF_DECnet"] = syscall.AF_DECnet
//# OLD <{sAF_DECnet}> 0
//# NEW <{sAF_DECnet}> 1
//? Consts["/syscall/S_IXGRP"] = syscall.S_IXGRP
//# OLD <{sS_IXGRP}> 0
//# NEW <{sS_IXGRP}> 1
//? Consts["/syscall/B460800"] = syscall.B460800
//# OLD <{sB460800}> 0
//# NEW <{sB460800}> 1
//? Consts["/syscall/RTM_NEWADDR"] = syscall.RTM_NEWADDR
//# OLD <{sRTM_NEWADDR}> 0
//# NEW <{sRTM_NEWADDR}> 1
Funcs["/syscall/Getsockname"] = syscall.Getsockname
//# OLD <{sGetsockname}> 0
//# NEW <{sGetsockname}> 1
//? Consts["/syscall/CS6"] = syscall.CS6
//# OLD <{sCS6}> 0
//# NEW <{sCS6}> 1
//? Consts["/syscall/SYS_PUTPMSG"] = syscall.SYS_PUTPMSG
//# OLD <{sSYS_PUTPMSG}> 0
//# NEW <{sSYS_PUTPMSG}> 1
//? Consts["/syscall/AF_IRDA"] = syscall.AF_IRDA
//# OLD <{sAF_IRDA}> 0
//# NEW <{sAF_IRDA}> 1
//? Consts["/syscall/LINUX_REBOOT_CMD_RESTART"] = syscall.LINUX_REBOOT_CMD_RESTART
//# OLD <{sLINUX_REBOOT_CMD_RESTART}> 0
//# NEW <{sLINUX_REBOOT_CMD_RESTART}> 1
//? Consts["/syscall/RTF_CACHE"] = syscall.RTF_CACHE
//# OLD <{sRTF_CACHE}> 0
//# NEW <{sRTF_CACHE}> 1
//? Consts["/syscall/ECOMM"] = syscall.ECOMM
//# OLD <{sECOMM}> 0
//# NEW <{sECOMM}> 1
Funcs["/syscall/SetsockoptInet4Addr"] = syscall.SetsockoptInet4Addr
//# OLD <{sSetsockoptInet4Addr}> 0
//# NEW <{sSetsockoptInet4Addr}> 1
//? Consts["/syscall/SYS_USTAT"] = syscall.SYS_USTAT
//# OLD <{sSYS_USTAT}> 0
//# NEW <{sSYS_USTAT}> 1
//? Consts["/syscall/SOL_X25"] = syscall.SOL_X25
//# OLD <{sSOL_X25}> 0
//# NEW <{sSOL_X25}> 1
//? Consts["/syscall/TCP_SYNCNT"] = syscall.TCP_SYNCNT
//# OLD <{sTCP_SYNCNT}> 0
//# NEW <{sTCP_SYNCNT}> 1
Types["/syscall/IfInfomsg"] = new(*syscall.IfInfomsg)
//# OLD <{sIfInfomsg}> 0
//# NEW <{sIfInfomsg}> 1
//? Consts["/syscall/ENOTTY"] = syscall.ENOTTY
//# OLD <{sENOTTY}> 0
//# NEW <{sENOTTY}> 1
//? Consts["/syscall/SYS_SETRESGID"] = syscall.SYS_SETRESGID
//# OLD <{sSYS_SETRESGID}> 0
//# NEW <{sSYS_SETRESGID}> 1
//? Consts["/syscall/TIOCGWINSZ"] = syscall.TIOCGWINSZ
//# OLD <{sTIOCGWINSZ}> 0
//# NEW <{sTIOCGWINSZ}> 1
//? Consts["/syscall/IPPROTO_PIM"] = syscall.IPPROTO_PIM
//# OLD <{sIPPROTO_PIM}> 0
//# NEW <{sIPPROTO_PIM}> 1
//? Consts["/syscall/RTM_DELTCLASS"] = syscall.RTM_DELTCLASS
//# OLD <{sRTM_DELTCLASS}> 0
//# NEW <{sRTM_DELTCLASS}> 1
//? Consts["/syscall/PR_FP_EXC_SW_ENABLE"] = syscall.PR_FP_EXC_SW_ENABLE
//# OLD <{sPR_FP_EXC_SW_ENABLE}> 0
//# NEW <{sPR_FP_EXC_SW_ENABLE}> 1
//? Consts["/syscall/EBADR"] = syscall.EBADR
//# OLD <{sEBADR}> 0
//# NEW <{sEBADR}> 1
//? Consts["/syscall/SYS_IOPRIO_SET"] = syscall.SYS_IOPRIO_SET
//# OLD <{sSYS_IOPRIO_SET}> 0
//# NEW <{sSYS_IOPRIO_SET}> 1
Types["/syscall/FdSet"] = new(*syscall.FdSet)
//# OLD <{sFdSet}> 0
//# NEW <{sFdSet}> 1
//? Consts["/syscall/ESTALE"] = syscall.ESTALE
//# OLD <{sESTALE}> 0
//# NEW <{sESTALE}> 1
//? Consts["/syscall/SIGPOLL"] = syscall.SIGPOLL
//# OLD <{sSIGPOLL}> 0
//# NEW <{sSIGPOLL}> 1
//? Consts["/syscall/TIOCEXCL"] = syscall.TIOCEXCL
//# OLD <{sTIOCEXCL}> 0
//# NEW <{sTIOCEXCL}> 1
Funcs["/syscall/Setgroups"] = syscall.Setgroups
//# OLD <{sSetgroups}> 0
//# NEW <{sSetgroups}> 1
//? Consts["/syscall/MS_SILENT"] = syscall.MS_SILENT
//# OLD <{sMS_SILENT}> 0
//# NEW <{sMS_SILENT}> 1
//? Consts["/syscall/IP_MF"] = syscall.IP_MF
//# OLD <{sIP_MF}> 0
//# NEW <{sIP_MF}> 1
//? Consts["/syscall/B50"] = syscall.B50
//# OLD <{sB50}> 0
//# NEW <{sB50}> 1
//? Consts["/syscall/PR_TASK_PERF_EVENTS_DISABLE"] = syscall.PR_TASK_PERF_EVENTS_DISABLE
//# OLD <{sPR_TASK_PERF_EVENTS_DISABLE}> 0
//# NEW <{sPR_TASK_PERF_EVENTS_DISABLE}> 1
//? Consts["/syscall/BPF_MSH"] = syscall.BPF_MSH
//# OLD <{sBPF_MSH}> 0
//# NEW <{sBPF_MSH}> 1
//? Consts["/syscall/TCP_MAX_WINSHIFT"] = syscall.TCP_MAX_WINSHIFT
//# OLD <{sTCP_MAX_WINSHIFT}> 0
//# NEW <{sTCP_MAX_WINSHIFT}> 1
//? Consts["/syscall/WSTOPPED"] = syscall.WSTOPPED
//# OLD <{sWSTOPPED}> 0
//# NEW <{sWSTOPPED}> 1
Funcs["/syscall/Getenv"] = syscall.Getenv
//# OLD <{sGetenv}> 0
//# NEW <{sGetenv}> 1
//? Consts["/syscall/IPV6_UNICAST_HOPS"] = syscall.IPV6_UNICAST_HOPS
//# OLD <{sIPV6_UNICAST_HOPS}> 0
//# NEW <{sIPV6_UNICAST_HOPS}> 1
Funcs["/syscall/ParseUnixRights"] = syscall.ParseUnixRights
//# OLD <{sParseUnixRights}> 0
//# NEW <{sParseUnixRights}> 1
//? Consts["/syscall/IN_Q_OVERFLOW"] = syscall.IN_Q_OVERFLOW
//# OLD <{sIN_Q_OVERFLOW}> 0
//# NEW <{sIN_Q_OVERFLOW}> 1
//? Consts["/syscall/SYS_TUXCALL"] = syscall.SYS_TUXCALL
//# OLD <{sSYS_TUXCALL}> 0
//# NEW <{sSYS_TUXCALL}> 1
//? Consts["/syscall/NETLINK_SCSITRANSPORT"] = syscall.NETLINK_SCSITRANSPORT
//# OLD <{sNETLINK_SCSITRANSPORT}> 0
//# NEW <{sNETLINK_SCSITRANSPORT}> 1
//? Consts["/syscall/SYS_PRCTL"] = syscall.SYS_PRCTL
//# OLD <{sSYS_PRCTL}> 0
//# NEW <{sSYS_PRCTL}> 1
//? Consts["/syscall/PR_SET_PTRACER"] = syscall.PR_SET_PTRACER
//# OLD <{sPR_SET_PTRACER}> 0
//# NEW <{sPR_SET_PTRACER}> 1
//? Consts["/syscall/SIOCGSTAMPNS"] = syscall.SIOCGSTAMPNS
//# OLD <{sSIOCGSTAMPNS}> 0
//# NEW <{sSIOCGSTAMPNS}> 1
//? Consts["/syscall/IP_BLOCK_SOURCE"] = syscall.IP_BLOCK_SOURCE
//# OLD <{sIP_BLOCK_SOURCE}> 0
//# NEW <{sIP_BLOCK_SOURCE}> 1
//? Consts["/syscall/SYS_FANOTIFY_MARK"] = syscall.SYS_FANOTIFY_MARK
//# OLD <{sSYS_FANOTIFY_MARK}> 0
//# NEW <{sSYS_FANOTIFY_MARK}> 1
//? Consts["/syscall/ENETRESET"] = syscall.ENETRESET
//# OLD <{sENETRESET}> 0
//# NEW <{sENETRESET}> 1
//? Consts["/syscall/EBADFD"] = syscall.EBADFD
//# OLD <{sEBADFD}> 0
//# NEW <{sEBADFD}> 1
//? Consts["/syscall/ENOSR"] = syscall.ENOSR
//# OLD <{sENOSR}> 0
//# NEW <{sENOSR}> 1
//? Consts["/syscall/RT_CLASS_DEFAULT"] = syscall.RT_CLASS_DEFAULT
//# OLD <{sRT_CLASS_DEFAULT}> 0
//# NEW <{sRT_CLASS_DEFAULT}> 1
//? Consts["/syscall/SYS_MKDIRAT"] = syscall.SYS_MKDIRAT
//# OLD <{sSYS_MKDIRAT}> 0
//# NEW <{sSYS_MKDIRAT}> 1
//? Consts["/syscall/SYS_LGETXATTR"] = syscall.SYS_LGETXATTR
//# OLD <{sSYS_LGETXATTR}> 0
//# NEW <{sSYS_LGETXATTR}> 1
//? Consts["/syscall/SYS_SOCKETPAIR"] = syscall.SYS_SOCKETPAIR
//# OLD <{sSYS_SOCKETPAIR}> 0
//# NEW <{sSYS_SOCKETPAIR}> 1
//? Consts["/syscall/BPF_IMM"] = syscall.BPF_IMM
//# OLD <{sBPF_IMM}> 0
//# NEW <{sBPF_IMM}> 1
Funcs["/syscall/PtraceCont"] = syscall.PtraceCont
//# OLD <{sPtraceCont}> 0
//# NEW <{sPtraceCont}> 1
//? Consts["/syscall/RTN_BROADCAST"] = syscall.RTN_BROADCAST
//# OLD <{sRTN_BROADCAST}> 0
//# NEW <{sRTN_BROADCAST}> 1
//? Consts["/syscall/SIGUSR1"] = syscall.SIGUSR1
//# OLD <{sSIGUSR1}> 0
//# NEW <{sSIGUSR1}> 1
//? Consts["/syscall/IP_PMTUDISC_WANT"] = syscall.IP_PMTUDISC_WANT
//# OLD <{sIP_PMTUDISC_WANT}> 0
//# NEW <{sIP_PMTUDISC_WANT}> 1
//? Consts["/syscall/ELNRNG"] = syscall.ELNRNG
//# OLD <{sELNRNG}> 0
//# NEW <{sELNRNG}> 1
//? Consts["/syscall/F_SETOWN"] = syscall.F_SETOWN
//# OLD <{sF_SETOWN}> 0
//# NEW <{sF_SETOWN}> 1
//? Consts["/syscall/SIOCGPGRP"] = syscall.SIOCGPGRP
//# OLD <{sSIOCGPGRP}> 0
//# NEW <{sSIOCGPGRP}> 1
//? Consts["/syscall/IPPROTO_IPV6"] = syscall.IPPROTO_IPV6
//# OLD <{sIPPROTO_IPV6}> 0
//# NEW <{sIPPROTO_IPV6}> 1
//? Consts["/syscall/EADDRINUSE"] = syscall.EADDRINUSE
//# OLD <{sEADDRINUSE}> 0
//# NEW <{sEADDRINUSE}> 1
//? Consts["/syscall/SYS_GETRLIMIT"] = syscall.SYS_GETRLIMIT
//# OLD <{sSYS_GETRLIMIT}> 0
//# NEW <{sSYS_GETRLIMIT}> 1
//? Consts["/syscall/PTRACE_SYSEMU_SINGLESTEP"] = syscall.PTRACE_SYSEMU_SINGLESTEP
//# OLD <{sPTRACE_SYSEMU_SINGLESTEP}> 0
//# NEW <{sPTRACE_SYSEMU_SINGLESTEP}> 1
Funcs["/syscall/Unshare"] = syscall.Unshare
//# OLD <{sUnshare}> 0
//# NEW <{sUnshare}> 1
//? Consts["/syscall/SIOCGIFADDR"] = syscall.SIOCGIFADDR
//# OLD <{sSIOCGIFADDR}> 0
//# NEW <{sSIOCGIFADDR}> 1
//? Consts["/syscall/SYS_EXECVE"] = syscall.SYS_EXECVE
//# OLD <{sSYS_EXECVE}> 0
//# NEW <{sSYS_EXECVE}> 1
//? Consts["/syscall/O_NOFOLLOW"] = syscall.O_NOFOLLOW
//# OLD <{sO_NOFOLLOW}> 0
//# NEW <{sO_NOFOLLOW}> 1
//? Consts["/syscall/PACKET_STATISTICS"] = syscall.PACKET_STATISTICS
//# OLD <{sPACKET_STATISTICS}> 0
//# NEW <{sPACKET_STATISTICS}> 1
//? Consts["/syscall/IP_DEFAULT_MULTICAST_LOOP"] = syscall.IP_DEFAULT_MULTICAST_LOOP
//# OLD <{sIP_DEFAULT_MULTICAST_LOOP}> 0
//# NEW <{sIP_DEFAULT_MULTICAST_LOOP}> 1
//? Consts["/syscall/IFA_CACHEINFO"] = syscall.IFA_CACHEINFO
//# OLD <{sIFA_CACHEINFO}> 0
//# NEW <{sIFA_CACHEINFO}> 1
//? Consts["/syscall/IP_DEFAULT_MULTICAST_TTL"] = syscall.IP_DEFAULT_MULTICAST_TTL
//# OLD <{sIP_DEFAULT_MULTICAST_TTL}> 0
//# NEW <{sIP_DEFAULT_MULTICAST_TTL}> 1
//? Consts["/syscall/F_WRLCK"] = syscall.F_WRLCK
//# OLD <{sF_WRLCK}> 0
//# NEW <{sF_WRLCK}> 1
//? Consts["/syscall/RTM_NR_FAMILIES"] = syscall.RTM_NR_FAMILIES
//# OLD <{sRTM_NR_FAMILIES}> 0
//# NEW <{sRTM_NR_FAMILIES}> 1
Funcs["/syscall/Futimesat"] = syscall.Futimesat
//# OLD <{sFutimesat}> 0
//# NEW <{sFutimesat}> 1
//? Consts["/syscall/RTA_METRICS"] = syscall.RTA_METRICS
//# OLD <{sRTA_METRICS}> 0
//# NEW <{sRTA_METRICS}> 1
//? Consts["/syscall/IFLA_MAX"] = syscall.IFLA_MAX
//# OLD <{sIFLA_MAX}> 0
//# NEW <{sIFLA_MAX}> 1
//? Consts["/syscall/IN_OPEN"] = syscall.IN_OPEN
//# OLD <{sIN_OPEN}> 0
//# NEW <{sIN_OPEN}> 1
//? Consts["/syscall/RTA_PREFSRC"] = syscall.RTA_PREFSRC
//# OLD <{sRTA_PREFSRC}> 0
//# NEW <{sRTA_PREFSRC}> 1
//? Consts["/syscall/RTM_GETDCB"] = syscall.RTM_GETDCB
//# OLD <{sRTM_GETDCB}> 0
//# NEW <{sRTM_GETDCB}> 1
//? Consts["/syscall/LOCK_EX"] = syscall.LOCK_EX
//# OLD <{sLOCK_EX}> 0
//# NEW <{sLOCK_EX}> 1
//? Consts["/syscall/BPF_RET"] = syscall.BPF_RET
//# OLD <{sBPF_RET}> 0
//# NEW <{sBPF_RET}> 1
//? Consts["/syscall/MSG_ERRQUEUE"] = syscall.MSG_ERRQUEUE
//# OLD <{sMSG_ERRQUEUE}> 0
//# NEW <{sMSG_ERRQUEUE}> 1
//? Consts["/syscall/SYS_GETSID"] = syscall.SYS_GETSID
//# OLD <{sSYS_GETSID}> 0
//# NEW <{sSYS_GETSID}> 1
Funcs["/syscall/Setpgid"] = syscall.Setpgid
//# OLD <{sSetpgid}> 0
//# NEW <{sSetpgid}> 1
Funcs["/syscall/EpollCreate"] = syscall.EpollCreate
//# OLD <{sEpollCreate}> 0
//# NEW <{sEpollCreate}> 1
//? Consts["/syscall/RT_CLASS_MAX"] = syscall.RT_CLASS_MAX
//# OLD <{sRT_CLASS_MAX}> 0
//# NEW <{sRT_CLASS_MAX}> 1
//? Consts["/syscall/PTRACE_GET_THREAD_AREA"] = syscall.PTRACE_GET_THREAD_AREA
//# OLD <{sPTRACE_GET_THREAD_AREA}> 0
//# NEW <{sPTRACE_GET_THREAD_AREA}> 1
Types["/syscall/RawSockaddrAny"] = new(*syscall.RawSockaddrAny)
//# OLD <{sRawSockaddrAny}> 0
//# NEW <{sRawSockaddrAny}> 1
//? Consts["/syscall/IN_ONESHOT"] = syscall.IN_ONESHOT
//# OLD <{sIN_ONESHOT}> 0
//# NEW <{sIN_ONESHOT}> 1
//? Consts["/syscall/IN_CLASSB_NSHIFT"] = syscall.IN_CLASSB_NSHIFT
//# OLD <{sIN_CLASSB_NSHIFT}> 0
//# NEW <{sIN_CLASSB_NSHIFT}> 1
//? Consts["/syscall/IP_RECVORIGDSTADDR"] = syscall.IP_RECVORIGDSTADDR
//# OLD <{sIP_RECVORIGDSTADDR}> 0
//# NEW <{sIP_RECVORIGDSTADDR}> 1
//? Consts["/syscall/RT_TABLE_LOCAL"] = syscall.RT_TABLE_LOCAL
//# OLD <{sRT_TABLE_LOCAL}> 0
//# NEW <{sRT_TABLE_LOCAL}> 1
//? Consts["/syscall/IFA_F_TENTATIVE"] = syscall.IFA_F_TENTATIVE
//# OLD <{sIFA_F_TENTATIVE}> 0
//# NEW <{sIFA_F_TENTATIVE}> 1
Types["/syscall/NetlinkMessage"] = new(*syscall.NetlinkMessage)
//# OLD <{sNetlinkMessage}> 0
//# NEW <{sNetlinkMessage}> 1
//? Consts["/syscall/RT_SCOPE_UNIVERSE"] = syscall.RT_SCOPE_UNIVERSE
//# OLD <{sRT_SCOPE_UNIVERSE}> 0
//# NEW <{sRT_SCOPE_UNIVERSE}> 1
//? Consts["/syscall/ETH_P_FCOE"] = syscall.ETH_P_FCOE
//# OLD <{sETH_P_FCOE}> 0
//# NEW <{sETH_P_FCOE}> 1
//? Consts["/syscall/RTN_UNICAST"] = syscall.RTN_UNICAST
//# OLD <{sRTN_UNICAST}> 0
//# NEW <{sRTN_UNICAST}> 1
//? Consts["/syscall/ELIBACC"] = syscall.ELIBACC
//# OLD <{sELIBACC}> 0
//# NEW <{sELIBACC}> 1
Funcs["/syscall/Pwrite"] = syscall.Pwrite
//# OLD <{sPwrite}> 0
//# NEW <{sPwrite}> 1
//? Consts["/syscall/F_GETLK"] = syscall.F_GETLK
//# OLD <{sF_GETLK}> 0
//# NEW <{sF_GETLK}> 1
//? Consts["/syscall/SYS_PERF_EVENT_OPEN"] = syscall.SYS_PERF_EVENT_OPEN
//# OLD <{sSYS_PERF_EVENT_OPEN}> 0
//# NEW <{sSYS_PERF_EVENT_OPEN}> 1
Funcs["/syscall/ParseDirent"] = syscall.ParseDirent
//# OLD <{sParseDirent}> 0
//# NEW <{sParseDirent}> 1
//? Consts["/syscall/PTRACE_POKEUSR"] = syscall.PTRACE_POKEUSR
//# OLD <{sPTRACE_POKEUSR}> 0
//# NEW <{sPTRACE_POKEUSR}> 1
//? Consts["/syscall/SYS_SEMTIMEDOP"] = syscall.SYS_SEMTIMEDOP
//# OLD <{sSYS_SEMTIMEDOP}> 0
//# NEW <{sSYS_SEMTIMEDOP}> 1
//? Consts["/syscall/RTM_NEWTCLASS"] = syscall.RTM_NEWTCLASS
//# OLD <{sRTM_NEWTCLASS}> 0
//# NEW <{sRTM_NEWTCLASS}> 1
//? Consts["/syscall/TIOCSLCKTRMIOS"] = syscall.TIOCSLCKTRMIOS
//# OLD <{sTIOCSLCKTRMIOS}> 0
//# NEW <{sTIOCSLCKTRMIOS}> 1
//? Consts["/syscall/IPPROTO_DCCP"] = syscall.IPPROTO_DCCP
//# OLD <{sIPPROTO_DCCP}> 0
//# NEW <{sIPPROTO_DCCP}> 1
//? Consts["/syscall/SYS_UTIME"] = syscall.SYS_UTIME
//# OLD <{sSYS_UTIME}> 0
//# NEW <{sSYS_UTIME}> 1
//? Consts["/syscall/IFLA_IFNAME"] = syscall.IFLA_IFNAME
//# OLD <{sIFLA_IFNAME}> 0
//# NEW <{sIFLA_IFNAME}> 1
//? Consts["/syscall/SizeofIPMreq"] = syscall.SizeofIPMreq
//# OLD <{sSizeofIPMreq}> 0
//# NEW <{sSizeofIPMreq}> 1
Funcs["/syscall/Settimeofday"] = syscall.Settimeofday
//# OLD <{sSettimeofday}> 0
//# NEW <{sSettimeofday}> 1
//? Consts["/syscall/EUSERS"] = syscall.EUSERS
//# OLD <{sEUSERS}> 0
//# NEW <{sEUSERS}> 1
//? Consts["/syscall/RTPROT_RA"] = syscall.RTPROT_RA
//# OLD <{sRTPROT_RA}> 0
//# NEW <{sRTPROT_RA}> 1
Funcs["/syscall/EpollCtl"] = syscall.EpollCtl
//# OLD <{sEpollCtl}> 0
//# NEW <{sEpollCtl}> 1
//? Consts["/syscall/PR_MCE_KILL_DEFAULT"] = syscall.PR_MCE_KILL_DEFAULT
//# OLD <{sPR_MCE_KILL_DEFAULT}> 0
//# NEW <{sPR_MCE_KILL_DEFAULT}> 1
//? Consts["/syscall/EREMCHG"] = syscall.EREMCHG
//# OLD <{sEREMCHG}> 0
//# NEW <{sEREMCHG}> 1
//? Consts["/syscall/TIOCM_RI"] = syscall.TIOCM_RI
//# OLD <{sTIOCM_RI}> 0
//# NEW <{sTIOCM_RI}> 1
//? Consts["/syscall/PACKET_FASTROUTE"] = syscall.PACKET_FASTROUTE
//# OLD <{sPACKET_FASTROUTE}> 0
//# NEW <{sPACKET_FASTROUTE}> 1
//? Consts["/syscall/TIOCSBRK"] = syscall.TIOCSBRK
//# OLD <{sTIOCSBRK}> 0
//# NEW <{sTIOCSBRK}> 1
//? Consts["/syscall/TIOCGICOUNT"] = syscall.TIOCGICOUNT
//# OLD <{sTIOCGICOUNT}> 0
//# NEW <{sTIOCGICOUNT}> 1
//? Consts["/syscall/RTAX_INITRWND"] = syscall.RTAX_INITRWND
//# OLD <{sRTAX_INITRWND}> 0
//# NEW <{sRTAX_INITRWND}> 1
//? Consts["/syscall/DT_BLK"] = syscall.DT_BLK
//# OLD <{sDT_BLK}> 0
//# NEW <{sDT_BLK}> 1
//? Consts["/syscall/S_IFDIR"] = syscall.S_IFDIR
//# OLD <{sS_IFDIR}> 0
//# NEW <{sS_IFDIR}> 1
//? Consts["/syscall/ENOENT"] = syscall.ENOENT
//# OLD <{sENOENT}> 0
//# NEW <{sENOENT}> 1
Funcs["/syscall/Readlink"] = syscall.Readlink
//# OLD <{sReadlink}> 0
//# NEW <{sReadlink}> 1
//? Consts["/syscall/DT_UNKNOWN"] = syscall.DT_UNKNOWN
//# OLD <{sDT_UNKNOWN}> 0
//# NEW <{sDT_UNKNOWN}> 1
//? Consts["/syscall/EINTR"] = syscall.EINTR
//# OLD <{sEINTR}> 0
//# NEW <{sEINTR}> 1
//? Consts["/syscall/MS_ACTIVE"] = syscall.MS_ACTIVE
//# OLD <{sMS_ACTIVE}> 0
//# NEW <{sMS_ACTIVE}> 1
//? Consts["/syscall/TCP_QUICKACK"] = syscall.TCP_QUICKACK
//# OLD <{sTCP_QUICKACK}> 0
//# NEW <{sTCP_QUICKACK}> 1
//? Consts["/syscall/SYS_INOTIFY_RM_WATCH"] = syscall.SYS_INOTIFY_RM_WATCH
//# OLD <{sSYS_INOTIFY_RM_WATCH}> 0
//# NEW <{sSYS_INOTIFY_RM_WATCH}> 1
//? Consts["/syscall/WALL"] = syscall.WALL
//# OLD <{sWALL}> 0
//# NEW <{sWALL}> 1
//? Consts["/syscall/RT_TABLE_DEFAULT"] = syscall.RT_TABLE_DEFAULT
//# OLD <{sRT_TABLE_DEFAULT}> 0
//# NEW <{sRT_TABLE_DEFAULT}> 1
//? Consts["/syscall/ETH_P_ALL"] = syscall.ETH_P_ALL
//# OLD <{sETH_P_ALL}> 0
//# NEW <{sETH_P_ALL}> 1
//? Consts["/syscall/MS_NOEXEC"] = syscall.MS_NOEXEC
//# OLD <{sMS_NOEXEC}> 0
//# NEW <{sMS_NOEXEC}> 1
//? Consts["/syscall/IPV6_MTU"] = syscall.IPV6_MTU
//# OLD <{sIPV6_MTU}> 0
//# NEW <{sIPV6_MTU}> 1
//? Consts["/syscall/AF_LOCAL"] = syscall.AF_LOCAL
//# OLD <{sAF_LOCAL}> 0
//# NEW <{sAF_LOCAL}> 1
Funcs["/syscall/ForkExec"] = syscall.ForkExec
//# OLD <{sForkExec}> 0
//# NEW <{sForkExec}> 1
//? Consts["/syscall/NETLINK_ROUTE"] = syscall.NETLINK_ROUTE
//# OLD <{sNETLINK_ROUTE}> 0
//# NEW <{sNETLINK_ROUTE}> 1
//? Consts["/syscall/SHUT_RD"] = syscall.SHUT_RD
//# OLD <{sSHUT_RD}> 0
//# NEW <{sSHUT_RD}> 1
//? Consts["/syscall/RTCF_LOG"] = syscall.RTCF_LOG
//# OLD <{sRTCF_LOG}> 0
//# NEW <{sRTCF_LOG}> 1
//? Consts["/syscall/ARPHRD_CISCO"] = syscall.ARPHRD_CISCO
//# OLD <{sARPHRD_CISCO}> 0
//# NEW <{sARPHRD_CISCO}> 1
//? Consts["/syscall/IP_PMTUDISC"] = syscall.IP_PMTUDISC
//# OLD <{sIP_PMTUDISC}> 0
//# NEW <{sIP_PMTUDISC}> 1
//? Consts["/syscall/SYS_SHMGET"] = syscall.SYS_SHMGET
//# OLD <{sSYS_SHMGET}> 0
//# NEW <{sSYS_SHMGET}> 1
//? Consts["/syscall/IP_TTL"] = syscall.IP_TTL
//# OLD <{sIP_TTL}> 0
//# NEW <{sIP_TTL}> 1
//? Consts["/syscall/IP_RECVTOS"] = syscall.IP_RECVTOS
//# OLD <{sIP_RECVTOS}> 0
//# NEW <{sIP_RECVTOS}> 1
//? Consts["/syscall/SIGIOT"] = syscall.SIGIOT
//# OLD <{sSIGIOT}> 0
//# NEW <{sSIGIOT}> 1
//? Consts["/syscall/ARPHRD_EETHER"] = syscall.ARPHRD_EETHER
//# OLD <{sARPHRD_EETHER}> 0
//# NEW <{sARPHRD_EETHER}> 1
//? Consts["/syscall/SYS_BIND"] = syscall.SYS_BIND
//# OLD <{sSYS_BIND}> 0
//# NEW <{sSYS_BIND}> 1
//? Consts["/syscall/RTAX_SSTHRESH"] = syscall.RTAX_SSTHRESH
//# OLD <{sRTAX_SSTHRESH}> 0
//# NEW <{sRTAX_SSTHRESH}> 1
//? Consts["/syscall/SYS_IO_CANCEL"] = syscall.SYS_IO_CANCEL
//# OLD <{sSYS_IO_CANCEL}> 0
//# NEW <{sSYS_IO_CANCEL}> 1
//? Consts["/syscall/SizeofRtMsg"] = syscall.SizeofRtMsg
//# OLD <{sSizeofRtMsg}> 0
//# NEW <{sSizeofRtMsg}> 1
//? Consts["/syscall/SO_TIMESTAMPNS"] = syscall.SO_TIMESTAMPNS
//# OLD <{sSO_TIMESTAMPNS}> 0
//# NEW <{sSO_TIMESTAMPNS}> 1
//? Consts["/syscall/SYS_SELECT"] = syscall.SYS_SELECT
//# OLD <{sSYS_SELECT}> 0
//# NEW <{sSYS_SELECT}> 1
//? Consts["/syscall/SIGTERM"] = syscall.SIGTERM
//# OLD <{sSIGTERM}> 0
//# NEW <{sSIGTERM}> 1
//? Consts["/syscall/PR_SET_PDEATHSIG"] = syscall.PR_SET_PDEATHSIG
//# OLD <{sPR_SET_PDEATHSIG}> 0
//# NEW <{sPR_SET_PDEATHSIG}> 1
//? Consts["/syscall/SO_PEERCRED"] = syscall.SO_PEERCRED
//# OLD <{sSO_PEERCRED}> 0
//# NEW <{sSO_PEERCRED}> 1
//? Consts["/syscall/SYS_FUTIMESAT"] = syscall.SYS_FUTIMESAT
//# OLD <{sSYS_FUTIMESAT}> 0
//# NEW <{sSYS_FUTIMESAT}> 1
//? Consts["/syscall/RTPROT_ZEBRA"] = syscall.RTPROT_ZEBRA
//# OLD <{sRTPROT_ZEBRA}> 0
//# NEW <{sRTPROT_ZEBRA}> 1
Vars["/syscall/Stderr"] = &syscall.Stderr
//# OLD <{sStderr}> 0
//# NEW <{sStderr}> 1
Funcs["/syscall/Getpid"] = syscall.Getpid
//# OLD <{sGetpid}> 0
//# NEW <{sGetpid}> 1
//? Consts["/syscall/EDOTDOT"] = syscall.EDOTDOT
//# OLD <{sEDOTDOT}> 0
//# NEW <{sEDOTDOT}> 1
//? Consts["/syscall/SIGSYS"] = syscall.SIGSYS
//# OLD <{sSIGSYS}> 0
//# NEW <{sSIGSYS}> 1
//? Consts["/syscall/RTM_GETROUTE"] = syscall.RTM_GETROUTE
//# OLD <{sRTM_GETROUTE}> 0
//# NEW <{sRTM_GETROUTE}> 1
Funcs["/syscall/Mprotect"] = syscall.Mprotect
//# OLD <{sMprotect}> 0
//# NEW <{sMprotect}> 1
//? Consts["/syscall/TUNSETOFFLOAD"] = syscall.TUNSETOFFLOAD
//# OLD <{sTUNSETOFFLOAD}> 0
//# NEW <{sTUNSETOFFLOAD}> 1
//? Consts["/syscall/IFF_RUNNING"] = syscall.IFF_RUNNING
//# OLD <{sIFF_RUNNING}> 0
//# NEW <{sIFF_RUNNING}> 1
//? Consts["/syscall/B921600"] = syscall.B921600
//# OLD <{sB921600}> 0
//# NEW <{sB921600}> 1
//? Consts["/syscall/ARPHRD_ATM"] = syscall.ARPHRD_ATM
//# OLD <{sARPHRD_ATM}> 0
//# NEW <{sARPHRD_ATM}> 1
//? Consts["/syscall/MS_RMT_MASK"] = syscall.MS_RMT_MASK
//# OLD <{sMS_RMT_MASK}> 0
//# NEW <{sMS_RMT_MASK}> 1
//? Consts["/syscall/ARPHRD_HWX25"] = syscall.ARPHRD_HWX25
//# OLD <{sARPHRD_HWX25}> 0
//# NEW <{sARPHRD_HWX25}> 1
//? Consts["/syscall/PR_TIMING_TIMESTAMP"] = syscall.PR_TIMING_TIMESTAMP
//# OLD <{sPR_TIMING_TIMESTAMP}> 0
//# NEW <{sPR_TIMING_TIMESTAMP}> 1
//? Consts["/syscall/LINUX_REBOOT_MAGIC1"] = syscall.LINUX_REBOOT_MAGIC1
//# OLD <{sLINUX_REBOOT_MAGIC1}> 0
//# NEW <{sLINUX_REBOOT_MAGIC1}> 1
//? Consts["/syscall/B150"] = syscall.B150
//# OLD <{sB150}> 0
//# NEW <{sB150}> 1
Types["/syscall/RawSockaddrInet4"] = new(*syscall.RawSockaddrInet4)
//# OLD <{sRawSockaddrInet4}> 0
//# NEW <{sRawSockaddrInet4}> 1
//? Consts["/syscall/SIGFPE"] = syscall.SIGFPE
//# OLD <{sSIGFPE}> 0
//# NEW <{sSIGFPE}> 1
//? Consts["/syscall/ETH_P_MPLS_MC"] = syscall.ETH_P_MPLS_MC
//# OLD <{sETH_P_MPLS_MC}> 0
//# NEW <{sETH_P_MPLS_MC}> 1
//? Consts["/syscall/PR_SET_FPEMU"] = syscall.PR_SET_FPEMU
//# OLD <{sPR_SET_FPEMU}> 0
//# NEW <{sPR_SET_FPEMU}> 1
//? Consts["/syscall/NETLINK_AUDIT"] = syscall.NETLINK_AUDIT
//# OLD <{sNETLINK_AUDIT}> 0
//# NEW <{sNETLINK_AUDIT}> 1
//? Consts["/syscall/SO_PRIORITY"] = syscall.SO_PRIORITY
//# OLD <{sSO_PRIORITY}> 0
//# NEW <{sSO_PRIORITY}> 1
//? Consts["/syscall/F_UNLCK"] = syscall.F_UNLCK
//# OLD <{sF_UNLCK}> 0
//# NEW <{sF_UNLCK}> 1
//? Consts["/syscall/ARPHRD_FCAL"] = syscall.ARPHRD_FCAL
//# OLD <{sARPHRD_FCAL}> 0
//# NEW <{sARPHRD_FCAL}> 1
//? Consts["/syscall/TUNSETVNETHDRSZ"] = syscall.TUNSETVNETHDRSZ
//# OLD <{sTUNSETVNETHDRSZ}> 0
//# NEW <{sTUNSETVNETHDRSZ}> 1
//? Consts["/syscall/TIOCGSERIAL"] = syscall.TIOCGSERIAL
//# OLD <{sTIOCGSERIAL}> 0
//# NEW <{sTIOCGSERIAL}> 1
//? Consts["/syscall/SYS_LLISTXATTR"] = syscall.SYS_LLISTXATTR
//# OLD <{sSYS_LLISTXATTR}> 0
//# NEW <{sSYS_LLISTXATTR}> 1
//? Consts["/syscall/IPPROTO_IP"] = syscall.IPPROTO_IP
//# OLD <{sIPPROTO_IP}> 0
//# NEW <{sIPPROTO_IP}> 1
//? Consts["/syscall/ECHRNG"] = syscall.ECHRNG
//# OLD <{sECHRNG}> 0
//# NEW <{sECHRNG}> 1
//? Consts["/syscall/RUSAGE_THREAD"] = syscall.RUSAGE_THREAD
//# OLD <{sRUSAGE_THREAD}> 0
//# NEW <{sRUSAGE_THREAD}> 1
//? Consts["/syscall/IPPROTO_TP"] = syscall.IPPROTO_TP
//# OLD <{sIPPROTO_TP}> 0
//# NEW <{sIPPROTO_TP}> 1
//? Consts["/syscall/IN_EXCL_UNLINK"] = syscall.IN_EXCL_UNLINK
//# OLD <{sIN_EXCL_UNLINK}> 0
//# NEW <{sIN_EXCL_UNLINK}> 1
//? Consts["/syscall/PR_GET_TIMING"] = syscall.PR_GET_TIMING
//# OLD <{sPR_GET_TIMING}> 0
//# NEW <{sPR_GET_TIMING}> 1
//? Consts["/syscall/SYS_FDATASYNC"] = syscall.SYS_FDATASYNC
//# OLD <{sSYS_FDATASYNC}> 0
//# NEW <{sSYS_FDATASYNC}> 1
//? Consts["/syscall/PTRACE_O_TRACEFORK"] = syscall.PTRACE_O_TRACEFORK
//# OLD <{sPTRACE_O_TRACEFORK}> 0
//# NEW <{sPTRACE_O_TRACEFORK}> 1
//? Consts["/syscall/SYS_GETEGID"] = syscall.SYS_GETEGID
//# OLD <{sSYS_GETEGID}> 0
//# NEW <{sSYS_GETEGID}> 1
//? Consts["/syscall/TIOCSPGRP"] = syscall.TIOCSPGRP
//# OLD <{sTIOCSPGRP}> 0
//# NEW <{sTIOCSPGRP}> 1
//? Consts["/syscall/MSG_FIN"] = syscall.MSG_FIN
//# OLD <{sMSG_FIN}> 0
//# NEW <{sMSG_FIN}> 1
Funcs["/syscall/Times"] = syscall.Times
//# OLD <{sTimes}> 0
//# NEW <{sTimes}> 1
Types["/syscall/Credential"] = new(*syscall.Credential)
//# OLD <{sCredential}> 0
//# NEW <{sCredential}> 1
//? Consts["/syscall/ETH_P_LAT"] = syscall.ETH_P_LAT
//# OLD <{sETH_P_LAT}> 0
//# NEW <{sETH_P_LAT}> 1
//? Consts["/syscall/BPF_JMP"] = syscall.BPF_JMP
//# OLD <{sBPF_JMP}> 0
//# NEW <{sBPF_JMP}> 1
//? Consts["/syscall/IPPROTO_GRE"] = syscall.IPPROTO_GRE
//# OLD <{sIPPROTO_GRE}> 0
//# NEW <{sIPPROTO_GRE}> 1
//? Consts["/syscall/AF_FILE"] = syscall.AF_FILE
//# OLD <{sAF_FILE}> 0
//# NEW <{sAF_FILE}> 1
//? Consts["/syscall/IN_CLOSE_NOWRITE"] = syscall.IN_CLOSE_NOWRITE
//# OLD <{sIN_CLOSE_NOWRITE}> 0
//# NEW <{sIN_CLOSE_NOWRITE}> 1
//? Consts["/syscall/SYS_EVENTFD"] = syscall.SYS_EVENTFD
//# OLD <{sSYS_EVENTFD}> 0
//# NEW <{sSYS_EVENTFD}> 1
//? Consts["/syscall/MS_POSIXACL"] = syscall.MS_POSIXACL
//# OLD <{sMS_POSIXACL}> 0
//# NEW <{sMS_POSIXACL}> 1
//? Consts["/syscall/AF_RDS"] = syscall.AF_RDS
//# OLD <{sAF_RDS}> 0
//# NEW <{sAF_RDS}> 1
//? Consts["/syscall/SYS_RENAMEAT"] = syscall.SYS_RENAMEAT
//# OLD <{sSYS_RENAMEAT}> 0
//# NEW <{sSYS_RENAMEAT}> 1
//? Consts["/syscall/RTF_BROADCAST"] = syscall.RTF_BROADCAST
//# OLD <{sRTF_BROADCAST}> 0
//# NEW <{sRTF_BROADCAST}> 1
//? Consts["/syscall/IFF_NOARP"] = syscall.IFF_NOARP
//# OLD <{sIFF_NOARP}> 0
//# NEW <{sIFF_NOARP}> 1
//? Consts["/syscall/ARPHRD_DLCI"] = syscall.ARPHRD_DLCI
//# OLD <{sARPHRD_DLCI}> 0
//# NEW <{sARPHRD_DLCI}> 1
//? Consts["/syscall/RTCF_DOREDIRECT"] = syscall.RTCF_DOREDIRECT
//# OLD <{sRTCF_DOREDIRECT}> 0
//# NEW <{sRTCF_DOREDIRECT}> 1
//? Consts["/syscall/IP_PKTINFO"] = syscall.IP_PKTINFO
//# OLD <{sIP_PKTINFO}> 0
//# NEW <{sIP_PKTINFO}> 1
//? Consts["/syscall/SizeofRtNexthop"] = syscall.SizeofRtNexthop
//# OLD <{sSizeofRtNexthop}> 0
//# NEW <{sSizeofRtNexthop}> 1
//? Consts["/syscall/B600"] = syscall.B600
//# OLD <{sB600}> 0
//# NEW <{sB600}> 1
//? Consts["/syscall/PR_FP_EXC_DIV"] = syscall.PR_FP_EXC_DIV
//# OLD <{sPR_FP_EXC_DIV}> 0
//# NEW <{sPR_FP_EXC_DIV}> 1
//? Consts["/syscall/ETH_P_HDLC"] = syscall.ETH_P_HDLC
//# OLD <{sETH_P_HDLC}> 0
//# NEW <{sETH_P_HDLC}> 1
//? Consts["/syscall/OFILL"] = syscall.OFILL
//# OLD <{sOFILL}> 0
//# NEW <{sOFILL}> 1
//? Consts["/syscall/MS_ASYNC"] = syscall.MS_ASYNC
//# OLD <{sMS_ASYNC}> 0
//# NEW <{sMS_ASYNC}> 1
//? Consts["/syscall/RTF_LINKRT"] = syscall.RTF_LINKRT
//# OLD <{sRTF_LINKRT}> 0
//# NEW <{sRTF_LINKRT}> 1
//? Consts["/syscall/NOFLSH"] = syscall.NOFLSH
//# OLD <{sNOFLSH}> 0
//# NEW <{sNOFLSH}> 1
//? Consts["/syscall/EADDRNOTAVAIL"] = syscall.EADDRNOTAVAIL
//# OLD <{sEADDRNOTAVAIL}> 0
//# NEW <{sEADDRNOTAVAIL}> 1
Funcs["/syscall/Fchmodat"] = syscall.Fchmodat
//# OLD <{sFchmodat}> 0
//# NEW <{sFchmodat}> 1
//? Consts["/syscall/TIOCSERGWILD"] = syscall.TIOCSERGWILD
//# OLD <{sTIOCSERGWILD}> 0
//# NEW <{sTIOCSERGWILD}> 1
//? Consts["/syscall/TIOCPKT_STOP"] = syscall.TIOCPKT_STOP
//# OLD <{sTIOCPKT_STOP}> 0
//# NEW <{sTIOCPKT_STOP}> 1
//? Consts["/syscall/SYS_WAITID"] = syscall.SYS_WAITID
//# OLD <{sSYS_WAITID}> 0
//# NEW <{sSYS_WAITID}> 1
Funcs["/syscall/Symlink"] = syscall.Symlink
//# OLD <{sSymlink}> 0
//# NEW <{sSymlink}> 1
//? Consts["/syscall/SYS_EPOLL_WAIT"] = syscall.SYS_EPOLL_WAIT
//# OLD <{sSYS_EPOLL_WAIT}> 0
//# NEW <{sSYS_EPOLL_WAIT}> 1
//? Consts["/syscall/SYS_TIMERFD_SETTIME"] = syscall.SYS_TIMERFD_SETTIME
//# OLD <{sSYS_TIMERFD_SETTIME}> 0
//# NEW <{sSYS_TIMERFD_SETTIME}> 1
//? Consts["/syscall/BPF_MEM"] = syscall.BPF_MEM
//# OLD <{sBPF_MEM}> 0
//# NEW <{sBPF_MEM}> 1
//? Consts["/syscall/SYS_MUNLOCK"] = syscall.SYS_MUNLOCK
//# OLD <{sSYS_MUNLOCK}> 0
//# NEW <{sSYS_MUNLOCK}> 1
//? Consts["/syscall/EPOLLHUP"] = syscall.EPOLLHUP
//# OLD <{sEPOLLHUP}> 0
//# NEW <{sEPOLLHUP}> 1
//? Consts["/syscall/ETH_P_AX25"] = syscall.ETH_P_AX25
//# OLD <{sETH_P_AX25}> 0
//# NEW <{sETH_P_AX25}> 1
//? Consts["/syscall/O_CLOEXEC"] = syscall.O_CLOEXEC
//# OLD <{sO_CLOEXEC}> 0
//# NEW <{sO_CLOEXEC}> 1
//? Consts["/syscall/PROT_WRITE"] = syscall.PROT_WRITE
//# OLD <{sPROT_WRITE}> 0
//# NEW <{sPROT_WRITE}> 1
//? Consts["/syscall/BPF_JA"] = syscall.BPF_JA
//# OLD <{sBPF_JA}> 0
//# NEW <{sBPF_JA}> 1
//? Consts["/syscall/SYS_PIPE2"] = syscall.SYS_PIPE2
//# OLD <{sSYS_PIPE2}> 0
//# NEW <{sSYS_PIPE2}> 1
//? Consts["/syscall/MAP_EXECUTABLE"] = syscall.MAP_EXECUTABLE
//# OLD <{sMAP_EXECUTABLE}> 0
//# NEW <{sMAP_EXECUTABLE}> 1
//? Consts["/syscall/SizeofCmsghdr"] = syscall.SizeofCmsghdr
//# OLD <{sSizeofCmsghdr}> 0
//# NEW <{sSizeofCmsghdr}> 1
Funcs["/syscall/EpollWait"] = syscall.EpollWait
//# OLD <{sEpollWait}> 0
//# NEW <{sEpollWait}> 1
Types["/syscall/SockFprog"] = new(*syscall.SockFprog)
//# OLD <{sSockFprog}> 0
//# NEW <{sSockFprog}> 1
//? Consts["/syscall/ETH_P_IRDA"] = syscall.ETH_P_IRDA
//# OLD <{sETH_P_IRDA}> 0
//# NEW <{sETH_P_IRDA}> 1
//? Consts["/syscall/PROT_GROWSUP"] = syscall.PROT_GROWSUP
//# OLD <{sPROT_GROWSUP}> 0
//# NEW <{sPROT_GROWSUP}> 1
//? Consts["/syscall/IN_MOVED_TO"] = syscall.IN_MOVED_TO
//# OLD <{sIN_MOVED_TO}> 0
//# NEW <{sIN_MOVED_TO}> 1
//? Consts["/syscall/PTRACE_GETREGS"] = syscall.PTRACE_GETREGS
//# OLD <{sPTRACE_GETREGS}> 0
//# NEW <{sPTRACE_GETREGS}> 1
//? Consts["/syscall/EBUSY"] = syscall.EBUSY
//# OLD <{sEBUSY}> 0
//# NEW <{sEBUSY}> 1
//? Consts["/syscall/SYS_GETDENTS"] = syscall.SYS_GETDENTS
//# OLD <{sSYS_GETDENTS}> 0
//# NEW <{sSYS_GETDENTS}> 1
//? Consts["/syscall/F_GETOWN"] = syscall.F_GETOWN
//# OLD <{sF_GETOWN}> 0
//# NEW <{sF_GETOWN}> 1
//? Consts["/syscall/AF_TIPC"] = syscall.AF_TIPC
//# OLD <{sAF_TIPC}> 0
//# NEW <{sAF_TIPC}> 1
//? Consts["/syscall/ECANCELED"] = syscall.ECANCELED
//# OLD <{sECANCELED}> 0
//# NEW <{sECANCELED}> 1
//? Consts["/syscall/B2500000"] = syscall.B2500000
//# OLD <{sB2500000}> 0
//# NEW <{sB2500000}> 1
//? Consts["/syscall/RTM_GETNEIGH"] = syscall.RTM_GETNEIGH
//# OLD <{sRTM_GETNEIGH}> 0
//# NEW <{sRTM_GETNEIGH}> 1
//? Consts["/syscall/NLM_F_ROOT"] = syscall.NLM_F_ROOT
//# OLD <{sNLM_F_ROOT}> 0
//# NEW <{sNLM_F_ROOT}> 1
//? Consts["/syscall/SIOCDIFADDR"] = syscall.SIOCDIFADDR
//# OLD <{sSIOCDIFADDR}> 0
//# NEW <{sSIOCDIFADDR}> 1
Funcs["/syscall/Setuid"] = syscall.Setuid
//# OLD <{sSetuid}> 0
//# NEW <{sSetuid}> 1
//? Consts["/syscall/MNT_DETACH"] = syscall.MNT_DETACH
//# OLD <{sMNT_DETACH}> 0
//# NEW <{sMNT_DETACH}> 1
//? Consts["/syscall/VKILL"] = syscall.VKILL
//# OLD <{sVKILL}> 0
//# NEW <{sVKILL}> 1
//? Consts["/syscall/SIOCSIFBR"] = syscall.SIOCSIFBR
//# OLD <{sSIOCSIFBR}> 0
//# NEW <{sSIOCSIFBR}> 1
//? Consts["/syscall/TIOCM_CD"] = syscall.TIOCM_CD
//# OLD <{sTIOCM_CD}> 0
//# NEW <{sTIOCM_CD}> 1
//? Consts["/syscall/RTM_NEWROUTE"] = syscall.RTM_NEWROUTE
//# OLD <{sRTM_NEWROUTE}> 0
//# NEW <{sRTM_NEWROUTE}> 1
//? Consts["/syscall/SO_BSDCOMPAT"] = syscall.SO_BSDCOMPAT
//# OLD <{sSO_BSDCOMPAT}> 0
//# NEW <{sSO_BSDCOMPAT}> 1
//? Consts["/syscall/PTRACE_SET_THREAD_AREA"] = syscall.PTRACE_SET_THREAD_AREA
//# OLD <{sPTRACE_SET_THREAD_AREA}> 0
//# NEW <{sPTRACE_SET_THREAD_AREA}> 1
//? Consts["/syscall/SIOCGIFDSTADDR"] = syscall.SIOCGIFDSTADDR
//# OLD <{sSIOCGIFDSTADDR}> 0
//# NEW <{sSIOCGIFDSTADDR}> 1
//? Consts["/syscall/SYS_MSGGET"] = syscall.SYS_MSGGET
//# OLD <{sSYS_MSGGET}> 0
//# NEW <{sSYS_MSGGET}> 1
//? Consts["/syscall/IPV6_TCLASS"] = syscall.IPV6_TCLASS
//# OLD <{sIPV6_TCLASS}> 0
//# NEW <{sIPV6_TCLASS}> 1
//? Consts["/syscall/SYS_LISTXATTR"] = syscall.SYS_LISTXATTR
//# OLD <{sSYS_LISTXATTR}> 0
//# NEW <{sSYS_LISTXATTR}> 1
//? Consts["/syscall/SYS_GETSOCKOPT"] = syscall.SYS_GETSOCKOPT
//# OLD <{sSYS_GETSOCKOPT}> 0
//# NEW <{sSYS_GETSOCKOPT}> 1
//? Consts["/syscall/AF_SNA"] = syscall.AF_SNA
//# OLD <{sAF_SNA}> 0
//# NEW <{sAF_SNA}> 1
//? Consts["/syscall/IP_MULTICAST_TTL"] = syscall.IP_MULTICAST_TTL
//# OLD <{sIP_MULTICAST_TTL}> 0
//# NEW <{sIP_MULTICAST_TTL}> 1
//? Consts["/syscall/ETH_P_PPP_MP"] = syscall.ETH_P_PPP_MP
//# OLD <{sETH_P_PPP_MP}> 0
//# NEW <{sETH_P_PPP_MP}> 1
//? Consts["/syscall/SYS_CLOCK_NANOSLEEP"] = syscall.SYS_CLOCK_NANOSLEEP
//# OLD <{sSYS_CLOCK_NANOSLEEP}> 0
//# NEW <{sSYS_CLOCK_NANOSLEEP}> 1
Funcs["/syscall/ParseUnixCredentials"] = syscall.ParseUnixCredentials
//# OLD <{sParseUnixCredentials}> 0
//# NEW <{sParseUnixCredentials}> 1
//? Consts["/syscall/SOL_IRDA"] = syscall.SOL_IRDA
//# OLD <{sSOL_IRDA}> 0
//# NEW <{sSOL_IRDA}> 1
Types["/syscall/Cmsghdr"] = new(*syscall.Cmsghdr)
//# OLD <{sCmsghdr}> 0
//# NEW <{sCmsghdr}> 1
//? Consts["/syscall/SOCK_RAW"] = syscall.SOCK_RAW
//# OLD <{sSOCK_RAW}> 0
//# NEW <{sSOCK_RAW}> 1
//? Consts["/syscall/AF_PPPOX"] = syscall.AF_PPPOX
//# OLD <{sAF_PPPOX}> 0
//# NEW <{sAF_PPPOX}> 1
//? Consts["/syscall/SYS_RMDIR"] = syscall.SYS_RMDIR
//# OLD <{sSYS_RMDIR}> 0
//# NEW <{sSYS_RMDIR}> 1
Funcs["/syscall/Mknod"] = syscall.Mknod
//# OLD <{sMknod}> 0
//# NEW <{sMknod}> 1
//? Consts["/syscall/RTN_ANYCAST"] = syscall.RTN_ANYCAST
//# OLD <{sRTN_ANYCAST}> 0
//# NEW <{sRTN_ANYCAST}> 1
//? Consts["/syscall/MADV_RANDOM"] = syscall.MADV_RANDOM
//# OLD <{sMADV_RANDOM}> 0
//# NEW <{sMADV_RANDOM}> 1
//? Consts["/syscall/TIOCGLCKTRMIOS"] = syscall.TIOCGLCKTRMIOS
//# OLD <{sTIOCGLCKTRMIOS}> 0
//# NEW <{sTIOCGLCKTRMIOS}> 1
//? Consts["/syscall/RTA_GATEWAY"] = syscall.RTA_GATEWAY
//# OLD <{sRTA_GATEWAY}> 0
//# NEW <{sRTA_GATEWAY}> 1
//? Consts["/syscall/SIGTRAP"] = syscall.SIGTRAP
//# OLD <{sSIGTRAP}> 0
//# NEW <{sSIGTRAP}> 1
//? Consts["/syscall/SizeofIfAddrmsg"] = syscall.SizeofIfAddrmsg
//# OLD <{sSizeofIfAddrmsg}> 0
//# NEW <{sSizeofIfAddrmsg}> 1
//? Consts["/syscall/IP_RECVERR"] = syscall.IP_RECVERR
//# OLD <{sIP_RECVERR}> 0
//# NEW <{sIP_RECVERR}> 1
//? Consts["/syscall/S_IWGRP"] = syscall.S_IWGRP
//# OLD <{sS_IWGRP}> 0
//# NEW <{sS_IWGRP}> 1
//? Consts["/syscall/ELIBEXEC"] = syscall.ELIBEXEC
//# OLD <{sELIBEXEC}> 0
//# NEW <{sELIBEXEC}> 1
//? Consts["/syscall/IP_OPTIONS"] = syscall.IP_OPTIONS
//# OLD <{sIP_OPTIONS}> 0
//# NEW <{sIP_OPTIONS}> 1
//? Consts["/syscall/BPF_AND"] = syscall.BPF_AND
//# OLD <{sBPF_AND}> 0
//# NEW <{sBPF_AND}> 1
//? Consts["/syscall/PTRACE_SETREGS"] = syscall.PTRACE_SETREGS
//# OLD <{sPTRACE_SETREGS}> 0
//# NEW <{sPTRACE_SETREGS}> 1
//? Consts["/syscall/RTAX_ADVMSS"] = syscall.RTAX_ADVMSS
//# OLD <{sRTAX_ADVMSS}> 0
//# NEW <{sRTAX_ADVMSS}> 1
//? Consts["/syscall/RLIMIT_STACK"] = syscall.RLIMIT_STACK
//# OLD <{sRLIMIT_STACK}> 0
//# NEW <{sRLIMIT_STACK}> 1
//? Consts["/syscall/IP_RECVOPTS"] = syscall.IP_RECVOPTS
//# OLD <{sIP_RECVOPTS}> 0
//# NEW <{sIP_RECVOPTS}> 1
Funcs["/syscall/Write"] = syscall.Write
//# OLD <{sWrite}> 0
//# NEW <{sWrite}> 1
//? Consts["/syscall/SYS_SHUTDOWN"] = syscall.SYS_SHUTDOWN
//# OLD <{sSYS_SHUTDOWN}> 0
//# NEW <{sSYS_SHUTDOWN}> 1
//? Consts["/syscall/EXFULL"] = syscall.EXFULL
//# OLD <{sEXFULL}> 0
//# NEW <{sEXFULL}> 1
//? Consts["/syscall/B134"] = syscall.B134
//# OLD <{sB134}> 0
//# NEW <{sB134}> 1
Funcs["/syscall/SetsockoptIPv6Mreq"] = syscall.SetsockoptIPv6Mreq
//# OLD <{sSetsockoptIPv6Mreq}> 0
//# NEW <{sSetsockoptIPv6Mreq}> 1
//? Consts["/syscall/ARPHRD_TUNNEL6"] = syscall.ARPHRD_TUNNEL6
//# OLD <{sARPHRD_TUNNEL6}> 0
//# NEW <{sARPHRD_TUNNEL6}> 1
//? Consts["/syscall/RTF_NAT"] = syscall.RTF_NAT
//# OLD <{sRTF_NAT}> 0
//# NEW <{sRTF_NAT}> 1
Types["/syscall/SockaddrUnix"] = new(*syscall.SockaddrUnix)
//# OLD <{sSockaddrUnix}> 0
//# NEW <{sSockaddrUnix}> 1
//? Consts["/syscall/IPV6_2292HOPOPTS"] = syscall.IPV6_2292HOPOPTS
//# OLD <{sIPV6_2292HOPOPTS}> 0
//# NEW <{sIPV6_2292HOPOPTS}> 1
//? Consts["/syscall/TUNATTACHFILTER"] = syscall.TUNATTACHFILTER
//# OLD <{sTUNATTACHFILTER}> 0
//# NEW <{sTUNATTACHFILTER}> 1
//? Consts["/syscall/SOCK_RDM"] = syscall.SOCK_RDM
//# OLD <{sSOCK_RDM}> 0
//# NEW <{sSOCK_RDM}> 1
Types["/syscall/SockaddrInet6"] = new(*syscall.SockaddrInet6)
//# OLD <{sSockaddrInet6}> 0
//# NEW <{sSockaddrInet6}> 1
//? Consts["/syscall/ARPHRD_FDDI"] = syscall.ARPHRD_FDDI
//# OLD <{sARPHRD_FDDI}> 0
//# NEW <{sARPHRD_FDDI}> 1
//? Consts["/syscall/ETIMEDOUT"] = syscall.ETIMEDOUT
//# OLD <{sETIMEDOUT}> 0
//# NEW <{sETIMEDOUT}> 1
//? Consts["/syscall/PR_MCE_KILL_GET"] = syscall.PR_MCE_KILL_GET
//# OLD <{sPR_MCE_KILL_GET}> 0
//# NEW <{sPR_MCE_KILL_GET}> 1
//? Consts["/syscall/SYS_SOCKET"] = syscall.SYS_SOCKET
//# OLD <{sSYS_SOCKET}> 0
//# NEW <{sSYS_SOCKET}> 1
//? Consts["/syscall/SYS_DUP2"] = syscall.SYS_DUP2
//# OLD <{sSYS_DUP2}> 0
//# NEW <{sSYS_DUP2}> 1
//? Consts["/syscall/EPOLLERR"] = syscall.EPOLLERR
//# OLD <{sEPOLLERR}> 0
//# NEW <{sEPOLLERR}> 1
//? Consts["/syscall/AF_IPX"] = syscall.AF_IPX
//# OLD <{sAF_IPX}> 0
//# NEW <{sAF_IPX}> 1
//? Consts["/syscall/EPOLL_CTL_MOD"] = syscall.EPOLL_CTL_MOD
//# OLD <{sEPOLL_CTL_MOD}> 0
//# NEW <{sEPOLL_CTL_MOD}> 1
//? Consts["/syscall/ETH_P_TRAILER"] = syscall.ETH_P_TRAILER
//# OLD <{sETH_P_TRAILER}> 0
//# NEW <{sETH_P_TRAILER}> 1
//? Consts["/syscall/MSG_EOR"] = syscall.MSG_EOR
//# OLD <{sMSG_EOR}> 0
//# NEW <{sMSG_EOR}> 1
//? Consts["/syscall/SYS_IOPERM"] = syscall.SYS_IOPERM
//# OLD <{sSYS_IOPERM}> 0
//# NEW <{sSYS_IOPERM}> 1
//? Consts["/syscall/SYS_FLOCK"] = syscall.SYS_FLOCK
//# OLD <{sSYS_FLOCK}> 0
//# NEW <{sSYS_FLOCK}> 1
//? Consts["/syscall/SIOCGIFMETRIC"] = syscall.SIOCGIFMETRIC
//# OLD <{sSIOCGIFMETRIC}> 0
//# NEW <{sSIOCGIFMETRIC}> 1
//? Consts["/syscall/IPV6_RECVERR"] = syscall.IPV6_RECVERR
//# OLD <{sIPV6_RECVERR}> 0
//# NEW <{sIPV6_RECVERR}> 1
//? Consts["/syscall/WNOTHREAD"] = syscall.WNOTHREAD
//# OLD <{sWNOTHREAD}> 0
//# NEW <{sWNOTHREAD}> 1
//? Consts["/syscall/ENOMSG"] = syscall.ENOMSG
//# OLD <{sENOMSG}> 0
//# NEW <{sENOMSG}> 1
//? Consts["/syscall/IP_ADD_SOURCE_MEMBERSHIP"] = syscall.IP_ADD_SOURCE_MEMBERSHIP
//# OLD <{sIP_ADD_SOURCE_MEMBERSHIP}> 0
//# NEW <{sIP_ADD_SOURCE_MEMBERSHIP}> 1
//? Consts["/syscall/SYS_PREAD64"] = syscall.SYS_PREAD64
//# OLD <{sSYS_PREAD64}> 0
//# NEW <{sSYS_PREAD64}> 1
//? Consts["/syscall/SizeofNlMsghdr"] = syscall.SizeofNlMsghdr
//# OLD <{sSizeofNlMsghdr}> 0
//# NEW <{sSizeofNlMsghdr}> 1
//? Consts["/syscall/ENOBUFS"] = syscall.ENOBUFS
//# OLD <{sENOBUFS}> 0
//# NEW <{sENOBUFS}> 1
//? Consts["/syscall/PR_FPEMU_NOPRINT"] = syscall.PR_FPEMU_NOPRINT
//# OLD <{sPR_FPEMU_NOPRINT}> 0
//# NEW <{sPR_FPEMU_NOPRINT}> 1
//? Consts["/syscall/PTRACE_O_TRACEEXIT"] = syscall.PTRACE_O_TRACEEXIT
//# OLD <{sPTRACE_O_TRACEEXIT}> 0
//# NEW <{sPTRACE_O_TRACEEXIT}> 1
Funcs["/syscall/Tgkill"] = syscall.Tgkill
//# OLD <{sTgkill}> 0
//# NEW <{sTgkill}> 1
//? Consts["/syscall/SYS_FORK"] = syscall.SYS_FORK
//# OLD <{sSYS_FORK}> 0
//# NEW <{sSYS_FORK}> 1
//? Consts["/syscall/EDEADLK"] = syscall.EDEADLK
//# OLD <{sEDEADLK}> 0
//# NEW <{sEDEADLK}> 1
//? Consts["/syscall/SYS_CHROOT"] = syscall.SYS_CHROOT
//# OLD <{sSYS_CHROOT}> 0
//# NEW <{sSYS_CHROOT}> 1
//? Consts["/syscall/ENOSYS"] = syscall.ENOSYS
//# OLD <{sENOSYS}> 0
//# NEW <{sENOSYS}> 1
//? Consts["/syscall/S_IFCHR"] = syscall.S_IFCHR
//# OLD <{sS_IFCHR}> 0
//# NEW <{sS_IFCHR}> 1
Types["/syscall/Signal"] = new(*syscall.Signal)
//# OLD <{sSignal}> 0
//# NEW <{sSignal}> 1
Funcs["/syscall/LsfSocket"] = syscall.LsfSocket
//# OLD <{sLsfSocket}> 0
//# NEW <{sLsfSocket}> 1
//? Consts["/syscall/SYS_GETPID"] = syscall.SYS_GETPID
//# OLD <{sSYS_GETPID}> 0
//# NEW <{sSYS_GETPID}> 1
//? Consts["/syscall/IPPROTO_ICMP"] = syscall.IPPROTO_ICMP
//# OLD <{sIPPROTO_ICMP}> 0
//# NEW <{sIPPROTO_ICMP}> 1
//? Consts["/syscall/MAP_FILE"] = syscall.MAP_FILE
//# OLD <{sMAP_FILE}> 0
//# NEW <{sMAP_FILE}> 1
//? Consts["/syscall/RTM_NEWADDRLABEL"] = syscall.RTM_NEWADDRLABEL
//# OLD <{sRTM_NEWADDRLABEL}> 0
//# NEW <{sRTM_NEWADDRLABEL}> 1
//? Consts["/syscall/IN_MOVE_SELF"] = syscall.IN_MOVE_SELF
//# OLD <{sIN_MOVE_SELF}> 0
//# NEW <{sIN_MOVE_SELF}> 1
//? Consts["/syscall/TIOCMGET"] = syscall.TIOCMGET
//# OLD <{sTIOCMGET}> 0
//# NEW <{sTIOCMGET}> 1
//? Consts["/syscall/IP_DROP_MEMBERSHIP"] = syscall.IP_DROP_MEMBERSHIP
//# OLD <{sIP_DROP_MEMBERSHIP}> 0
//# NEW <{sIP_DROP_MEMBERSHIP}> 1
//? Consts["/syscall/SYS_DELETE_MODULE"] = syscall.SYS_DELETE_MODULE
//# OLD <{sSYS_DELETE_MODULE}> 0
//# NEW <{sSYS_DELETE_MODULE}> 1
//? Consts["/syscall/RTPROT_NTK"] = syscall.RTPROT_NTK
//# OLD <{sRTPROT_NTK}> 0
//# NEW <{sRTPROT_NTK}> 1
//? Consts["/syscall/RTM_F_PREFIX"] = syscall.RTM_F_PREFIX
//# OLD <{sRTM_F_PREFIX}> 0
//# NEW <{sRTM_F_PREFIX}> 1
//? Consts["/syscall/TUNSETTXFILTER"] = syscall.TUNSETTXFILTER
//# OLD <{sTUNSETTXFILTER}> 0
//# NEW <{sTUNSETTXFILTER}> 1
//? Consts["/syscall/RTPROT_XORP"] = syscall.RTPROT_XORP
//# OLD <{sRTPROT_XORP}> 0
//# NEW <{sRTPROT_XORP}> 1
//? Consts["/syscall/S_IROTH"] = syscall.S_IROTH
//# OLD <{sS_IROTH}> 0
//# NEW <{sS_IROTH}> 1
//? Consts["/syscall/SIGSTOP"] = syscall.SIGSTOP
//# OLD <{sSIGSTOP}> 0
//# NEW <{sSIGSTOP}> 1
//? Consts["/syscall/IFF_UP"] = syscall.IFF_UP
//# OLD <{sIFF_UP}> 0
//# NEW <{sIFF_UP}> 1
//? Consts["/syscall/RTF_INTERFACE"] = syscall.RTF_INTERFACE
//# OLD <{sRTF_INTERFACE}> 0
//# NEW <{sRTF_INTERFACE}> 1
//? Consts["/syscall/SYS_TIMER_GETOVERRUN"] = syscall.SYS_TIMER_GETOVERRUN
//# OLD <{sSYS_TIMER_GETOVERRUN}> 0
//# NEW <{sSYS_TIMER_GETOVERRUN}> 1
//? Consts["/syscall/O_TRUNC"] = syscall.O_TRUNC
//# OLD <{sO_TRUNC}> 0
//# NEW <{sO_TRUNC}> 1
Types["/syscall/Dirent"] = new(*syscall.Dirent)
//# OLD <{sDirent}> 0
//# NEW <{sDirent}> 1
//? Consts["/syscall/ETH_P_ARP"] = syscall.ETH_P_ARP
//# OLD <{sETH_P_ARP}> 0
//# NEW <{sETH_P_ARP}> 1
//? Consts["/syscall/SYS_FGETXATTR"] = syscall.SYS_FGETXATTR
//# OLD <{sSYS_FGETXATTR}> 0
//# NEW <{sSYS_FGETXATTR}> 1
//? Consts["/syscall/VEOL2"] = syscall.VEOL2
//# OLD <{sVEOL2}> 0
//# NEW <{sVEOL2}> 1
//? Consts["/syscall/B200"] = syscall.B200
//# OLD <{sB200}> 0
//# NEW <{sB200}> 1
Funcs["/syscall/Setfsuid"] = syscall.Setfsuid
//# OLD <{sSetfsuid}> 0
//# NEW <{sSetfsuid}> 1
//? Consts["/syscall/IPV6_LEAVE_GROUP"] = syscall.IPV6_LEAVE_GROUP
//# OLD <{sIPV6_LEAVE_GROUP}> 0
//# NEW <{sIPV6_LEAVE_GROUP}> 1
//? Consts["/syscall/VWERASE"] = syscall.VWERASE
//# OLD <{sVWERASE}> 0
//# NEW <{sVWERASE}> 1
//? Consts["/syscall/TIOCGDEV"] = syscall.TIOCGDEV
//# OLD <{sTIOCGDEV}> 0
//# NEW <{sTIOCGDEV}> 1
//? Consts["/syscall/MS_BIND"] = syscall.MS_BIND
//# OLD <{sMS_BIND}> 0
//# NEW <{sMS_BIND}> 1
Funcs["/syscall/Splice"] = syscall.Splice
//# OLD <{sSplice}> 0
//# NEW <{sSplice}> 1
//? Consts["/syscall/SYS_IO_GETEVENTS"] = syscall.SYS_IO_GETEVENTS
//# OLD <{sSYS_IO_GETEVENTS}> 0
//# NEW <{sSYS_IO_GETEVENTS}> 1
//? Consts["/syscall/IPPROTO_FRAGMENT"] = syscall.IPPROTO_FRAGMENT
//# OLD <{sIPPROTO_FRAGMENT}> 0
//# NEW <{sIPPROTO_FRAGMENT}> 1
//? Consts["/syscall/RTNH_F_ONLINK"] = syscall.RTNH_F_ONLINK
//# OLD <{sRTNH_F_ONLINK}> 0
//# NEW <{sRTNH_F_ONLINK}> 1
Funcs["/syscall/SetLsfPromisc"] = syscall.SetLsfPromisc
//# OLD <{sSetLsfPromisc}> 0
//# NEW <{sSetLsfPromisc}> 1
//? Consts["/syscall/RTAX_FEATURE_ECN"] = syscall.RTAX_FEATURE_ECN
//# OLD <{sRTAX_FEATURE_ECN}> 0
//# NEW <{sRTAX_FEATURE_ECN}> 1
//? Consts["/syscall/IFLA_MASTER"] = syscall.IFLA_MASTER
//# OLD <{sIFLA_MASTER}> 0
//# NEW <{sIFLA_MASTER}> 1
//? Consts["/syscall/BPF_STX"] = syscall.BPF_STX
//# OLD <{sBPF_STX}> 0
//# NEW <{sBPF_STX}> 1
//? Consts["/syscall/EKEYREVOKED"] = syscall.EKEYREVOKED
//# OLD <{sEKEYREVOKED}> 0
//# NEW <{sEKEYREVOKED}> 1
//? Consts["/syscall/RTM_GETANYCAST"] = syscall.RTM_GETANYCAST
//# OLD <{sRTM_GETANYCAST}> 0
//# NEW <{sRTM_GETANYCAST}> 1
//? Consts["/syscall/ARPHRD_SLIP6"] = syscall.ARPHRD_SLIP6
//# OLD <{sARPHRD_SLIP6}> 0
//# NEW <{sARPHRD_SLIP6}> 1
//? Consts["/syscall/RTM_NEWNDUSEROPT"] = syscall.RTM_NEWNDUSEROPT
//# OLD <{sRTM_NEWNDUSEROPT}> 0
//# NEW <{sRTM_NEWNDUSEROPT}> 1
//? Consts["/syscall/TCP_WINDOW_CLAMP"] = syscall.TCP_WINDOW_CLAMP
//# OLD <{sTCP_WINDOW_CLAMP}> 0
//# NEW <{sTCP_WINDOW_CLAMP}> 1
//? Consts["/syscall/IPPROTO_ROUTING"] = syscall.IPPROTO_ROUTING
//# OLD <{sIPPROTO_ROUTING}> 0
//# NEW <{sIPPROTO_ROUTING}> 1
//? Consts["/syscall/EAGAIN"] = syscall.EAGAIN
//# OLD <{sEAGAIN}> 0
//# NEW <{sEAGAIN}> 1
//? Consts["/syscall/ETH_P_PAUSE"] = syscall.ETH_P_PAUSE
//# OLD <{sETH_P_PAUSE}> 0
//# NEW <{sETH_P_PAUSE}> 1
//? Consts["/syscall/MS_RDONLY"] = syscall.MS_RDONLY
//# OLD <{sMS_RDONLY}> 0
//# NEW <{sMS_RDONLY}> 1
//? Consts["/syscall/RTM_NR_MSGTYPES"] = syscall.RTM_NR_MSGTYPES
//# OLD <{sRTM_NR_MSGTYPES}> 0
//# NEW <{sRTM_NR_MSGTYPES}> 1
//? Consts["/syscall/PR_SET_ENDIAN"] = syscall.PR_SET_ENDIAN
//# OLD <{sPR_SET_ENDIAN}> 0
//# NEW <{sPR_SET_ENDIAN}> 1
Funcs["/syscall/Geteuid"] = syscall.Geteuid
//# OLD <{sGeteuid}> 0
//# NEW <{sGeteuid}> 1
//? Consts["/syscall/PR_TASK_PERF_EVENTS_ENABLE"] = syscall.PR_TASK_PERF_EVENTS_ENABLE
//# OLD <{sPR_TASK_PERF_EVENTS_ENABLE}> 0
//# NEW <{sPR_TASK_PERF_EVENTS_ENABLE}> 1
//? Consts["/syscall/VERASE"] = syscall.VERASE
//# OLD <{sVERASE}> 0
//# NEW <{sVERASE}> 1
//? Consts["/syscall/F_GETLEASE"] = syscall.F_GETLEASE
//# OLD <{sF_GETLEASE}> 0
//# NEW <{sF_GETLEASE}> 1
//? Consts["/syscall/PTRACE_PEEKTEXT"] = syscall.PTRACE_PEEKTEXT
//# OLD <{sPTRACE_PEEKTEXT}> 0
//# NEW <{sPTRACE_PEEKTEXT}> 1
//? Consts["/syscall/TIOCGPGRP"] = syscall.TIOCGPGRP
//# OLD <{sTIOCGPGRP}> 0
//# NEW <{sTIOCGPGRP}> 1
//? Consts["/syscall/NLMSG_DONE"] = syscall.NLMSG_DONE
//# OLD <{sNLMSG_DONE}> 0
//# NEW <{sNLMSG_DONE}> 1
//? Consts["/syscall/SYS_SCHED_SETSCHEDULER"] = syscall.SYS_SCHED_SETSCHEDULER
//# OLD <{sSYS_SCHED_SETSCHEDULER}> 0
//# NEW <{sSYS_SCHED_SETSCHEDULER}> 1
//? Consts["/syscall/SYS_DUP3"] = syscall.SYS_DUP3
//# OLD <{sSYS_DUP3}> 0
//# NEW <{sSYS_DUP3}> 1
//? Consts["/syscall/PTRACE_O_TRACESYSGOOD"] = syscall.PTRACE_O_TRACESYSGOOD
//# OLD <{sPTRACE_O_TRACESYSGOOD}> 0
//# NEW <{sPTRACE_O_TRACESYSGOOD}> 1
//? Consts["/syscall/SYS_TIMER_DELETE"] = syscall.SYS_TIMER_DELETE
//# OLD <{sSYS_TIMER_DELETE}> 0
//# NEW <{sSYS_TIMER_DELETE}> 1
//? Consts["/syscall/SIGTTOU"] = syscall.SIGTTOU
//# OLD <{sSIGTTOU}> 0
//# NEW <{sSIGTTOU}> 1
//? Consts["/syscall/SYS_SPLICE"] = syscall.SYS_SPLICE
//# OLD <{sSYS_SPLICE}> 0
//# NEW <{sSYS_SPLICE}> 1
//? Consts["/syscall/IP_FREEBIND"] = syscall.IP_FREEBIND
//# OLD <{sIP_FREEBIND}> 0
//# NEW <{sIP_FREEBIND}> 1
//? Consts["/syscall/MCL_CURRENT"] = syscall.MCL_CURRENT
//# OLD <{sMCL_CURRENT}> 0
//# NEW <{sMCL_CURRENT}> 1
Funcs["/syscall/Unlinkat"] = syscall.Unlinkat
//# OLD <{sUnlinkat}> 0
//# NEW <{sUnlinkat}> 1
Types["/syscall/Utsname"] = new(*syscall.Utsname)
//# OLD <{sUtsname}> 0
//# NEW <{sUtsname}> 1
//? Consts["/syscall/PARMRK"] = syscall.PARMRK
//# OLD <{sPARMRK}> 0
//# NEW <{sPARMRK}> 1
//? Consts["/syscall/SIOCSARP"] = syscall.SIOCSARP
//# OLD <{sSIOCSARP}> 0
//# NEW <{sSIOCSARP}> 1
//? Consts["/syscall/AF_BLUETOOTH"] = syscall.AF_BLUETOOTH
//# OLD <{sAF_BLUETOOTH}> 0
//# NEW <{sAF_BLUETOOTH}> 1
//? Consts["/syscall/ETXTBSY"] = syscall.ETXTBSY
//# OLD <{sETXTBSY}> 0
//# NEW <{sETXTBSY}> 1
//? Consts["/syscall/SYS_CONNECT"] = syscall.SYS_CONNECT
//# OLD <{sSYS_CONNECT}> 0
//# NEW <{sSYS_CONNECT}> 1
//? Consts["/syscall/PR_FP_EXC_NONRECOV"] = syscall.PR_FP_EXC_NONRECOV
//# OLD <{sPR_FP_EXC_NONRECOV}> 0
//# NEW <{sPR_FP_EXC_NONRECOV}> 1
//? Consts["/syscall/SYS_KEYCTL"] = syscall.SYS_KEYCTL
//# OLD <{sSYS_KEYCTL}> 0
//# NEW <{sSYS_KEYCTL}> 1
//? Consts["/syscall/O_EXCL"] = syscall.O_EXCL
//# OLD <{sO_EXCL}> 0
//# NEW <{sO_EXCL}> 1
//? Consts["/syscall/NETLINK_KOBJECT_UEVENT"] = syscall.NETLINK_KOBJECT_UEVENT
//# OLD <{sNETLINK_KOBJECT_UEVENT}> 0
//# NEW <{sNETLINK_KOBJECT_UEVENT}> 1
//? Consts["/syscall/O_CREAT"] = syscall.O_CREAT
//# OLD <{sO_CREAT}> 0
//# NEW <{sO_CREAT}> 1
//? Consts["/syscall/PR_SET_UNALIGN"] = syscall.PR_SET_UNALIGN
//# OLD <{sPR_SET_UNALIGN}> 0
//# NEW <{sPR_SET_UNALIGN}> 1
Funcs["/syscall/Setdomainname"] = syscall.Setdomainname
//# OLD <{sSetdomainname}> 0
//# NEW <{sSetdomainname}> 1
//? Consts["/syscall/SIOCGIFCONF"] = syscall.SIOCGIFCONF
//# OLD <{sSIOCGIFCONF}> 0
//# NEW <{sSIOCGIFCONF}> 1
//? Consts["/syscall/MADV_MERGEABLE"] = syscall.MADV_MERGEABLE
//# OLD <{sMADV_MERGEABLE}> 0
//# NEW <{sMADV_MERGEABLE}> 1
//? Consts["/syscall/VQUIT"] = syscall.VQUIT
//# OLD <{sVQUIT}> 0
//# NEW <{sVQUIT}> 1
//? Consts["/syscall/WNOWAIT"] = syscall.WNOWAIT
//# OLD <{sWNOWAIT}> 0
//# NEW <{sWNOWAIT}> 1
//? Consts["/syscall/SO_ERROR"] = syscall.SO_ERROR
//# OLD <{sSO_ERROR}> 0
//# NEW <{sSO_ERROR}> 1
//? Consts["/syscall/IP_TOS"] = syscall.IP_TOS
//# OLD <{sIP_TOS}> 0
//# NEW <{sIP_TOS}> 1
//? Consts["/syscall/ETH_P_IEEEPUP"] = syscall.ETH_P_IEEEPUP
//# OLD <{sETH_P_IEEEPUP}> 0
//# NEW <{sETH_P_IEEEPUP}> 1
//? Consts["/syscall/RTF_NOFORWARD"] = syscall.RTF_NOFORWARD
//# OLD <{sRTF_NOFORWARD}> 0
//# NEW <{sRTF_NOFORWARD}> 1
//? Consts["/syscall/F_SETSIG"] = syscall.F_SETSIG
//# OLD <{sF_SETSIG}> 0
//# NEW <{sF_SETSIG}> 1
Funcs["/syscall/Getrusage"] = syscall.Getrusage
//# OLD <{sGetrusage}> 0
//# NEW <{sGetrusage}> 1
//? Consts["/syscall/SYS_LOOKUP_DCOOKIE"] = syscall.SYS_LOOKUP_DCOOKIE
//# OLD <{sSYS_LOOKUP_DCOOKIE}> 0
//# NEW <{sSYS_LOOKUP_DCOOKIE}> 1
//? Consts["/syscall/SOL_IP"] = syscall.SOL_IP
//# OLD <{sSOL_IP}> 0
//# NEW <{sSOL_IP}> 1
//? Consts["/syscall/ARPHRD_TUNNEL"] = syscall.ARPHRD_TUNNEL
//# OLD <{sARPHRD_TUNNEL}> 0
//# NEW <{sARPHRD_TUNNEL}> 1
//? Consts["/syscall/ETH_P_PHONET"] = syscall.ETH_P_PHONET
//# OLD <{sETH_P_PHONET}> 0
//# NEW <{sETH_P_PHONET}> 1
//? Consts["/syscall/SYS_REQUEST_KEY"] = syscall.SYS_REQUEST_KEY
//# OLD <{sSYS_REQUEST_KEY}> 0
//# NEW <{sSYS_REQUEST_KEY}> 1
Funcs["/syscall/PtraceSetRegs"] = syscall.PtraceSetRegs
//# OLD <{sPtraceSetRegs}> 0
//# NEW <{sPtraceSetRegs}> 1
//? Consts["/syscall/SOL_IPV6"] = syscall.SOL_IPV6
//# OLD <{sSOL_IPV6}> 0
//# NEW <{sSOL_IPV6}> 1
//? Consts["/syscall/RTAX_CWND"] = syscall.RTAX_CWND
//# OLD <{sRTAX_CWND}> 0
//# NEW <{sRTAX_CWND}> 1
//? Consts["/syscall/PR_TSC_SIGSEGV"] = syscall.PR_TSC_SIGSEGV
//# OLD <{sPR_TSC_SIGSEGV}> 0
//# NEW <{sPR_TSC_SIGSEGV}> 1
//? Consts["/syscall/SYS_RT_SIGTIMEDWAIT"] = syscall.SYS_RT_SIGTIMEDWAIT
//# OLD <{sSYS_RT_SIGTIMEDWAIT}> 0
//# NEW <{sSYS_RT_SIGTIMEDWAIT}> 1
//? Consts["/syscall/SYS_RECVMMSG"] = syscall.SYS_RECVMMSG
//# OLD <{sSYS_RECVMMSG}> 0
//# NEW <{sSYS_RECVMMSG}> 1
//? Consts["/syscall/TCP_MAXWIN"] = syscall.TCP_MAXWIN
//# OLD <{sTCP_MAXWIN}> 0
//# NEW <{sTCP_MAXWIN}> 1
//? Consts["/syscall/SYS_CHMOD"] = syscall.SYS_CHMOD
//# OLD <{sSYS_CHMOD}> 0
//# NEW <{sSYS_CHMOD}> 1
//? Consts["/syscall/ETH_P_IPV6"] = syscall.ETH_P_IPV6
//# OLD <{sETH_P_IPV6}> 0
//# NEW <{sETH_P_IPV6}> 1
//? Consts["/syscall/IFF_VNET_HDR"] = syscall.IFF_VNET_HDR
//# OLD <{sIFF_VNET_HDR}> 0
//# NEW <{sIFF_VNET_HDR}> 1
//? Consts["/syscall/IFLA_COST"] = syscall.IFLA_COST
//# OLD <{sIFLA_COST}> 0
//# NEW <{sIFLA_COST}> 1
//? Consts["/syscall/TIOCPKT_FLUSHWRITE"] = syscall.TIOCPKT_FLUSHWRITE
//# OLD <{sTIOCPKT_FLUSHWRITE}> 0
//# NEW <{sTIOCPKT_FLUSHWRITE}> 1
//? Consts["/syscall/ECHOPRT"] = syscall.ECHOPRT
//# OLD <{sECHOPRT}> 0
//# NEW <{sECHOPRT}> 1
//? Consts["/syscall/SYS_TKILL"] = syscall.SYS_TKILL
//# OLD <{sSYS_TKILL}> 0
//# NEW <{sSYS_TKILL}> 1
//? Consts["/syscall/PTRACE_SINGLEBLOCK"] = syscall.PTRACE_SINGLEBLOCK
//# OLD <{sPTRACE_SINGLEBLOCK}> 0
//# NEW <{sPTRACE_SINGLEBLOCK}> 1
//? Consts["/syscall/SYS_EXIT_GROUP"] = syscall.SYS_EXIT_GROUP
//# OLD <{sSYS_EXIT_GROUP}> 0
//# NEW <{sSYS_EXIT_GROUP}> 1
//? Consts["/syscall/MS_NODEV"] = syscall.MS_NODEV
//# OLD <{sMS_NODEV}> 0
//# NEW <{sMS_NODEV}> 1
//? Consts["/syscall/RTF_XRESOLVE"] = syscall.RTF_XRESOLVE
//# OLD <{sRTF_XRESOLVE}> 0
//# NEW <{sRTF_XRESOLVE}> 1
Funcs["/syscall/Fchmod"] = syscall.Fchmod
//# OLD <{sFchmod}> 0
//# NEW <{sFchmod}> 1
//? Consts["/syscall/TUNSETPERSIST"] = syscall.TUNSETPERSIST
//# OLD <{sTUNSETPERSIST}> 0
//# NEW <{sTUNSETPERSIST}> 1
//? Consts["/syscall/PR_SET_SECUREBITS"] = syscall.PR_SET_SECUREBITS
//# OLD <{sPR_SET_SECUREBITS}> 0
//# NEW <{sPR_SET_SECUREBITS}> 1
//? Consts["/syscall/BPF_ABS"] = syscall.BPF_ABS
//# OLD <{sBPF_ABS}> 0
//# NEW <{sBPF_ABS}> 1
//? Consts["/syscall/RTAX_WINDOW"] = syscall.RTAX_WINDOW
//# OLD <{sRTAX_WINDOW}> 0
//# NEW <{sRTAX_WINDOW}> 1
//? Consts["/syscall/SYS_MSGCTL"] = syscall.SYS_MSGCTL
//# OLD <{sSYS_MSGCTL}> 0
//# NEW <{sSYS_MSGCTL}> 1
//? Consts["/syscall/BPF_ALU"] = syscall.BPF_ALU
//# OLD <{sBPF_ALU}> 0
//# NEW <{sBPF_ALU}> 1
//? Consts["/syscall/ETH_P_PAE"] = syscall.ETH_P_PAE
//# OLD <{sETH_P_PAE}> 0
//# NEW <{sETH_P_PAE}> 1
//? Consts["/syscall/SYS_SYSLOG"] = syscall.SYS_SYSLOG
//# OLD <{sSYS_SYSLOG}> 0
//# NEW <{sSYS_SYSLOG}> 1
//? Consts["/syscall/SIGINT"] = syscall.SIGINT
//# OLD <{sSIGINT}> 0
//# NEW <{sSIGINT}> 1
//? Consts["/syscall/MS_NOUSER"] = syscall.MS_NOUSER
//# OLD <{sMS_NOUSER}> 0
//# NEW <{sMS_NOUSER}> 1
//? Consts["/syscall/PR_GET_DUMPABLE"] = syscall.PR_GET_DUMPABLE
//# OLD <{sPR_GET_DUMPABLE}> 0
//# NEW <{sPR_GET_DUMPABLE}> 1
//? Consts["/syscall/SYS_MKDIR"] = syscall.SYS_MKDIR
//# OLD <{sSYS_MKDIR}> 0
//# NEW <{sSYS_MKDIR}> 1
//? Consts["/syscall/SYS_LISTEN"] = syscall.SYS_LISTEN
//# OLD <{sSYS_LISTEN}> 0
//# NEW <{sSYS_LISTEN}> 1
//? Consts["/syscall/PTRACE_ATTACH"] = syscall.PTRACE_ATTACH
//# OLD <{sPTRACE_ATTACH}> 0
//# NEW <{sPTRACE_ATTACH}> 1
//? Consts["/syscall/ARPHRD_ARCNET"] = syscall.ARPHRD_ARCNET
//# OLD <{sARPHRD_ARCNET}> 0
//# NEW <{sARPHRD_ARCNET}> 1
//? Consts["/syscall/BPF_DIV"] = syscall.BPF_DIV
//# OLD <{sBPF_DIV}> 0
//# NEW <{sBPF_DIV}> 1
//? Consts["/syscall/RTAX_RTTVAR"] = syscall.RTAX_RTTVAR
//# OLD <{sRTAX_RTTVAR}> 0
//# NEW <{sRTAX_RTTVAR}> 1
//? Consts["/syscall/MADV_DONTFORK"] = syscall.MADV_DONTFORK
//# OLD <{sMADV_DONTFORK}> 0
//# NEW <{sMADV_DONTFORK}> 1
//? Consts["/syscall/RTM_DELNEIGH"] = syscall.RTM_DELNEIGH
//# OLD <{sRTM_DELNEIGH}> 0
//# NEW <{sRTM_DELNEIGH}> 1
//? Consts["/syscall/ARPHRD_FCPP"] = syscall.ARPHRD_FCPP
//# OLD <{sARPHRD_FCPP}> 0
//# NEW <{sARPHRD_FCPP}> 1
//? Consts["/syscall/SIOCGIFBR"] = syscall.SIOCGIFBR
//# OLD <{sSIOCGIFBR}> 0
//# NEW <{sSIOCGIFBR}> 1
//? Consts["/syscall/LOCK_NB"] = syscall.LOCK_NB
//# OLD <{sLOCK_NB}> 0
//# NEW <{sLOCK_NB}> 1
//? Consts["/syscall/SIOCSIFBRDADDR"] = syscall.SIOCSIFBRDADDR
//# OLD <{sSIOCSIFBRDADDR}> 0
//# NEW <{sSIOCSIFBRDADDR}> 1
//? Consts["/syscall/AF_NETLINK"] = syscall.AF_NETLINK
//# OLD <{sAF_NETLINK}> 0
//# NEW <{sAF_NETLINK}> 1
//? Consts["/syscall/RTM_DELRULE"] = syscall.RTM_DELRULE
//# OLD <{sRTM_DELRULE}> 0
//# NEW <{sRTM_DELRULE}> 1
//? Consts["/syscall/SYS_SYSINFO"] = syscall.SYS_SYSINFO
//# OLD <{sSYS_SYSINFO}> 0
//# NEW <{sSYS_SYSINFO}> 1
//? Consts["/syscall/PR_ENDIAN_BIG"] = syscall.PR_ENDIAN_BIG
//# OLD <{sPR_ENDIAN_BIG}> 0
//# NEW <{sPR_ENDIAN_BIG}> 1
//? Consts["/syscall/ECHOKE"] = syscall.ECHOKE
//# OLD <{sECHOKE}> 0
//# NEW <{sECHOKE}> 1
//? Consts["/syscall/DT_LNK"] = syscall.DT_LNK
//# OLD <{sDT_LNK}> 0
//# NEW <{sDT_LNK}> 1
//? Consts["/syscall/AF_ALG"] = syscall.AF_ALG
//# OLD <{sAF_ALG}> 0
//# NEW <{sAF_ALG}> 1
//? Consts["/syscall/WEXITED"] = syscall.WEXITED
//# OLD <{sWEXITED}> 0
//# NEW <{sWEXITED}> 1
//? Consts["/syscall/F_SETLKW"] = syscall.F_SETLKW
//# OLD <{sF_SETLKW}> 0
//# NEW <{sF_SETLKW}> 1
//? Consts["/syscall/ARPHRD_IEEE80211_PRISM"] = syscall.ARPHRD_IEEE80211_PRISM
//# OLD <{sARPHRD_IEEE80211_PRISM}> 0
//# NEW <{sARPHRD_IEEE80211_PRISM}> 1
Funcs["/syscall/Sync"] = syscall.Sync
//# OLD <{sSync}> 0
//# NEW <{sSync}> 1
//? Consts["/syscall/SIGHUP"] = syscall.SIGHUP
//# OLD <{sSIGHUP}> 0
//# NEW <{sSIGHUP}> 1
//? Consts["/syscall/RT_SCOPE_HOST"] = syscall.RT_SCOPE_HOST
//# OLD <{sRT_SCOPE_HOST}> 0
//# NEW <{sRT_SCOPE_HOST}> 1
//? Consts["/syscall/SYS_MQ_OPEN"] = syscall.SYS_MQ_OPEN
//# OLD <{sSYS_MQ_OPEN}> 0
//# NEW <{sSYS_MQ_OPEN}> 1
Types["/syscall/Stat_t"] = new(*syscall.Stat_t)
//# OLD <{sStat_t}> 0
//# NEW <{sStat_t}> 1
//? Consts["/syscall/IFLA_ADDRESS"] = syscall.IFLA_ADDRESS
//# OLD <{sIFLA_ADDRESS}> 0
//# NEW <{sIFLA_ADDRESS}> 1
//? Consts["/syscall/MSG_CONFIRM"] = syscall.MSG_CONFIRM
//# OLD <{sMSG_CONFIRM}> 0
//# NEW <{sMSG_CONFIRM}> 1
Funcs["/syscall/TimevalToNsec"] = syscall.TimevalToNsec
//# OLD <{sTimevalToNsec}> 0
//# NEW <{sTimevalToNsec}> 1
//? Consts["/syscall/ARPHRD_HIPPI"] = syscall.ARPHRD_HIPPI
//# OLD <{sARPHRD_HIPPI}> 0
//# NEW <{sARPHRD_HIPPI}> 1
//? Consts["/syscall/RTM_NEWACTION"] = syscall.RTM_NEWACTION
//# OLD <{sRTM_NEWACTION}> 0
//# NEW <{sRTM_NEWACTION}> 1
//? Consts["/syscall/SYS_ADD_KEY"] = syscall.SYS_ADD_KEY
//# OLD <{sSYS_ADD_KEY}> 0
//# NEW <{sSYS_ADD_KEY}> 1
//? Consts["/syscall/EPOLL_CTL_DEL"] = syscall.EPOLL_CTL_DEL
//# OLD <{sEPOLL_CTL_DEL}> 0
//# NEW <{sEPOLL_CTL_DEL}> 1
//? Consts["/syscall/ETH_P_IEEEPUPAT"] = syscall.ETH_P_IEEEPUPAT
//# OLD <{sETH_P_IEEEPUPAT}> 0
//# NEW <{sETH_P_IEEEPUPAT}> 1
//? Consts["/syscall/SizeofSockaddrUnix"] = syscall.SizeofSockaddrUnix
//# OLD <{sSizeofSockaddrUnix}> 0
//# NEW <{sSizeofSockaddrUnix}> 1
//? Consts["/syscall/IP_ORIGDSTADDR"] = syscall.IP_ORIGDSTADDR
//# OLD <{sIP_ORIGDSTADDR}> 0
//# NEW <{sIP_ORIGDSTADDR}> 1
//? Consts["/syscall/SYS_EXIT"] = syscall.SYS_EXIT
//# OLD <{sSYS_EXIT}> 0
//# NEW <{sSYS_EXIT}> 1
//? Consts["/syscall/SYS_FACCESSAT"] = syscall.SYS_FACCESSAT
//# OLD <{sSYS_FACCESSAT}> 0
//# NEW <{sSYS_FACCESSAT}> 1
Types["/syscall/PtraceRegs"] = new(*syscall.PtraceRegs)
//# OLD <{sPtraceRegs}> 0
//# NEW <{sPtraceRegs}> 1
//? Consts["/syscall/F_GETSIG"] = syscall.F_GETSIG
//# OLD <{sF_GETSIG}> 0
//# NEW <{sF_GETSIG}> 1
Types["/syscall/EpollEvent"] = new(*syscall.EpollEvent)
//# OLD <{sEpollEvent}> 0
//# NEW <{sEpollEvent}> 1
//? Consts["/syscall/S_IXUSR"] = syscall.S_IXUSR
//# OLD <{sS_IXUSR}> 0
//# NEW <{sS_IXUSR}> 1
//? Consts["/syscall/EBADSLT"] = syscall.EBADSLT
//# OLD <{sEBADSLT}> 0
//# NEW <{sEBADSLT}> 1
Funcs["/syscall/Futimes"] = syscall.Futimes
//# OLD <{sFutimes}> 0
//# NEW <{sFutimes}> 1
//? Consts["/syscall/SYS_SCHED_GET_PRIORITY_MIN"] = syscall.SYS_SCHED_GET_PRIORITY_MIN
//# OLD <{sSYS_SCHED_GET_PRIORITY_MIN}> 0
//# NEW <{sSYS_SCHED_GET_PRIORITY_MIN}> 1
//? Consts["/syscall/SYS_SETGROUPS"] = syscall.SYS_SETGROUPS
//# OLD <{sSYS_SETGROUPS}> 0
//# NEW <{sSYS_SETGROUPS}> 1
//? Consts["/syscall/SCM_TIMESTAMPNS"] = syscall.SCM_TIMESTAMPNS
//# OLD <{sSCM_TIMESTAMPNS}> 0
//# NEW <{sSCM_TIMESTAMPNS}> 1
//? Consts["/syscall/MAP_LOCKED"] = syscall.MAP_LOCKED
//# OLD <{sMAP_LOCKED}> 0
//# NEW <{sMAP_LOCKED}> 1
//? Consts["/syscall/AF_AX25"] = syscall.AF_AX25
//# OLD <{sAF_AX25}> 0
//# NEW <{sAF_AX25}> 1
//? Consts["/syscall/IFF_ONE_QUEUE"] = syscall.IFF_ONE_QUEUE
//# OLD <{sIFF_ONE_QUEUE}> 0
//# NEW <{sIFF_ONE_QUEUE}> 1
//? Consts["/syscall/B4800"] = syscall.B4800
//# OLD <{sB4800}> 0
//# NEW <{sB4800}> 1
//? Consts["/syscall/ARPHRD_LAPB"] = syscall.ARPHRD_LAPB
//# OLD <{sARPHRD_LAPB}> 0
//# NEW <{sARPHRD_LAPB}> 1
Funcs["/syscall/Socketpair"] = syscall.Socketpair
//# OLD <{sSocketpair}> 0
//# NEW <{sSocketpair}> 1
Funcs["/syscall/Getuid"] = syscall.Getuid
//# OLD <{sGetuid}> 0
//# NEW <{sGetuid}> 1
//? Consts["/syscall/AF_ATMPVC"] = syscall.AF_ATMPVC
//# OLD <{sAF_ATMPVC}> 0
//# NEW <{sAF_ATMPVC}> 1
//? Consts["/syscall/ETH_P_PUPAT"] = syscall.ETH_P_PUPAT
//# OLD <{sETH_P_PUPAT}> 0
//# NEW <{sETH_P_PUPAT}> 1
//? Consts["/syscall/TCSETS"] = syscall.TCSETS
//# OLD <{sTCSETS}> 0
//# NEW <{sTCSETS}> 1
//? Consts["/syscall/IPPROTO_ICMPV6"] = syscall.IPPROTO_ICMPV6
//# OLD <{sIPPROTO_ICMPV6}> 0
//# NEW <{sIPPROTO_ICMPV6}> 1
Funcs["/syscall/Time"] = syscall.Time
//# OLD <{sTime}> 0
//# NEW <{sTime}> 1
//? Consts["/syscall/MS_DIRSYNC"] = syscall.MS_DIRSYNC
//# OLD <{sMS_DIRSYNC}> 0
//# NEW <{sMS_DIRSYNC}> 1
//? Consts["/syscall/IP_ADD_MEMBERSHIP"] = syscall.IP_ADD_MEMBERSHIP
//# OLD <{sIP_ADD_MEMBERSHIP}> 0
//# NEW <{sIP_ADD_MEMBERSHIP}> 1
//? Consts["/syscall/SYS_MOUNT"] = syscall.SYS_MOUNT
//# OLD <{sSYS_MOUNT}> 0
//# NEW <{sSYS_MOUNT}> 1
//? Consts["/syscall/NAME_MAX"] = syscall.NAME_MAX
//# OLD <{sNAME_MAX}> 0
//# NEW <{sNAME_MAX}> 1
Funcs["/syscall/DetachLsf"] = syscall.DetachLsf
//# OLD <{sDetachLsf}> 0
//# NEW <{sDetachLsf}> 1
Funcs["/syscall/Getcwd"] = syscall.Getcwd
//# OLD <{sGetcwd}> 0
//# NEW <{sGetcwd}> 1
//? Consts["/syscall/MCL_FUTURE"] = syscall.MCL_FUTURE
//# OLD <{sMCL_FUTURE}> 0
//# NEW <{sMCL_FUTURE}> 1
//? Consts["/syscall/RT_SCOPE_LINK"] = syscall.RT_SCOPE_LINK
//# OLD <{sRT_SCOPE_LINK}> 0
//# NEW <{sRT_SCOPE_LINK}> 1
//? Consts["/syscall/EPOLL_CTL_ADD"] = syscall.EPOLL_CTL_ADD
//# OLD <{sEPOLL_CTL_ADD}> 0
//# NEW <{sEPOLL_CTL_ADD}> 1
//? Consts["/syscall/ETH_P_LOCALTALK"] = syscall.ETH_P_LOCALTALK
//# OLD <{sETH_P_LOCALTALK}> 0
//# NEW <{sETH_P_LOCALTALK}> 1
Funcs["/syscall/Truncate"] = syscall.Truncate
//# OLD <{sTruncate}> 0
//# NEW <{sTruncate}> 1
//? Consts["/syscall/MADV_NORMAL"] = syscall.MADV_NORMAL
//# OLD <{sMADV_NORMAL}> 0
//# NEW <{sMADV_NORMAL}> 1
//? Consts["/syscall/SYS_UNSHARE"] = syscall.SYS_UNSHARE
//# OLD <{sSYS_UNSHARE}> 0
//# NEW <{sSYS_UNSHARE}> 1
//? Consts["/syscall/S_IWUSR"] = syscall.S_IWUSR
//# OLD <{sS_IWUSR}> 0
//# NEW <{sS_IWUSR}> 1
//? Consts["/syscall/SYS_BRK"] = syscall.SYS_BRK
//# OLD <{sSYS_BRK}> 0
//# NEW <{sSYS_BRK}> 1
//? Consts["/syscall/RTA_IIF"] = syscall.RTA_IIF
//# OLD <{sRTA_IIF}> 0
//# NEW <{sRTA_IIF}> 1
//? Consts["/syscall/B4000000"] = syscall.B4000000
//# OLD <{sB4000000}> 0
//# NEW <{sB4000000}> 1
//? Consts["/syscall/IPV6_RTHDR_LOOSE"] = syscall.IPV6_RTHDR_LOOSE
//# OLD <{sIPV6_RTHDR_LOOSE}> 0
//# NEW <{sIPV6_RTHDR_LOOSE}> 1
//? Consts["/syscall/B230400"] = syscall.B230400
//# OLD <{sB230400}> 0
//# NEW <{sB230400}> 1
//? Consts["/syscall/SizeofInet4Pktinfo"] = syscall.SizeofInet4Pktinfo
//# OLD <{sSizeofInet4Pktinfo}> 0
//# NEW <{sSizeofInet4Pktinfo}> 1
//? Consts["/syscall/WNOHANG"] = syscall.WNOHANG
//# OLD <{sWNOHANG}> 0
//# NEW <{sWNOHANG}> 1
//? Consts["/syscall/MADV_UNMERGEABLE"] = syscall.MADV_UNMERGEABLE
//# OLD <{sMADV_UNMERGEABLE}> 0
//# NEW <{sMADV_UNMERGEABLE}> 1
//? Consts["/syscall/F_TLOCK"] = syscall.F_TLOCK
//# OLD <{sF_TLOCK}> 0
//# NEW <{sF_TLOCK}> 1
//? Consts["/syscall/RTF_DYNAMIC"] = syscall.RTF_DYNAMIC
//# OLD <{sRTF_DYNAMIC}> 0
//# NEW <{sRTF_DYNAMIC}> 1
//? Consts["/syscall/SYS_GETPRIORITY"] = syscall.SYS_GETPRIORITY
//# OLD <{sSYS_GETPRIORITY}> 0
//# NEW <{sSYS_GETPRIORITY}> 1
//? Consts["/syscall/ETH_P_ATALK"] = syscall.ETH_P_ATALK
//# OLD <{sETH_P_ATALK}> 0
//# NEW <{sETH_P_ATALK}> 1
//? Consts["/syscall/IFA_ANYCAST"] = syscall.IFA_ANYCAST
//# OLD <{sIFA_ANYCAST}> 0
//# NEW <{sIFA_ANYCAST}> 1
//? Consts["/syscall/IN_ACCESS"] = syscall.IN_ACCESS
//# OLD <{sIN_ACCESS}> 0
//# NEW <{sIN_ACCESS}> 1
//? Consts["/syscall/RT_SCOPE_NOWHERE"] = syscall.RT_SCOPE_NOWHERE
//# OLD <{sRT_SCOPE_NOWHERE}> 0
//# NEW <{sRT_SCOPE_NOWHERE}> 1
//? Consts["/syscall/ETH_P_IEEE802154"] = syscall.ETH_P_IEEE802154
//# OLD <{sETH_P_IEEE802154}> 0
//# NEW <{sETH_P_IEEE802154}> 1
//? Consts["/syscall/SizeofIfInfomsg"] = syscall.SizeofIfInfomsg
//# OLD <{sSizeofIfInfomsg}> 0
//# NEW <{sSizeofIfInfomsg}> 1
//? Consts["/syscall/RTA_FLOW"] = syscall.RTA_FLOW
//# OLD <{sRTA_FLOW}> 0
//# NEW <{sRTA_FLOW}> 1
//? Consts["/syscall/EBADMSG"] = syscall.EBADMSG
//# OLD <{sEBADMSG}> 0
//# NEW <{sEBADMSG}> 1
//? Consts["/syscall/TIOCPKT"] = syscall.TIOCPKT
//# OLD <{sTIOCPKT}> 0
//# NEW <{sTIOCPKT}> 1
//? Consts["/syscall/IPV6_RTHDRDSTOPTS"] = syscall.IPV6_RTHDRDSTOPTS
//# OLD <{sIPV6_RTHDRDSTOPTS}> 0
//# NEW <{sIPV6_RTHDRDSTOPTS}> 1
//? Consts["/syscall/RTM_NEWTFILTER"] = syscall.RTM_NEWTFILTER
//# OLD <{sRTM_NEWTFILTER}> 0
//# NEW <{sRTM_NEWTFILTER}> 1
//? Consts["/syscall/ETH_P_DNA_DL"] = syscall.ETH_P_DNA_DL
//# OLD <{sETH_P_DNA_DL}> 0
//# NEW <{sETH_P_DNA_DL}> 1
//? Consts["/syscall/SYS_WAIT4"] = syscall.SYS_WAIT4
//# OLD <{sSYS_WAIT4}> 0
//# NEW <{sSYS_WAIT4}> 1
//? Consts["/syscall/SYS_LCHOWN"] = syscall.SYS_LCHOWN
//# OLD <{sSYS_LCHOWN}> 0
//# NEW <{sSYS_LCHOWN}> 1
//? Consts["/syscall/SYS_MQ_NOTIFY"] = syscall.SYS_MQ_NOTIFY
//# OLD <{sSYS_MQ_NOTIFY}> 0
//# NEW <{sSYS_MQ_NOTIFY}> 1
//? Consts["/syscall/ARPHRD_IEEE80211_RADIOTAP"] = syscall.ARPHRD_IEEE80211_RADIOTAP
//# OLD <{sARPHRD_IEEE80211_RADIOTAP}> 0
//# NEW <{sARPHRD_IEEE80211_RADIOTAP}> 1
//? Consts["/syscall/ICRNL"] = syscall.ICRNL
//# OLD <{sICRNL}> 0
//# NEW <{sICRNL}> 1
//? Consts["/syscall/RTM_GETTFILTER"] = syscall.RTM_GETTFILTER
//# OLD <{sRTM_GETTFILTER}> 0
//# NEW <{sRTM_GETTFILTER}> 1
//? Consts["/syscall/TIOCSRS485"] = syscall.TIOCSRS485
//# OLD <{sTIOCSRS485}> 0
//# NEW <{sTIOCSRS485}> 1
//? Consts["/syscall/RTM_DELADDR"] = syscall.RTM_DELADDR
//# OLD <{sRTM_DELADDR}> 0
//# NEW <{sRTM_DELADDR}> 1
//? Consts["/syscall/S_IFMT"] = syscall.S_IFMT
//# OLD <{sS_IFMT}> 0
//# NEW <{sS_IFMT}> 1
//? Consts["/syscall/IFA_F_OPTIMISTIC"] = syscall.IFA_F_OPTIMISTIC
//# OLD <{sIFA_F_OPTIMISTIC}> 0
//# NEW <{sIFA_F_OPTIMISTIC}> 1
//? Consts["/syscall/PR_GET_SECUREBITS"] = syscall.PR_GET_SECUREBITS
//# OLD <{sPR_GET_SECUREBITS}> 0
//# NEW <{sPR_GET_SECUREBITS}> 1
//? Consts["/syscall/ARPHRD_INFINIBAND"] = syscall.ARPHRD_INFINIBAND
//# OLD <{sARPHRD_INFINIBAND}> 0
//# NEW <{sARPHRD_INFINIBAND}> 1
//? Consts["/syscall/TIOCM_CAR"] = syscall.TIOCM_CAR
//# OLD <{sTIOCM_CAR}> 0
//# NEW <{sTIOCM_CAR}> 1
//? Consts["/syscall/SO_PEERSEC"] = syscall.SO_PEERSEC
//# OLD <{sSO_PEERSEC}> 0
//# NEW <{sSO_PEERSEC}> 1
//? Consts["/syscall/ENAMETOOLONG"] = syscall.ENAMETOOLONG
//# OLD <{sENAMETOOLONG}> 0
//# NEW <{sENAMETOOLONG}> 1
Types["/syscall/Utimbuf"] = new(*syscall.Utimbuf)
//# OLD <{sUtimbuf}> 0
//# NEW <{sUtimbuf}> 1
Funcs["/syscall/Unmount"] = syscall.Unmount
//# OLD <{sUnmount}> 0
//# NEW <{sUnmount}> 1
//? Consts["/syscall/WUNTRACED"] = syscall.WUNTRACED
//# OLD <{sWUNTRACED}> 0
//# NEW <{sWUNTRACED}> 1
//? Consts["/syscall/SYS_QUOTACTL"] = syscall.SYS_QUOTACTL
//# OLD <{sSYS_QUOTACTL}> 0
//# NEW <{sSYS_QUOTACTL}> 1
//? Consts["/syscall/IN_CLASSB_NET"] = syscall.IN_CLASSB_NET
//# OLD <{sIN_CLASSB_NET}> 0
//# NEW <{sIN_CLASSB_NET}> 1
//? Consts["/syscall/O_NDELAY"] = syscall.O_NDELAY
//# OLD <{sO_NDELAY}> 0
//# NEW <{sO_NDELAY}> 1
//? Consts["/syscall/SIOCGIFPFLAGS"] = syscall.SIOCGIFPFLAGS
//# OLD <{sSIOCGIFPFLAGS}> 0
//# NEW <{sSIOCGIFPFLAGS}> 1
//? Consts["/syscall/SIGKILL"] = syscall.SIGKILL
//# OLD <{sSIGKILL}> 0
//# NEW <{sSIGKILL}> 1
//? Consts["/syscall/ETH_P_DEC"] = syscall.ETH_P_DEC
//# OLD <{sETH_P_DEC}> 0
//# NEW <{sETH_P_DEC}> 1
//? Consts["/syscall/SYS_LSETXATTR"] = syscall.SYS_LSETXATTR
//# OLD <{sSYS_LSETXATTR}> 0
//# NEW <{sSYS_LSETXATTR}> 1
//? Consts["/syscall/IXON"] = syscall.IXON
//# OLD <{sIXON}> 0
//# NEW <{sIXON}> 1
//? Consts["/syscall/FLUSHO"] = syscall.FLUSHO
//# OLD <{sFLUSHO}> 0
//# NEW <{sFLUSHO}> 1
Funcs["/syscall/Renameat"] = syscall.Renameat
//# OLD <{sRenameat}> 0
//# NEW <{sRenameat}> 1
//? Consts["/syscall/IFLA_QDISC"] = syscall.IFLA_QDISC
//# OLD <{sIFLA_QDISC}> 0
//# NEW <{sIFLA_QDISC}> 1
//? Consts["/syscall/PTRACE_SYSEMU"] = syscall.PTRACE_SYSEMU
//# OLD <{sPTRACE_SYSEMU}> 0
//# NEW <{sPTRACE_SYSEMU}> 1
//? Consts["/syscall/AF_IEEE802154"] = syscall.AF_IEEE802154
//# OLD <{sAF_IEEE802154}> 0
//# NEW <{sAF_IEEE802154}> 1
//? Consts["/syscall/BPF_JSET"] = syscall.BPF_JSET
//# OLD <{sBPF_JSET}> 0
//# NEW <{sBPF_JSET}> 1
//? Consts["/syscall/SizeofLinger"] = syscall.SizeofLinger
//# OLD <{sSizeofLinger}> 0
//# NEW <{sSizeofLinger}> 1
//? Consts["/syscall/ELOOP"] = syscall.ELOOP
//# OLD <{sELOOP}> 0
//# NEW <{sELOOP}> 1
//? Consts["/syscall/SIGSTKFLT"] = syscall.SIGSTKFLT
//# OLD <{sSIGSTKFLT}> 0
//# NEW <{sSIGSTKFLT}> 1
//? Consts["/syscall/SYS_QUERY_MODULE"] = syscall.SYS_QUERY_MODULE
//# OLD <{sSYS_QUERY_MODULE}> 0
//# NEW <{sSYS_QUERY_MODULE}> 1
//? Consts["/syscall/PACKET_ADD_MEMBERSHIP"] = syscall.PACKET_ADD_MEMBERSHIP
//# OLD <{sPACKET_ADD_MEMBERSHIP}> 0
//# NEW <{sPACKET_ADD_MEMBERSHIP}> 1
//? Consts["/syscall/IN_ATTRIB"] = syscall.IN_ATTRIB
//# OLD <{sIN_ATTRIB}> 0
//# NEW <{sIN_ATTRIB}> 1
//? Consts["/syscall/NLM_F_ECHO"] = syscall.NLM_F_ECHO
//# OLD <{sNLM_F_ECHO}> 0
//# NEW <{sNLM_F_ECHO}> 1
//? Consts["/syscall/SYS_TIME"] = syscall.SYS_TIME
//# OLD <{sSYS_TIME}> 0
//# NEW <{sSYS_TIME}> 1
//? Consts["/syscall/AF_ROSE"] = syscall.AF_ROSE
//# OLD <{sAF_ROSE}> 0
//# NEW <{sAF_ROSE}> 1
Types["/syscall/Rusage"] = new(*syscall.Rusage)
//# OLD <{sRusage}> 0
//# NEW <{sRusage}> 1
//? Consts["/syscall/MS_KERNMOUNT"] = syscall.MS_KERNMOUNT
//# OLD <{sMS_KERNMOUNT}> 0
//# NEW <{sMS_KERNMOUNT}> 1
//? Consts["/syscall/SYS_READLINKAT"] = syscall.SYS_READLINKAT
//# OLD <{sSYS_READLINKAT}> 0
//# NEW <{sSYS_READLINKAT}> 1
//? Consts["/syscall/SYS_INOTIFY_ADD_WATCH"] = syscall.SYS_INOTIFY_ADD_WATCH
//# OLD <{sSYS_INOTIFY_ADD_WATCH}> 0
//# NEW <{sSYS_INOTIFY_ADD_WATCH}> 1
//? Consts["/syscall/SizeofInet6Pktinfo"] = syscall.SizeofInet6Pktinfo
//# OLD <{sSizeofInet6Pktinfo}> 0
//# NEW <{sSizeofInet6Pktinfo}> 1
//? Consts["/syscall/EBFONT"] = syscall.EBFONT
//# OLD <{sEBFONT}> 0
//# NEW <{sEBFONT}> 1
//? Consts["/syscall/ARPHRD_PIMREG"] = syscall.ARPHRD_PIMREG
//# OLD <{sARPHRD_PIMREG}> 0
//# NEW <{sARPHRD_PIMREG}> 1
//? Consts["/syscall/SO_TIMESTAMP"] = syscall.SO_TIMESTAMP
//# OLD <{sSO_TIMESTAMP}> 0
//# NEW <{sSO_TIMESTAMP}> 1
//? Consts["/syscall/EL3RST"] = syscall.EL3RST
//# OLD <{sEL3RST}> 0
//# NEW <{sEL3RST}> 1
//? Consts["/syscall/IPV6_ADDRFORM"] = syscall.IPV6_ADDRFORM
//# OLD <{sIPV6_ADDRFORM}> 0
//# NEW <{sIPV6_ADDRFORM}> 1
//? Consts["/syscall/SOCK_SEQPACKET"] = syscall.SOCK_SEQPACKET
//# OLD <{sSOCK_SEQPACKET}> 0
//# NEW <{sSOCK_SEQPACKET}> 1
//? Consts["/syscall/RTAX_RTT"] = syscall.RTAX_RTT
//# OLD <{sRTAX_RTT}> 0
//# NEW <{sRTAX_RTT}> 1
//? Consts["/syscall/SOL_AAL"] = syscall.SOL_AAL
//# OLD <{sSOL_AAL}> 0
//# NEW <{sSOL_AAL}> 1
//? Consts["/syscall/TIOCSWINSZ"] = syscall.TIOCSWINSZ
//# OLD <{sTIOCSWINSZ}> 0
//# NEW <{sTIOCSWINSZ}> 1
//? Consts["/syscall/IPV6_RECVRTHDR"] = syscall.IPV6_RECVRTHDR
//# OLD <{sIPV6_RECVRTHDR}> 0
//# NEW <{sIPV6_RECVRTHDR}> 1
//? Consts["/syscall/PR_GET_FPEXC"] = syscall.PR_GET_FPEXC
//# OLD <{sPR_GET_FPEXC}> 0
//# NEW <{sPR_GET_FPEXC}> 1
//? Consts["/syscall/O_DIRECT"] = syscall.O_DIRECT
//# OLD <{sO_DIRECT}> 0
//# NEW <{sO_DIRECT}> 1
//? Consts["/syscall/BPF_IND"] = syscall.BPF_IND
//# OLD <{sBPF_IND}> 0
//# NEW <{sBPF_IND}> 1
//? Consts["/syscall/IN_DELETE_SELF"] = syscall.IN_DELETE_SELF
//# OLD <{sIN_DELETE_SELF}> 0
//# NEW <{sIN_DELETE_SELF}> 1
//? Consts["/syscall/PR_MCE_KILL"] = syscall.PR_MCE_KILL
//# OLD <{sPR_MCE_KILL}> 0
//# NEW <{sPR_MCE_KILL}> 1
//? Consts["/syscall/MAP_ANON"] = syscall.MAP_ANON
//# OLD <{sMAP_ANON}> 0
//# NEW <{sMAP_ANON}> 1
//? Consts["/syscall/SYS_IOPL"] = syscall.SYS_IOPL
//# OLD <{sSYS_IOPL}> 0
//# NEW <{sSYS_IOPL}> 1
//? Consts["/syscall/SIOCSIFSLAVE"] = syscall.SIOCSIFSLAVE
//# OLD <{sSIOCSIFSLAVE}> 0
//# NEW <{sSIOCSIFSLAVE}> 1
//? Consts["/syscall/ARPHRD_METRICOM"] = syscall.ARPHRD_METRICOM
//# OLD <{sARPHRD_METRICOM}> 0
//# NEW <{sARPHRD_METRICOM}> 1
Types["/syscall/IPv6Mreq"] = new(*syscall.IPv6Mreq)
//# OLD <{sIPv6Mreq}> 0
//# NEW <{sIPv6Mreq}> 1
//? Consts["/syscall/SYS_MBIND"] = syscall.SYS_MBIND
//# OLD <{sSYS_MBIND}> 0
//# NEW <{sSYS_MBIND}> 1
//? Consts["/syscall/ETH_P_AOE"] = syscall.ETH_P_AOE
//# OLD <{sETH_P_AOE}> 0
//# NEW <{sETH_P_AOE}> 1
//? Consts["/syscall/SO_PASSCRED"] = syscall.SO_PASSCRED
//# OLD <{sSO_PASSCRED}> 0
//# NEW <{sSO_PASSCRED}> 1
//? Consts["/syscall/SizeofIPv6Mreq"] = syscall.SizeofIPv6Mreq
//# OLD <{sSizeofIPv6Mreq}> 0
//# NEW <{sSizeofIPv6Mreq}> 1
//? Consts["/syscall/MAP_SHARED"] = syscall.MAP_SHARED
//# OLD <{sMAP_SHARED}> 0
//# NEW <{sMAP_SHARED}> 1
//? Consts["/syscall/ENOMEM"] = syscall.ENOMEM
//# OLD <{sENOMEM}> 0
//# NEW <{sENOMEM}> 1
//? Consts["/syscall/EUNATCH"] = syscall.EUNATCH
//# OLD <{sEUNATCH}> 0
//# NEW <{sEUNATCH}> 1
//? Consts["/syscall/IPV6_MULTICAST_IF"] = syscall.IPV6_MULTICAST_IF
//# OLD <{sIPV6_MULTICAST_IF}> 0
//# NEW <{sIPV6_MULTICAST_IF}> 1
Funcs["/syscall/Dup"] = syscall.Dup
//# OLD <{sDup}> 0
//# NEW <{sDup}> 1
//? Consts["/syscall/SYS_INOTIFY_INIT"] = syscall.SYS_INOTIFY_INIT
//# OLD <{sSYS_INOTIFY_INIT}> 0
//# NEW <{sSYS_INOTIFY_INIT}> 1
//? Consts["/syscall/SYS_FALLOCATE"] = syscall.SYS_FALLOCATE
//# OLD <{sSYS_FALLOCATE}> 0
//# NEW <{sSYS_FALLOCATE}> 1
//? Consts["/syscall/ECHOE"] = syscall.ECHOE
//# OLD <{sECHOE}> 0
//# NEW <{sECHOE}> 1
//? Consts["/syscall/AF_LLC"] = syscall.AF_LLC
//# OLD <{sAF_LLC}> 0
//# NEW <{sAF_LLC}> 1
//? Consts["/syscall/IN_DONT_FOLLOW"] = syscall.IN_DONT_FOLLOW
//# OLD <{sIN_DONT_FOLLOW}> 0
//# NEW <{sIN_DONT_FOLLOW}> 1
Types["/syscall/RawSockaddr"] = new(*syscall.RawSockaddr)
//# OLD <{sRawSockaddr}> 0
//# NEW <{sRawSockaddr}> 1
//? Consts["/syscall/IP_MULTICAST_LOOP"] = syscall.IP_MULTICAST_LOOP
//# OLD <{sIP_MULTICAST_LOOP}> 0
//# NEW <{sIP_MULTICAST_LOOP}> 1
//? Consts["/syscall/SO_DETACH_FILTER"] = syscall.SO_DETACH_FILTER
//# OLD <{sSO_DETACH_FILTER}> 0
//# NEW <{sSO_DETACH_FILTER}> 1
//? Consts["/syscall/B1500000"] = syscall.B1500000
//# OLD <{sB1500000}> 0
//# NEW <{sB1500000}> 1
//? Consts["/syscall/IPV6_RTHDR"] = syscall.IPV6_RTHDR
//# OLD <{sIPV6_RTHDR}> 0
//# NEW <{sIPV6_RTHDR}> 1
Types["/syscall/ProcAttr"] = new(*syscall.ProcAttr)
//# OLD <{sProcAttr}> 0
//# NEW <{sProcAttr}> 1
Funcs["/syscall/Getpeername"] = syscall.Getpeername
//# OLD <{sGetpeername}> 0
//# NEW <{sGetpeername}> 1
//? Consts["/syscall/TIOCPKT_DOSTOP"] = syscall.TIOCPKT_DOSTOP
//# OLD <{sTIOCPKT_DOSTOP}> 0
//# NEW <{sTIOCPKT_DOSTOP}> 1
//? Consts["/syscall/SYS_RT_SIGSUSPEND"] = syscall.SYS_RT_SIGSUSPEND
//# OLD <{sSYS_RT_SIGSUSPEND}> 0
//# NEW <{sSYS_RT_SIGSUSPEND}> 1
//? Consts["/syscall/PR_GET_FPEMU"] = syscall.PR_GET_FPEMU
//# OLD <{sPR_GET_FPEMU}> 0
//# NEW <{sPR_GET_FPEMU}> 1
//? Consts["/syscall/SO_OOBINLINE"] = syscall.SO_OOBINLINE
//# OLD <{sSO_OOBINLINE}> 0
//# NEW <{sSO_OOBINLINE}> 1
//? Consts["/syscall/IPV6_RXHOPOPTS"] = syscall.IPV6_RXHOPOPTS
//# OLD <{sIPV6_RXHOPOPTS}> 0
//# NEW <{sIPV6_RXHOPOPTS}> 1
//? Consts["/syscall/NETLINK_INET_DIAG"] = syscall.NETLINK_INET_DIAG
//# OLD <{sNETLINK_INET_DIAG}> 0
//# NEW <{sNETLINK_INET_DIAG}> 1
//? Consts["/syscall/PTRACE_CONT"] = syscall.PTRACE_CONT
//# OLD <{sPTRACE_CONT}> 0
//# NEW <{sPTRACE_CONT}> 1
//? Consts["/syscall/SYS_PREADV"] = syscall.SYS_PREADV
//# OLD <{sSYS_PREADV}> 0
//# NEW <{sSYS_PREADV}> 1
//? Consts["/syscall/S_IFREG"] = syscall.S_IFREG
//# OLD <{sS_IFREG}> 0
//# NEW <{sS_IFREG}> 1
//? Consts["/syscall/RTM_SETDCB"] = syscall.RTM_SETDCB
//# OLD <{sRTM_SETDCB}> 0
//# NEW <{sRTM_SETDCB}> 1
//? Consts["/syscall/SYS_MSGRCV"] = syscall.SYS_MSGRCV
//# OLD <{sSYS_MSGRCV}> 0
//# NEW <{sSYS_MSGRCV}> 1
//? Consts["/syscall/MAP_PRIVATE"] = syscall.MAP_PRIVATE
//# OLD <{sMAP_PRIVATE}> 0
//# NEW <{sMAP_PRIVATE}> 1
//? Consts["/syscall/SO_SECURITY_ENCRYPTION_NETWORK"] = syscall.SO_SECURITY_ENCRYPTION_NETWORK
//# OLD <{sSO_SECURITY_ENCRYPTION_NETWORK}> 0
//# NEW <{sSO_SECURITY_ENCRYPTION_NETWORK}> 1
//? Consts["/syscall/ARPHRD_PRONET"] = syscall.ARPHRD_PRONET
//# OLD <{sARPHRD_PRONET}> 0
//# NEW <{sARPHRD_PRONET}> 1
//? Consts["/syscall/PTRACE_EVENT_EXIT"] = syscall.PTRACE_EVENT_EXIT
//# OLD <{sPTRACE_EVENT_EXIT}> 0
//# NEW <{sPTRACE_EVENT_EXIT}> 1
//? Consts["/syscall/TIOCPKT_DATA"] = syscall.TIOCPKT_DATA
//# OLD <{sTIOCPKT_DATA}> 0
//# NEW <{sTIOCPKT_DATA}> 1
//? Consts["/syscall/SYS_WRITE"] = syscall.SYS_WRITE
//# OLD <{sSYS_WRITE}> 0
//# NEW <{sSYS_WRITE}> 1
//? Consts["/syscall/EOVERFLOW"] = syscall.EOVERFLOW
//# OLD <{sEOVERFLOW}> 0
//# NEW <{sEOVERFLOW}> 1
//? Consts["/syscall/MAP_FIXED"] = syscall.MAP_FIXED
//# OLD <{sMAP_FIXED}> 0
//# NEW <{sMAP_FIXED}> 1
//? Consts["/syscall/S_IRWXO"] = syscall.S_IRWXO
//# OLD <{sS_IRWXO}> 0
//# NEW <{sS_IRWXO}> 1
Funcs["/syscall/Fstatfs"] = syscall.Fstatfs
//# OLD <{sFstatfs}> 0
//# NEW <{sFstatfs}> 1
//? Consts["/syscall/ENOANO"] = syscall.ENOANO
//# OLD <{sENOANO}> 0
//# NEW <{sENOANO}> 1
//? Consts["/syscall/EPOLLRDNORM"] = syscall.EPOLLRDNORM
//# OLD <{sEPOLLRDNORM}> 0
//# NEW <{sEPOLLRDNORM}> 1
//? Consts["/syscall/SIGTTIN"] = syscall.SIGTTIN
//# OLD <{sSIGTTIN}> 0
//# NEW <{sSIGTTIN}> 1
//? Consts["/syscall/NETLINK_SELINUX"] = syscall.NETLINK_SELINUX
//# OLD <{sNETLINK_SELINUX}> 0
//# NEW <{sNETLINK_SELINUX}> 1
//? Consts["/syscall/ESHUTDOWN"] = syscall.ESHUTDOWN
//# OLD <{sESHUTDOWN}> 0
//# NEW <{sESHUTDOWN}> 1
//? Consts["/syscall/ETH_P_802_3"] = syscall.ETH_P_802_3
//# OLD <{sETH_P_802_3}> 0
//# NEW <{sETH_P_802_3}> 1
//? Consts["/syscall/RTM_F_NOTIFY"] = syscall.RTM_F_NOTIFY
//# OLD <{sRTM_F_NOTIFY}> 0
//# NEW <{sRTM_F_NOTIFY}> 1
//? Consts["/syscall/ESPIPE"] = syscall.ESPIPE
//# OLD <{sESPIPE}> 0
//# NEW <{sESPIPE}> 1
Funcs["/syscall/CmsgSpace"] = syscall.CmsgSpace
//# OLD <{sCmsgSpace}> 0
//# NEW <{sCmsgSpace}> 1
//? Consts["/syscall/ETH_P_SNAP"] = syscall.ETH_P_SNAP
//# OLD <{sETH_P_SNAP}> 0
//# NEW <{sETH_P_SNAP}> 1
//? Consts["/syscall/ENOTNAM"] = syscall.ENOTNAM
//# OLD <{sENOTNAM}> 0
//# NEW <{sENOTNAM}> 1
//? Consts["/syscall/EMFILE"] = syscall.EMFILE
//# OLD <{sEMFILE}> 0
//# NEW <{sEMFILE}> 1
//? Consts["/syscall/TIOCM_CTS"] = syscall.TIOCM_CTS
//# OLD <{sTIOCM_CTS}> 0
//# NEW <{sTIOCM_CTS}> 1
//? Consts["/syscall/ETH_P_TIPC"] = syscall.ETH_P_TIPC
//# OLD <{sETH_P_TIPC}> 0
//# NEW <{sETH_P_TIPC}> 1
Funcs["/syscall/GetsockoptIPMreqn"] = syscall.GetsockoptIPMreqn
//# OLD <{sGetsockoptIPMreqn}> 0
//# NEW <{sGetsockoptIPMreqn}> 1
//? Consts["/syscall/SYS_STATFS"] = syscall.SYS_STATFS
//# OLD <{sSYS_STATFS}> 0
//# NEW <{sSYS_STATFS}> 1
//? Consts["/syscall/SYS_EPOLL_CREATE1"] = syscall.SYS_EPOLL_CREATE1
//# OLD <{sSYS_EPOLL_CREATE1}> 0
//# NEW <{sSYS_EPOLL_CREATE1}> 1
//? Consts["/syscall/LINUX_REBOOT_CMD_RESTART2"] = syscall.LINUX_REBOOT_CMD_RESTART2
//# OLD <{sLINUX_REBOOT_CMD_RESTART2}> 0
//# NEW <{sLINUX_REBOOT_CMD_RESTART2}> 1
//? Consts["/syscall/TIOCOUTQ"] = syscall.TIOCOUTQ
//# OLD <{sTIOCOUTQ}> 0
//# NEW <{sTIOCOUTQ}> 1
//? Consts["/syscall/IPPROTO_SCTP"] = syscall.IPPROTO_SCTP
//# OLD <{sIPPROTO_SCTP}> 0
//# NEW <{sIPPROTO_SCTP}> 1
//? Consts["/syscall/DT_REG"] = syscall.DT_REG
//# OLD <{sDT_REG}> 0
//# NEW <{sDT_REG}> 1
//? Consts["/syscall/RTF_FLOW"] = syscall.RTF_FLOW
//# OLD <{sRTF_FLOW}> 0
//# NEW <{sRTF_FLOW}> 1
//? Consts["/syscall/NETLINK_BROADCAST_ERROR"] = syscall.NETLINK_BROADCAST_ERROR
//# OLD <{sNETLINK_BROADCAST_ERROR}> 0
//# NEW <{sNETLINK_BROADCAST_ERROR}> 1
//? Consts["/syscall/RTN_NAT"] = syscall.RTN_NAT
//# OLD <{sRTN_NAT}> 0
//# NEW <{sRTN_NAT}> 1
//? Consts["/syscall/SYS_ACCT"] = syscall.SYS_ACCT
//# OLD <{sSYS_ACCT}> 0
//# NEW <{sSYS_ACCT}> 1
Funcs["/syscall/Chown"] = syscall.Chown
//# OLD <{sChown}> 0
//# NEW <{sChown}> 1
//? Consts["/syscall/AF_RXRPC"] = syscall.AF_RXRPC
//# OLD <{sAF_RXRPC}> 0
//# NEW <{sAF_RXRPC}> 1
//? Consts["/syscall/SYS_SENDMSG"] = syscall.SYS_SENDMSG
//# OLD <{sSYS_SENDMSG}> 0
//# NEW <{sSYS_SENDMSG}> 1
//? Consts["/syscall/SOCK_NONBLOCK"] = syscall.SOCK_NONBLOCK
//# OLD <{sSOCK_NONBLOCK}> 0
//# NEW <{sSOCK_NONBLOCK}> 1
//? Consts["/syscall/IFLA_UNSPEC"] = syscall.IFLA_UNSPEC
//# OLD <{sIFLA_UNSPEC}> 0
//# NEW <{sIFLA_UNSPEC}> 1
//? Consts["/syscall/IPPROTO_ESP"] = syscall.IPPROTO_ESP
//# OLD <{sIPPROTO_ESP}> 0
//# NEW <{sIPPROTO_ESP}> 1
//? Consts["/syscall/ETH_P_PPP_SES"] = syscall.ETH_P_PPP_SES
//# OLD <{sETH_P_PPP_SES}> 0
//# NEW <{sETH_P_PPP_SES}> 1
//? Consts["/syscall/SizeofSockFilter"] = syscall.SizeofSockFilter
//# OLD <{sSizeofSockFilter}> 0
//# NEW <{sSizeofSockFilter}> 1
//? Consts["/syscall/ETH_P_FIP"] = syscall.ETH_P_FIP
//# OLD <{sETH_P_FIP}> 0
//# NEW <{sETH_P_FIP}> 1
//? Consts["/syscall/ARPHRD_X25"] = syscall.ARPHRD_X25
//# OLD <{sARPHRD_X25}> 0
//# NEW <{sARPHRD_X25}> 1
//? Consts["/syscall/AF_APPLETALK"] = syscall.AF_APPLETALK
//# OLD <{sAF_APPLETALK}> 0
//# NEW <{sAF_APPLETALK}> 1
//? Consts["/syscall/TCGETS"] = syscall.TCGETS
//# OLD <{sTCGETS}> 0
//# NEW <{sTCGETS}> 1
//? Consts["/syscall/RTF_LOCAL"] = syscall.RTF_LOCAL
//# OLD <{sRTF_LOCAL}> 0
//# NEW <{sRTF_LOCAL}> 1
//? Consts["/syscall/RTNH_ALIGNTO"] = syscall.RTNH_ALIGNTO
//# OLD <{sRTNH_ALIGNTO}> 0
//# NEW <{sRTNH_ALIGNTO}> 1
//? Consts["/syscall/SYS_SETHOSTNAME"] = syscall.SYS_SETHOSTNAME
//# OLD <{sSYS_SETHOSTNAME}> 0
//# NEW <{sSYS_SETHOSTNAME}> 1
//? Consts["/syscall/SYS_SEMOP"] = syscall.SYS_SEMOP
//# OLD <{sSYS_SEMOP}> 0
//# NEW <{sSYS_SEMOP}> 1
//? Consts["/syscall/PTRACE_PEEKDATA"] = syscall.PTRACE_PEEKDATA
//# OLD <{sPTRACE_PEEKDATA}> 0
//# NEW <{sPTRACE_PEEKDATA}> 1
//? Consts["/syscall/SIOCSIFMEM"] = syscall.SIOCSIFMEM
//# OLD <{sSIOCSIFMEM}> 0
//# NEW <{sSIOCSIFMEM}> 1
Funcs["/syscall/ParseNetlinkRouteAttr"] = syscall.ParseNetlinkRouteAttr
//# OLD <{sParseNetlinkRouteAttr}> 0
//# NEW <{sParseNetlinkRouteAttr}> 1
//? Consts["/syscall/IPV6_2292HOPLIMIT"] = syscall.IPV6_2292HOPLIMIT
//# OLD <{sIPV6_2292HOPLIMIT}> 0
//# NEW <{sIPV6_2292HOPLIMIT}> 1
//? Consts["/syscall/EL2HLT"] = syscall.EL2HLT
//# OLD <{sEL2HLT}> 0
//# NEW <{sEL2HLT}> 1
//? Consts["/syscall/SIGABRT"] = syscall.SIGABRT
//# OLD <{sSIGABRT}> 0
//# NEW <{sSIGABRT}> 1
//? Consts["/syscall/NETLINK_FIREWALL"] = syscall.NETLINK_FIREWALL
//# OLD <{sNETLINK_FIREWALL}> 0
//# NEW <{sNETLINK_FIREWALL}> 1
//? Consts["/syscall/AF_CAN"] = syscall.AF_CAN
//# OLD <{sAF_CAN}> 0
//# NEW <{sAF_CAN}> 1
//? Consts["/syscall/S_ISUID"] = syscall.S_ISUID
//# OLD <{sS_ISUID}> 0
//# NEW <{sS_ISUID}> 1
Types["/syscall/IPMreqn"] = new(*syscall.IPMreqn)
//# OLD <{sIPMreqn}> 0
//# NEW <{sIPMreqn}> 1
//? Consts["/syscall/SYS_ALARM"] = syscall.SYS_ALARM
//# OLD <{sSYS_ALARM}> 0
//# NEW <{sSYS_ALARM}> 1
//? Consts["/syscall/ENFILE"] = syscall.ENFILE
//# OLD <{sENFILE}> 0
//# NEW <{sENFILE}> 1
Funcs["/syscall/Sethostname"] = syscall.Sethostname
//# OLD <{sSethostname}> 0
//# NEW <{sSethostname}> 1
//? Consts["/syscall/SOL_RAW"] = syscall.SOL_RAW
//# OLD <{sSOL_RAW}> 0
//# NEW <{sSOL_RAW}> 1
//? Consts["/syscall/RTM_NEWQDISC"] = syscall.RTM_NEWQDISC
//# OLD <{sRTM_NEWQDISC}> 0
//# NEW <{sRTM_NEWQDISC}> 1
//? Consts["/syscall/RTM_MAX"] = syscall.RTM_MAX
//# OLD <{sRTM_MAX}> 0
//# NEW <{sRTM_MAX}> 1
//? Consts["/syscall/SYS_MKNODAT"] = syscall.SYS_MKNODAT
//# OLD <{sSYS_MKNODAT}> 0
//# NEW <{sSYS_MKNODAT}> 1
//? Consts["/syscall/IPV6_RTHDR_STRICT"] = syscall.IPV6_RTHDR_STRICT
//# OLD <{sIPV6_RTHDR_STRICT}> 0
//# NEW <{sIPV6_RTHDR_STRICT}> 1
//? Consts["/syscall/RTPROT_GATED"] = syscall.RTPROT_GATED
//# OLD <{sRTPROT_GATED}> 0
//# NEW <{sRTPROT_GATED}> 1
Funcs["/syscall/Setresuid"] = syscall.Setresuid
//# OLD <{sSetresuid}> 0
//# NEW <{sSetresuid}> 1
//? Consts["/syscall/B1800"] = syscall.B1800
//# OLD <{sB1800}> 0
//# NEW <{sB1800}> 1
//? Consts["/syscall/SYS_PAUSE"] = syscall.SYS_PAUSE
//# OLD <{sSYS_PAUSE}> 0
//# NEW <{sSYS_PAUSE}> 1
Funcs["/syscall/PtraceDetach"] = syscall.PtraceDetach
//# OLD <{sPtraceDetach}> 0
//# NEW <{sPtraceDetach}> 1
//? Consts["/syscall/RTAX_FEATURES"] = syscall.RTAX_FEATURES
//# OLD <{sRTAX_FEATURES}> 0
//# NEW <{sRTAX_FEATURES}> 1
//? Consts["/syscall/SYS_READ"] = syscall.SYS_READ
//# OLD <{sSYS_READ}> 0
//# NEW <{sSYS_READ}> 1
//? Consts["/syscall/SYS_SCHED_YIELD"] = syscall.SYS_SCHED_YIELD
//# OLD <{sSYS_SCHED_YIELD}> 0
//# NEW <{sSYS_SCHED_YIELD}> 1
//? Consts["/syscall/RTA_CACHEINFO"] = syscall.RTA_CACHEINFO
//# OLD <{sRTA_CACHEINFO}> 0
//# NEW <{sRTA_CACHEINFO}> 1
//? Consts["/syscall/IFF_DYNAMIC"] = syscall.IFF_DYNAMIC
//# OLD <{sIFF_DYNAMIC}> 0
//# NEW <{sIFF_DYNAMIC}> 1
//? Consts["/syscall/RTAX_MTU"] = syscall.RTAX_MTU
//# OLD <{sRTAX_MTU}> 0
//# NEW <{sRTAX_MTU}> 1
//? Consts["/syscall/ImplementsGetwd"] = syscall.ImplementsGetwd
//# OLD <{sImplementsGetwd}> 0
//# NEW <{sImplementsGetwd}> 1
//? Consts["/syscall/PR_SET_TSC"] = syscall.PR_SET_TSC
//# OLD <{sPR_SET_TSC}> 0
//# NEW <{sPR_SET_TSC}> 1
Funcs["/syscall/StringByteSlice"] = syscall.StringByteSlice
//# OLD <{sStringByteSlice}> 0
//# NEW <{sStringByteSlice}> 1
//? Consts["/syscall/SYS_KILL"] = syscall.SYS_KILL
//# OLD <{sSYS_KILL}> 0
//# NEW <{sSYS_KILL}> 1
//? Consts["/syscall/TIOCSERGETLSR"] = syscall.TIOCSERGETLSR
//# OLD <{sTIOCSERGETLSR}> 0
//# NEW <{sTIOCSERGETLSR}> 1
//? Consts["/syscall/TCP_CONGESTION"] = syscall.TCP_CONGESTION
//# OLD <{sTCP_CONGESTION}> 0
//# NEW <{sTCP_CONGESTION}> 1
Funcs["/syscall/Lchown"] = syscall.Lchown
//# OLD <{sLchown}> 0
//# NEW <{sLchown}> 1
//? Consts["/syscall/SIOCSIFENCAP"] = syscall.SIOCSIFENCAP
//# OLD <{sSIOCSIFENCAP}> 0
//# NEW <{sSIOCSIFENCAP}> 1
//? Consts["/syscall/ETH_P_WAN_PPP"] = syscall.ETH_P_WAN_PPP
//# OLD <{sETH_P_WAN_PPP}> 0
//# NEW <{sETH_P_WAN_PPP}> 1
//? Consts["/syscall/TIOCMSET"] = syscall.TIOCMSET
//# OLD <{sTIOCMSET}> 0
//# NEW <{sTIOCMSET}> 1
//? Consts["/syscall/NETLINK_ISCSI"] = syscall.NETLINK_ISCSI
//# OLD <{sNETLINK_ISCSI}> 0
//# NEW <{sNETLINK_ISCSI}> 1
//? Consts["/syscall/SizeofRtAttr"] = syscall.SizeofRtAttr
//# OLD <{sSizeofRtAttr}> 0
//# NEW <{sSizeofRtAttr}> 1
Funcs["/syscall/Sendfile"] = syscall.Sendfile
//# OLD <{sSendfile}> 0
//# NEW <{sSendfile}> 1
//? Consts["/syscall/F_NOTIFY"] = syscall.F_NOTIFY
//# OLD <{sF_NOTIFY}> 0
//# NEW <{sF_NOTIFY}> 1
//? Consts["/syscall/RT_TABLE_COMPAT"] = syscall.RT_TABLE_COMPAT
//# OLD <{sRT_TABLE_COMPAT}> 0
//# NEW <{sRT_TABLE_COMPAT}> 1
//? Consts["/syscall/MAP_ANONYMOUS"] = syscall.MAP_ANONYMOUS
//# OLD <{sMAP_ANONYMOUS}> 0
//# NEW <{sMAP_ANONYMOUS}> 1
//? Consts["/syscall/NETLINK_DROP_MEMBERSHIP"] = syscall.NETLINK_DROP_MEMBERSHIP
//# OLD <{sNETLINK_DROP_MEMBERSHIP}> 0
//# NEW <{sNETLINK_DROP_MEMBERSHIP}> 1
//? Consts["/syscall/PTRACE_SETFPREGS"] = syscall.PTRACE_SETFPREGS
//# OLD <{sPTRACE_SETFPREGS}> 0
//# NEW <{sPTRACE_SETFPREGS}> 1
//? Consts["/syscall/SYS_GETPPID"] = syscall.SYS_GETPPID
//# OLD <{sSYS_GETPPID}> 0
//# NEW <{sSYS_GETPPID}> 1
//? Consts["/syscall/SIGIO"] = syscall.SIGIO
//# OLD <{sSIGIO}> 0
//# NEW <{sSIGIO}> 1
//? Consts["/syscall/SYS_MADVISE"] = syscall.SYS_MADVISE
//# OLD <{sSYS_MADVISE}> 0
//# NEW <{sSYS_MADVISE}> 1
//? Consts["/syscall/WORDSIZE"] = syscall.WORDSIZE
//# OLD <{sWORDSIZE}> 0
//# NEW <{sWORDSIZE}> 1
//? Consts["/syscall/RLIMIT_DATA"] = syscall.RLIMIT_DATA
//# OLD <{sRLIMIT_DATA}> 0
//# NEW <{sRLIMIT_DATA}> 1
//? Consts["/syscall/S_IRGRP"] = syscall.S_IRGRP
//# OLD <{sS_IRGRP}> 0
//# NEW <{sS_IRGRP}> 1
//? Consts["/syscall/F_EXLCK"] = syscall.F_EXLCK
//# OLD <{sF_EXLCK}> 0
//# NEW <{sF_EXLCK}> 1
Funcs["/syscall/NsecToTimeval"] = syscall.NsecToTimeval
//# OLD <{sNsecToTimeval}> 0
//# NEW <{sNsecToTimeval}> 1
Funcs["/syscall/Mkdir"] = syscall.Mkdir
//# OLD <{sMkdir}> 0
//# NEW <{sMkdir}> 1
//? Consts["/syscall/BPF_B"] = syscall.BPF_B
//# OLD <{sBPF_B}> 0
//# NEW <{sBPF_B}> 1
Funcs["/syscall/Close"] = syscall.Close
//# OLD <{sClose}> 0
//# NEW <{sClose}> 1
//? Consts["/syscall/RTF_ADDRCLASSMASK"] = syscall.RTF_ADDRCLASSMASK
//# OLD <{sRTF_ADDRCLASSMASK}> 0
//# NEW <{sRTF_ADDRCLASSMASK}> 1
//? Consts["/syscall/ONOCR"] = syscall.ONOCR
//# OLD <{sONOCR}> 0
//# NEW <{sONOCR}> 1
Funcs["/syscall/Statfs"] = syscall.Statfs
//# OLD <{sStatfs}> 0
//# NEW <{sStatfs}> 1
//? Consts["/syscall/IFLA_PROTINFO"] = syscall.IFLA_PROTINFO
//# OLD <{sIFLA_PROTINFO}> 0
//# NEW <{sIFLA_PROTINFO}> 1
//? Consts["/syscall/SYS_IO_SETUP"] = syscall.SYS_IO_SETUP
//# OLD <{sSYS_IO_SETUP}> 0
//# NEW <{sSYS_IO_SETUP}> 1
Funcs["/syscall/PtraceSetOptions"] = syscall.PtraceSetOptions
//# OLD <{sPtraceSetOptions}> 0
//# NEW <{sPtraceSetOptions}> 1
Funcs["/syscall/Fdatasync"] = syscall.Fdatasync
//# OLD <{sFdatasync}> 0
//# NEW <{sFdatasync}> 1
//? Consts["/syscall/TIOCPKT_START"] = syscall.TIOCPKT_START
//# OLD <{sTIOCPKT_START}> 0
//# NEW <{sTIOCPKT_START}> 1
Funcs["/syscall/SetsockoptLinger"] = syscall.SetsockoptLinger
//# OLD <{sSetsockoptLinger}> 0
//# NEW <{sSetsockoptLinger}> 1
//? Consts["/syscall/VLNEXT"] = syscall.VLNEXT
//# OLD <{sVLNEXT}> 0
//# NEW <{sVLNEXT}> 1
//? Consts["/syscall/IFA_F_TEMPORARY"] = syscall.IFA_F_TEMPORARY
//# OLD <{sIFA_F_TEMPORARY}> 0
//# NEW <{sIFA_F_TEMPORARY}> 1
//? Consts["/syscall/F_LOCK"] = syscall.F_LOCK
//# OLD <{sF_LOCK}> 0
//# NEW <{sF_LOCK}> 1
//? Consts["/syscall/B19200"] = syscall.B19200
//# OLD <{sB19200}> 0
//# NEW <{sB19200}> 1
Funcs["/syscall/StringBytePtr"] = syscall.StringBytePtr
//# OLD <{sStringBytePtr}> 0
//# NEW <{sStringBytePtr}> 1
//? Consts["/syscall/BPF_X"] = syscall.BPF_X
//# OLD <{sBPF_X}> 0
//# NEW <{sBPF_X}> 1
//? Consts["/syscall/RTM_GETADDR"] = syscall.RTM_GETADDR
//# OLD <{sRTM_GETADDR}> 0
//# NEW <{sRTM_GETADDR}> 1
//? Consts["/syscall/EPIPE"] = syscall.EPIPE
//# OLD <{sEPIPE}> 0
//# NEW <{sEPIPE}> 1
//? Consts["/syscall/ARPHRD_IPGRE"] = syscall.ARPHRD_IPGRE
//# OLD <{sARPHRD_IPGRE}> 0
//# NEW <{sARPHRD_IPGRE}> 1
//? Consts["/syscall/ARPHRD_AX25"] = syscall.ARPHRD_AX25
//# OLD <{sARPHRD_AX25}> 0
//# NEW <{sARPHRD_AX25}> 1
//? Consts["/syscall/SO_DOMAIN"] = syscall.SO_DOMAIN
//# OLD <{sSO_DOMAIN}> 0
//# NEW <{sSO_DOMAIN}> 1
//? Consts["/syscall/MSG_TRUNC"] = syscall.MSG_TRUNC
//# OLD <{sMSG_TRUNC}> 0
//# NEW <{sMSG_TRUNC}> 1
//? Consts["/syscall/SYS_MQ_TIMEDSEND"] = syscall.SYS_MQ_TIMEDSEND
//# OLD <{sSYS_MQ_TIMEDSEND}> 0
//# NEW <{sSYS_MQ_TIMEDSEND}> 1
//? Consts["/syscall/PTRACE_GETREGSET"] = syscall.PTRACE_GETREGSET
//# OLD <{sPTRACE_GETREGSET}> 0
//# NEW <{sPTRACE_GETREGSET}> 1
//? Consts["/syscall/IFF_ALLMULTI"] = syscall.IFF_ALLMULTI
//# OLD <{sIFF_ALLMULTI}> 0
//# NEW <{sIFF_ALLMULTI}> 1
//? Consts["/syscall/AF_PHONET"] = syscall.AF_PHONET
//# OLD <{sAF_PHONET}> 0
//# NEW <{sAF_PHONET}> 1
//? Consts["/syscall/RTPROT_UNSPEC"] = syscall.RTPROT_UNSPEC
//# OLD <{sRTPROT_UNSPEC}> 0
//# NEW <{sRTPROT_UNSPEC}> 1
//? Consts["/syscall/SYS_MINCORE"] = syscall.SYS_MINCORE
//# OLD <{sSYS_MINCORE}> 0
//# NEW <{sSYS_MINCORE}> 1
Funcs["/syscall/Getpagesize"] = syscall.Getpagesize
//# OLD <{sGetpagesize}> 0
//# NEW <{sGetpagesize}> 1
//? Consts["/syscall/SIOCSIFPFLAGS"] = syscall.SIOCSIFPFLAGS
//# OLD <{sSIOCSIFPFLAGS}> 0
//# NEW <{sSIOCSIFPFLAGS}> 1
//? Consts["/syscall/O_NOATIME"] = syscall.O_NOATIME
//# OLD <{sO_NOATIME}> 0
//# NEW <{sO_NOATIME}> 1
//? Consts["/syscall/IPPROTO_AH"] = syscall.IPPROTO_AH
//# OLD <{sIPPROTO_AH}> 0
//# NEW <{sIPPROTO_AH}> 1
//? Consts["/syscall/ARPHRD_BIF"] = syscall.ARPHRD_BIF
//# OLD <{sARPHRD_BIF}> 0
//# NEW <{sARPHRD_BIF}> 1
//? Consts["/syscall/IPV6_PKTINFO"] = syscall.IPV6_PKTINFO
//# OLD <{sIPV6_PKTINFO}> 0
//# NEW <{sIPV6_PKTINFO}> 1
//? Consts["/syscall/PTRACE_ARCH_PRCTL"] = syscall.PTRACE_ARCH_PRCTL
//# OLD <{sPTRACE_ARCH_PRCTL}> 0
//# NEW <{sPTRACE_ARCH_PRCTL}> 1
//? Consts["/syscall/ARPHRD_ROSE"] = syscall.ARPHRD_ROSE
//# OLD <{sARPHRD_ROSE}> 0
//# NEW <{sARPHRD_ROSE}> 1
//? Consts["/syscall/SYS_PWRITEV"] = syscall.SYS_PWRITEV
//# OLD <{sSYS_PWRITEV}> 0
//# NEW <{sSYS_PWRITEV}> 1
//? Consts["/syscall/RTF_NOPMTUDISC"] = syscall.RTF_NOPMTUDISC
//# OLD <{sRTF_NOPMTUDISC}> 0
//# NEW <{sRTF_NOPMTUDISC}> 1
Funcs["/syscall/InotifyInit"] = syscall.InotifyInit
//# OLD <{sInotifyInit}> 0
//# NEW <{sInotifyInit}> 1
//? Consts["/syscall/F_RDLCK"] = syscall.F_RDLCK
//# OLD <{sF_RDLCK}> 0
//# NEW <{sF_RDLCK}> 1
//? Consts["/syscall/IPV6_2292PKTOPTIONS"] = syscall.IPV6_2292PKTOPTIONS
//# OLD <{sIPV6_2292PKTOPTIONS}> 0
//# NEW <{sIPV6_2292PKTOPTIONS}> 1
//? Consts["/syscall/IGNPAR"] = syscall.IGNPAR
//# OLD <{sIGNPAR}> 0
//# NEW <{sIGNPAR}> 1
//? Consts["/syscall/B576000"] = syscall.B576000
//# OLD <{sB576000}> 0
//# NEW <{sB576000}> 1
//? Consts["/syscall/MAP_POPULATE"] = syscall.MAP_POPULATE
//# OLD <{sMAP_POPULATE}> 0
//# NEW <{sMAP_POPULATE}> 1
//? Consts["/syscall/PR_GET_SECCOMP"] = syscall.PR_GET_SECCOMP
//# OLD <{sPR_GET_SECCOMP}> 0
//# NEW <{sPR_GET_SECCOMP}> 1
//? Consts["/syscall/ARPHRD_IPDDP"] = syscall.ARPHRD_IPDDP
//# OLD <{sARPHRD_IPDDP}> 0
//# NEW <{sARPHRD_IPDDP}> 1
//? Consts["/syscall/SYS_ADJTIMEX"] = syscall.SYS_ADJTIMEX
//# OLD <{sSYS_ADJTIMEX}> 0
//# NEW <{sSYS_ADJTIMEX}> 1
//? Consts["/syscall/SIOCGIFMTU"] = syscall.SIOCGIFMTU
//# OLD <{sSIOCGIFMTU}> 0
//# NEW <{sSIOCGIFMTU}> 1
//? Consts["/syscall/S_IXOTH"] = syscall.S_IXOTH
//# OLD <{sS_IXOTH}> 0
//# NEW <{sS_IXOTH}> 1
//? Consts["/syscall/SIOCSIFMTU"] = syscall.SIOCSIFMTU
//# OLD <{sSIOCSIFMTU}> 0
//# NEW <{sSIOCSIFMTU}> 1
//? Consts["/syscall/SO_TIMESTAMPING"] = syscall.SO_TIMESTAMPING
//# OLD <{sSO_TIMESTAMPING}> 0
//# NEW <{sSO_TIMESTAMPING}> 1
//? Consts["/syscall/AF_SECURITY"] = syscall.AF_SECURITY
//# OLD <{sAF_SECURITY}> 0
//# NEW <{sAF_SECURITY}> 1
Funcs["/syscall/Mmap"] = syscall.Mmap
//# OLD <{sMmap}> 0
//# NEW <{sMmap}> 1
//? Consts["/syscall/SYS_AFS_SYSCALL"] = syscall.SYS_AFS_SYSCALL
//# OLD <{sSYS_AFS_SYSCALL}> 0
//# NEW <{sSYS_AFS_SYSCALL}> 1
//? Consts["/syscall/TIOCLINUX"] = syscall.TIOCLINUX
//# OLD <{sTIOCLINUX}> 0
//# NEW <{sTIOCLINUX}> 1
//? Consts["/syscall/PR_GET_ENDIAN"] = syscall.PR_GET_ENDIAN
//# OLD <{sPR_GET_ENDIAN}> 0
//# NEW <{sPR_GET_ENDIAN}> 1
Types["/syscall/SockaddrNetlink"] = new(*syscall.SockaddrNetlink)
//# OLD <{sSockaddrNetlink}> 0
//# NEW <{sSockaddrNetlink}> 1
//? Consts["/syscall/ECHONL"] = syscall.ECHONL
//# OLD <{sECHONL}> 0
//# NEW <{sECHONL}> 1
//? Consts["/syscall/SYS_EPOLL_CTL_OLD"] = syscall.SYS_EPOLL_CTL_OLD
//# OLD <{sSYS_EPOLL_CTL_OLD}> 0
//# NEW <{sSYS_EPOLL_CTL_OLD}> 1
//? Consts["/syscall/TIOCM_DSR"] = syscall.TIOCM_DSR
//# OLD <{sTIOCM_DSR}> 0
//# NEW <{sTIOCM_DSR}> 1
//? Consts["/syscall/S_IRWXU"] = syscall.S_IRWXU
//# OLD <{sS_IRWXU}> 0
//# NEW <{sS_IRWXU}> 1
//? Consts["/syscall/SYS_ACCEPT4"] = syscall.SYS_ACCEPT4
//# OLD <{sSYS_ACCEPT4}> 0
//# NEW <{sSYS_ACCEPT4}> 1
//? Consts["/syscall/ARPHRD_IEEE802154"] = syscall.ARPHRD_IEEE802154
//# OLD <{sARPHRD_IEEE802154}> 0
//# NEW <{sARPHRD_IEEE802154}> 1
//? Consts["/syscall/SO_RXQ_OVFL"] = syscall.SO_RXQ_OVFL
//# OLD <{sSO_RXQ_OVFL}> 0
//# NEW <{sSO_RXQ_OVFL}> 1
//? Consts["/syscall/TIOCSERSWILD"] = syscall.TIOCSERSWILD
//# OLD <{sTIOCSERSWILD}> 0
//# NEW <{sTIOCSERSWILD}> 1
//? Consts["/syscall/PTRACE_TRACEME"] = syscall.PTRACE_TRACEME
//# OLD <{sPTRACE_TRACEME}> 0
//# NEW <{sPTRACE_TRACEME}> 1
//? Consts["/syscall/SYS_SET_ROBUST_LIST"] = syscall.SYS_SET_ROBUST_LIST
//# OLD <{sSYS_SET_ROBUST_LIST}> 0
//# NEW <{sSYS_SET_ROBUST_LIST}> 1
//? Consts["/syscall/PR_GET_NAME"] = syscall.PR_GET_NAME
//# OLD <{sPR_GET_NAME}> 0
//# NEW <{sPR_GET_NAME}> 1
//? Consts["/syscall/IPPROTO_RAW"] = syscall.IPPROTO_RAW
//# OLD <{sIPPROTO_RAW}> 0
//# NEW <{sIPPROTO_RAW}> 1
//? Consts["/syscall/SYS_RT_SIGQUEUEINFO"] = syscall.SYS_RT_SIGQUEUEINFO
//# OLD <{sSYS_RT_SIGQUEUEINFO}> 0
//# NEW <{sSYS_RT_SIGQUEUEINFO}> 1
Types["/syscall/Ucred"] = new(*syscall.Ucred)
//# OLD <{sUcred}> 0
//# NEW <{sUcred}> 1
//? Consts["/syscall/TUNGETVNETHDRSZ"] = syscall.TUNGETVNETHDRSZ
//# OLD <{sTUNGETVNETHDRSZ}> 0
//# NEW <{sTUNGETVNETHDRSZ}> 1
//? Consts["/syscall/TIOCCBRK"] = syscall.TIOCCBRK
//# OLD <{sTIOCCBRK}> 0
//# NEW <{sTIOCCBRK}> 1
//? Consts["/syscall/SYS_LREMOVEXATTR"] = syscall.SYS_LREMOVEXATTR
//# OLD <{sSYS_LREMOVEXATTR}> 0
//# NEW <{sSYS_LREMOVEXATTR}> 1
//? Consts["/syscall/TIOCNXCL"] = syscall.TIOCNXCL
//# OLD <{sTIOCNXCL}> 0
//# NEW <{sTIOCNXCL}> 1
//? Consts["/syscall/SIOCGIFNAME"] = syscall.SIOCGIFNAME
//# OLD <{sSIOCGIFNAME}> 0
//# NEW <{sSIOCGIFNAME}> 1
//? Consts["/syscall/LINUX_REBOOT_MAGIC2"] = syscall.LINUX_REBOOT_MAGIC2
//# OLD <{sLINUX_REBOOT_MAGIC2}> 0
//# NEW <{sLINUX_REBOOT_MAGIC2}> 1
//? Consts["/syscall/PR_SET_NAME"] = syscall.PR_SET_NAME
//# OLD <{sPR_SET_NAME}> 0
//# NEW <{sPR_SET_NAME}> 1
//? Consts["/syscall/SYS_SYMLINKAT"] = syscall.SYS_SYMLINKAT
//# OLD <{sSYS_SYMLINKAT}> 0
//# NEW <{sSYS_SYMLINKAT}> 1
Funcs["/syscall/Setgid"] = syscall.Setgid
//# OLD <{sSetgid}> 0
//# NEW <{sSetgid}> 1
//? Consts["/syscall/SO_BINDTODEVICE"] = syscall.SO_BINDTODEVICE
//# OLD <{sSO_BINDTODEVICE}> 0
//# NEW <{sSO_BINDTODEVICE}> 1
//? Consts["/syscall/SYS_SETXATTR"] = syscall.SYS_SETXATTR
//# OLD <{sSYS_SETXATTR}> 0
//# NEW <{sSYS_SETXATTR}> 1
//? Consts["/syscall/WCONTINUED"] = syscall.WCONTINUED
//# OLD <{sWCONTINUED}> 0
//# NEW <{sWCONTINUED}> 1
//? Consts["/syscall/SYS_READLINK"] = syscall.SYS_READLINK
//# OLD <{sSYS_READLINK}> 0
//# NEW <{sSYS_READLINK}> 1
//? Consts["/syscall/TUNSETLINK"] = syscall.TUNSETLINK
//# OLD <{sTUNSETLINK}> 0
//# NEW <{sTUNSETLINK}> 1
//? Consts["/syscall/SIOCADDDLCI"] = syscall.SIOCADDDLCI
//# OLD <{sSIOCADDDLCI}> 0
//# NEW <{sSIOCADDDLCI}> 1
//? Consts["/syscall/ARPHRD_LOCALTLK"] = syscall.ARPHRD_LOCALTLK
//# OLD <{sARPHRD_LOCALTLK}> 0
//# NEW <{sARPHRD_LOCALTLK}> 1
//? Consts["/syscall/SIOCSPGRP"] = syscall.SIOCSPGRP
//# OLD <{sSIOCSPGRP}> 0
//# NEW <{sSIOCSPGRP}> 1
//? Consts["/syscall/TUNSETOWNER"] = syscall.TUNSETOWNER
//# OLD <{sTUNSETOWNER}> 0
//# NEW <{sTUNSETOWNER}> 1
//? Consts["/syscall/PR_MCE_KILL_CLEAR"] = syscall.PR_MCE_KILL_CLEAR
//# OLD <{sPR_MCE_KILL_CLEAR}> 0
//# NEW <{sPR_MCE_KILL_CLEAR}> 1
//? Consts["/syscall/ETH_P_AARP"] = syscall.ETH_P_AARP
//# OLD <{sETH_P_AARP}> 0
//# NEW <{sETH_P_AARP}> 1
//? Consts["/syscall/EXDEV"] = syscall.EXDEV
//# OLD <{sEXDEV}> 0
//# NEW <{sEXDEV}> 1
//? Consts["/syscall/TIOCSETD"] = syscall.TIOCSETD
//# OLD <{sTIOCSETD}> 0
//# NEW <{sTIOCSETD}> 1
//? Consts["/syscall/NETLINK_ECRYPTFS"] = syscall.NETLINK_ECRYPTFS
//# OLD <{sNETLINK_ECRYPTFS}> 0
//# NEW <{sNETLINK_ECRYPTFS}> 1
//? Consts["/syscall/ARPHRD_APPLETLK"] = syscall.ARPHRD_APPLETLK
//# OLD <{sARPHRD_APPLETLK}> 0
//# NEW <{sARPHRD_APPLETLK}> 1
//? Consts["/syscall/EROFS"] = syscall.EROFS
//# OLD <{sEROFS}> 0
//# NEW <{sEROFS}> 1
//? Consts["/syscall/SYS_FCHMODAT"] = syscall.SYS_FCHMODAT
//# OLD <{sSYS_FCHMODAT}> 0
//# NEW <{sSYS_FCHMODAT}> 1
//? Consts["/syscall/PR_UNALIGN_NOPRINT"] = syscall.PR_UNALIGN_NOPRINT
//# OLD <{sPR_UNALIGN_NOPRINT}> 0
//# NEW <{sPR_UNALIGN_NOPRINT}> 1
//? Consts["/syscall/IPPROTO_HOPOPTS"] = syscall.IPPROTO_HOPOPTS
//# OLD <{sIPPROTO_HOPOPTS}> 0
//# NEW <{sIPPROTO_HOPOPTS}> 1
//? Consts["/syscall/ARPHRD_CSLIP"] = syscall.ARPHRD_CSLIP
//# OLD <{sARPHRD_CSLIP}> 0
//# NEW <{sARPHRD_CSLIP}> 1
//? Consts["/syscall/ETIME"] = syscall.ETIME
//# OLD <{sETIME}> 0
//# NEW <{sETIME}> 1
//? Consts["/syscall/SIOCDELMULTI"] = syscall.SIOCDELMULTI
//# OLD <{sSIOCDELMULTI}> 0
//# NEW <{sSIOCDELMULTI}> 1
//? Consts["/syscall/SYS_FSTATFS"] = syscall.SYS_FSTATFS
//# OLD <{sSYS_FSTATFS}> 0
//# NEW <{sSYS_FSTATFS}> 1
//? Consts["/syscall/S_IEXEC"] = syscall.S_IEXEC
//# OLD <{sS_IEXEC}> 0
//# NEW <{sS_IEXEC}> 1
//? Consts["/syscall/PR_SET_DUMPABLE"] = syscall.PR_SET_DUMPABLE
//# OLD <{sPR_SET_DUMPABLE}> 0
//# NEW <{sPR_SET_DUMPABLE}> 1
//? Consts["/syscall/SYS_NFSSERVCTL"] = syscall.SYS_NFSSERVCTL
//# OLD <{sSYS_NFSSERVCTL}> 0
//# NEW <{sSYS_NFSSERVCTL}> 1
//? Consts["/syscall/SYS_MIGRATE_PAGES"] = syscall.SYS_MIGRATE_PAGES
//# OLD <{sSYS_MIGRATE_PAGES}> 0
//# NEW <{sSYS_MIGRATE_PAGES}> 1
//? Consts["/syscall/B500000"] = syscall.B500000
//# OLD <{sB500000}> 0
//# NEW <{sB500000}> 1
//? Consts["/syscall/SYS_MLOCKALL"] = syscall.SYS_MLOCKALL
//# OLD <{sSYS_MLOCKALL}> 0
//# NEW <{sSYS_MLOCKALL}> 1
//? Consts["/syscall/SYS_VSERVER"] = syscall.SYS_VSERVER
//# OLD <{sSYS_VSERVER}> 0
//# NEW <{sSYS_VSERVER}> 1
//? Consts["/syscall/EPOLLRDHUP"] = syscall.EPOLLRDHUP
//# OLD <{sEPOLLRDHUP}> 0
//# NEW <{sEPOLLRDHUP}> 1
//? Consts["/syscall/IFF_AUTOMEDIA"] = syscall.IFF_AUTOMEDIA
//# OLD <{sIFF_AUTOMEDIA}> 0
//# NEW <{sIFF_AUTOMEDIA}> 1
//? Consts["/syscall/EKEYREJECTED"] = syscall.EKEYREJECTED
//# OLD <{sEKEYREJECTED}> 0
//# NEW <{sEKEYREJECTED}> 1
//? Consts["/syscall/EKEYEXPIRED"] = syscall.EKEYEXPIRED
//# OLD <{sEKEYEXPIRED}> 0
//# NEW <{sEKEYEXPIRED}> 1
//? Consts["/syscall/SYS_FCHOWNAT"] = syscall.SYS_FCHOWNAT
//# OLD <{sSYS_FCHOWNAT}> 0
//# NEW <{sSYS_FCHOWNAT}> 1
//? Consts["/syscall/B115200"] = syscall.B115200
//# OLD <{sB115200}> 0
//# NEW <{sB115200}> 1
//? Consts["/syscall/PTRACE_SYSCALL"] = syscall.PTRACE_SYSCALL
//# OLD <{sPTRACE_SYSCALL}> 0
//# NEW <{sPTRACE_SYSCALL}> 1
//? Consts["/syscall/MSG_MORE"] = syscall.MSG_MORE
//# OLD <{sMSG_MORE}> 0
//# NEW <{sMSG_MORE}> 1
//? Consts["/syscall/SIOCSIFHWADDR"] = syscall.SIOCSIFHWADDR
//# OLD <{sSIOCSIFHWADDR}> 0
//# NEW <{sSIOCSIFHWADDR}> 1
//? Consts["/syscall/ECHOK"] = syscall.ECHOK
//# OLD <{sECHOK}> 0
//# NEW <{sECHOK}> 1
//? Consts["/syscall/IPPROTO_PUP"] = syscall.IPPROTO_PUP
//# OLD <{sIPPROTO_PUP}> 0
//# NEW <{sIPPROTO_PUP}> 1
//? Consts["/syscall/SOCK_STREAM"] = syscall.SOCK_STREAM
//# OLD <{sSOCK_STREAM}> 0
//# NEW <{sSOCK_STREAM}> 1
//? Consts["/syscall/IPV6_CHECKSUM"] = syscall.IPV6_CHECKSUM
//# OLD <{sIPV6_CHECKSUM}> 0
//# NEW <{sIPV6_CHECKSUM}> 1
//? Consts["/syscall/SYS_SET_THREAD_AREA"] = syscall.SYS_SET_THREAD_AREA
//# OLD <{sSYS_SET_THREAD_AREA}> 0
//# NEW <{sSYS_SET_THREAD_AREA}> 1
//? Consts["/syscall/MSG_DONTWAIT"] = syscall.MSG_DONTWAIT
//# OLD <{sMSG_DONTWAIT}> 0
//# NEW <{sMSG_DONTWAIT}> 1
//? Consts["/syscall/NLM_F_MATCH"] = syscall.NLM_F_MATCH
//# OLD <{sNLM_F_MATCH}> 0
//# NEW <{sNLM_F_MATCH}> 1
Funcs["/syscall/Recvfrom"] = syscall.Recvfrom
//# OLD <{sRecvfrom}> 0
//# NEW <{sRecvfrom}> 1
//? Consts["/syscall/VMIN"] = syscall.VMIN
//# OLD <{sVMIN}> 0
//# NEW <{sVMIN}> 1
//? Consts["/syscall/MAP_NORESERVE"] = syscall.MAP_NORESERVE
//# OLD <{sMAP_NORESERVE}> 0
//# NEW <{sMAP_NORESERVE}> 1
//? Consts["/syscall/RTF_MULTICAST"] = syscall.RTF_MULTICAST
//# OLD <{sRTF_MULTICAST}> 0
//# NEW <{sRTF_MULTICAST}> 1
//? Consts["/syscall/SYS_CHOWN"] = syscall.SYS_CHOWN
//# OLD <{sSYS_CHOWN}> 0
//# NEW <{sSYS_CHOWN}> 1
//? Consts["/syscall/SYS_UNLINKAT"] = syscall.SYS_UNLINKAT
//# OLD <{sSYS_UNLINKAT}> 0
//# NEW <{sSYS_UNLINKAT}> 1
//? Consts["/syscall/SYS_MKNOD"] = syscall.SYS_MKNOD
//# OLD <{sSYS_MKNOD}> 0
//# NEW <{sSYS_MKNOD}> 1
//? Consts["/syscall/IN_NONBLOCK"] = syscall.IN_NONBLOCK
//# OLD <{sIN_NONBLOCK}> 0
//# NEW <{sIN_NONBLOCK}> 1
//? Consts["/syscall/SYS_SETFSUID"] = syscall.SYS_SETFSUID
//# OLD <{sSYS_SETFSUID}> 0
//# NEW <{sSYS_SETFSUID}> 1
//? Consts["/syscall/SOL_PACKET"] = syscall.SOL_PACKET
//# OLD <{sSOL_PACKET}> 0
//# NEW <{sSOL_PACKET}> 1
//? Consts["/syscall/ENOMEDIUM"] = syscall.ENOMEDIUM
//# OLD <{sENOMEDIUM}> 0
//# NEW <{sENOMEDIUM}> 1
Funcs["/syscall/SetNonblock"] = syscall.SetNonblock
//# OLD <{sSetNonblock}> 0
//# NEW <{sSetNonblock}> 1
//? Consts["/syscall/SIOCGIFENCAP"] = syscall.SIOCGIFENCAP
//# OLD <{sSIOCGIFENCAP}> 0
//# NEW <{sSIOCGIFENCAP}> 1
//? Consts["/syscall/ETH_P_MOBITEX"] = syscall.ETH_P_MOBITEX
//# OLD <{sETH_P_MOBITEX}> 0
//# NEW <{sETH_P_MOBITEX}> 1
Funcs["/syscall/Select"] = syscall.Select
//# OLD <{sSelect}> 0
//# NEW <{sSelect}> 1
//? Consts["/syscall/SO_SECURITY_AUTHENTICATION"] = syscall.SO_SECURITY_AUTHENTICATION
//# OLD <{sSO_SECURITY_AUTHENTICATION}> 0
//# NEW <{sSO_SECURITY_AUTHENTICATION}> 1
//? Consts["/syscall/IFF_BROADCAST"] = syscall.IFF_BROADCAST
//# OLD <{sIFF_BROADCAST}> 0
//# NEW <{sIFF_BROADCAST}> 1
//? Consts["/syscall/SOL_TCP"] = syscall.SOL_TCP
//# OLD <{sSOL_TCP}> 0
//# NEW <{sSOL_TCP}> 1
Funcs["/syscall/PtraceAttach"] = syscall.PtraceAttach
//# OLD <{sPtraceAttach}> 0
//# NEW <{sPtraceAttach}> 1
//? Consts["/syscall/EPROTO"] = syscall.EPROTO
//# OLD <{sEPROTO}> 0
//# NEW <{sEPROTO}> 1
//? Consts["/syscall/EDOM"] = syscall.EDOM
//# OLD <{sEDOM}> 0
//# NEW <{sEDOM}> 1
//? Consts["/syscall/SYS_GETGID"] = syscall.SYS_GETGID
//# OLD <{sSYS_GETGID}> 0
//# NEW <{sSYS_GETGID}> 1
//? Consts["/syscall/IFLA_TXQLEN"] = syscall.IFLA_TXQLEN
//# OLD <{sIFLA_TXQLEN}> 0
//# NEW <{sIFLA_TXQLEN}> 1
Types["/syscall/Termios"] = new(*syscall.Termios)
//# OLD <{sTermios}> 0
//# NEW <{sTermios}> 1
//? Consts["/syscall/ENOLINK"] = syscall.ENOLINK
//# OLD <{sENOLINK}> 0
//# NEW <{sENOLINK}> 1
//? Consts["/syscall/SO_NO_CHECK"] = syscall.SO_NO_CHECK
//# OLD <{sSO_NO_CHECK}> 0
//# NEW <{sSO_NO_CHECK}> 1


//     type testing.BenchmarkResult
//     func testing.Main
//     type testing.InternalBenchmark
//     func testing.Benchmark
//     func testing.Short
//     func testing.RunExamples
//     type testing.InternalTest
//     type testing.T
//     func testing.RunBenchmarks
//     type testing.InternalExample
//     func testing.RunTests
//     type testing.B

Funcs["/testing/Benchmark"] = testing.Benchmark
//# OLD <{tBenchmark}> 0
//# NEW <{tBenchmark}> 1
Funcs["/testing/Short"] = testing.Short
//# OLD <{tShort}> 0
//# NEW <{tShort}> 1
Funcs["/testing/RunExamples"] = testing.RunExamples
//# OLD <{tRunExamples}> 0
//# NEW <{tRunExamples}> 1
Types["/testing/InternalTest"] = new(*testing.InternalTest)
//# OLD <{tInternalTest}> 0
//# NEW <{tInternalTest}> 1
Types["/testing/T"] = new(*testing.T)
//# OLD <{tT}> 0
//# NEW <{tT}> 1
Funcs["/testing/RunBenchmarks"] = testing.RunBenchmarks
//# OLD <{tRunBenchmarks}> 0
//# NEW <{tRunBenchmarks}> 1
Types["/testing/InternalExample"] = new(*testing.InternalExample)
//# OLD <{tInternalExample}> 0
//# NEW <{tInternalExample}> 1
Funcs["/testing/RunTests"] = testing.RunTests
//# OLD <{tRunTests}> 0
//# NEW <{tRunTests}> 1
Types["/testing/B"] = new(*testing.B)
//# OLD <{tB}> 0
//# NEW <{tB}> 1
Types["/testing/BenchmarkResult"] = new(*testing.BenchmarkResult)
//# OLD <{tBenchmarkResult}> 0
//# NEW <{tBenchmarkResult}> 1
Funcs["/testing/Main"] = testing.Main
//# OLD <{tMain}> 0
//# NEW <{tMain}> 1
Types["/testing/InternalBenchmark"] = new(*testing.InternalBenchmark)
//# OLD <{tInternalBenchmark}> 0
//# NEW <{tInternalBenchmark}> 1


//     func testing/iotest.NewWriteLogger
//     func testing/iotest.TimeoutReader
//     func testing/iotest.TruncateWriter
//     func testing/iotest.DataErrReader
//     func testing/iotest.OneByteReader
//     func testing/iotest.NewReadLogger
//      var testing/iotest.ErrTimeout
//     func testing/iotest.HalfReader

Funcs["/testing/iotest/NewWriteLogger"] = testing_iotest.NewWriteLogger
//# OLD <{iNewWriteLogger}> 0
//# NEW <{iNewWriteLogger}> 1
Funcs["/testing/iotest/TimeoutReader"] = testing_iotest.TimeoutReader
//# OLD <{iTimeoutReader}> 0
//# NEW <{iTimeoutReader}> 1
Funcs["/testing/iotest/TruncateWriter"] = testing_iotest.TruncateWriter
//# OLD <{iTruncateWriter}> 0
//# NEW <{iTruncateWriter}> 1
Funcs["/testing/iotest/DataErrReader"] = testing_iotest.DataErrReader
//# OLD <{iDataErrReader}> 0
//# NEW <{iDataErrReader}> 1
Funcs["/testing/iotest/OneByteReader"] = testing_iotest.OneByteReader
//# OLD <{iOneByteReader}> 0
//# NEW <{iOneByteReader}> 1
Funcs["/testing/iotest/NewReadLogger"] = testing_iotest.NewReadLogger
//# OLD <{iNewReadLogger}> 0
//# NEW <{iNewReadLogger}> 1
Vars["/testing/iotest/ErrTimeout"] = &testing_iotest.ErrTimeout
//# OLD <{iErrTimeout}> 0
//# NEW <{iErrTimeout}> 1
Funcs["/testing/iotest/HalfReader"] = testing_iotest.HalfReader
//# OLD <{iHalfReader}> 0
//# NEW <{iHalfReader}> 1


//     type testing/quick.Generator
//     func testing/quick.Check
//     func testing/quick.Value
//     func testing/quick.CheckEqual
//     type testing/quick.CheckEqualError
//     type testing/quick.Config
//     type testing/quick.CheckError
//     type testing/quick.SetupError

Types["/testing/quick/CheckEqualError"] = new(*testing_quick.CheckEqualError)
//# OLD <{qCheckEqualError}> 0
//# NEW <{qCheckEqualError}> 1
Types["/testing/quick/Config"] = new(*testing_quick.Config)
//# OLD <{qConfig}> 0
//# NEW <{qConfig}> 1
Types["/testing/quick/CheckError"] = new(*testing_quick.CheckError)
//# OLD <{qCheckError}> 0
//# NEW <{qCheckError}> 1
Types["/testing/quick/SetupError"] = new(*testing_quick.SetupError)
//# OLD <{qSetupError}> 0
//# NEW <{qSetupError}> 1
Types["/testing/quick/Generator"] = new(*testing_quick.Generator)
//# OLD <{qGenerator}> 0
//# NEW <{qGenerator}> 1
Funcs["/testing/quick/Check"] = testing_quick.Check
//# OLD <{qCheck}> 0
//# NEW <{qCheck}> 1
Funcs["/testing/quick/Value"] = testing_quick.Value
//# OLD <{qValue}> 0
//# NEW <{qValue}> 1
Funcs["/testing/quick/CheckEqual"] = testing_quick.CheckEqual
//# OLD <{qCheckEqual}> 0
//# NEW <{qCheckEqual}> 1


//    const text/scanner.ScanInts
//     type text/scanner.Scanner
//    const text/scanner.ScanIdents
//    const text/scanner.ScanRawStrings
//    const text/scanner.Int
//    const text/scanner.ScanStrings
//     func text/scanner.TokenString
//    const text/scanner.ScanComments
//    const text/scanner.ScanFloats
//    const text/scanner.Ident
//    const text/scanner.RawString
//    const text/scanner.Float
//     type text/scanner.Position
//    const text/scanner.GoWhitespace
//    const text/scanner.Comment
//    const text/scanner.EOF
//    const text/scanner.ScanChars
//    const text/scanner.String
//    const text/scanner.SkipComments
//    const text/scanner.Char
//    const text/scanner.GoTokens

//? Consts["/text/scanner/ScanInts"] = text_scanner.ScanInts
//# OLD <{sScanInts}> 0
//# NEW <{sScanInts}> 1
Types["/text/scanner/Scanner"] = new(*text_scanner.Scanner)
//# OLD <{sScanner}> 2
//# NEW <{sScanner}> 3
//? Consts["/text/scanner/ScanIdents"] = text_scanner.ScanIdents
//# OLD <{sScanIdents}> 0
//# NEW <{sScanIdents}> 1
//? Consts["/text/scanner/ScanRawStrings"] = text_scanner.ScanRawStrings
//# OLD <{sScanRawStrings}> 0
//# NEW <{sScanRawStrings}> 1
//? Consts["/text/scanner/Int"] = text_scanner.Int
//# OLD <{sInt}> 0
//# NEW <{sInt}> 1
//? Consts["/text/scanner/ScanStrings"] = text_scanner.ScanStrings
//# OLD <{sScanStrings}> 0
//# NEW <{sScanStrings}> 1
Funcs["/text/scanner/TokenString"] = text_scanner.TokenString
//# OLD <{sTokenString}> 0
//# NEW <{sTokenString}> 1
//? Consts["/text/scanner/ScanComments"] = text_scanner.ScanComments
//# OLD <{sScanComments}> 1
//# NEW <{sScanComments}> 2
//? Consts["/text/scanner/ScanFloats"] = text_scanner.ScanFloats
//# OLD <{sScanFloats}> 0
//# NEW <{sScanFloats}> 1
//? Consts["/text/scanner/Ident"] = text_scanner.Ident
//# OLD <{sIdent}> 0
//# NEW <{sIdent}> 1
//? Consts["/text/scanner/RawString"] = text_scanner.RawString
//# OLD <{sRawString}> 0
//# NEW <{sRawString}> 1
//? Consts["/text/scanner/Float"] = text_scanner.Float
//# OLD <{sFloat}> 0
//# NEW <{sFloat}> 1
Types["/text/scanner/Position"] = new(*text_scanner.Position)
//# OLD <{sPosition}> 0
//# NEW <{sPosition}> 1
//? Consts["/text/scanner/GoWhitespace"] = text_scanner.GoWhitespace
//# OLD <{sGoWhitespace}> 0
//# NEW <{sGoWhitespace}> 1
//? Consts["/text/scanner/Comment"] = text_scanner.Comment
//# OLD <{sComment}> 0
//# NEW <{sComment}> 1
//? Consts["/text/scanner/EOF"] = text_scanner.EOF
//# OLD <{sEOF}> 0
//# NEW <{sEOF}> 1
//? Consts["/text/scanner/ScanChars"] = text_scanner.ScanChars
//# OLD <{sScanChars}> 0
//# NEW <{sScanChars}> 1
//? Consts["/text/scanner/String"] = text_scanner.String
//# OLD <{sString}> 0
//# NEW <{sString}> 1
//? Consts["/text/scanner/SkipComments"] = text_scanner.SkipComments
//# OLD <{sSkipComments}> 0
//# NEW <{sSkipComments}> 1
//? Consts["/text/scanner/Char"] = text_scanner.Char
//# OLD <{sChar}> 0
//# NEW <{sChar}> 1
//? Consts["/text/scanner/GoTokens"] = text_scanner.GoTokens
//# OLD <{sGoTokens}> 0
//# NEW <{sGoTokens}> 1


//    const text/tabwriter.AlignRight
//    const text/tabwriter.Debug
//    const text/tabwriter.Escape
//    const text/tabwriter.StripEscape
//     func text/tabwriter.NewWriter
//    const text/tabwriter.TabIndent
//     type text/tabwriter.Writer
//    const text/tabwriter.FilterHTML
//    const text/tabwriter.DiscardEmptyColumns

//? Consts["/text/tabwriter/StripEscape"] = text_tabwriter.StripEscape
//# OLD <{tStripEscape}> 0
//# NEW <{tStripEscape}> 1
Funcs["/text/tabwriter/NewWriter"] = text_tabwriter.NewWriter
//# OLD <{tNewWriter}> 2
//# NEW <{tNewWriter}> 3
//? Consts["/text/tabwriter/TabIndent"] = text_tabwriter.TabIndent
//# OLD <{tTabIndent}> 0
//# NEW <{tTabIndent}> 1
Types["/text/tabwriter/Writer"] = new(*text_tabwriter.Writer)
//# OLD <{tWriter}> 2
//# NEW <{tWriter}> 3
//? Consts["/text/tabwriter/FilterHTML"] = text_tabwriter.FilterHTML
//# OLD <{tFilterHTML}> 0
//# NEW <{tFilterHTML}> 1
//? Consts["/text/tabwriter/DiscardEmptyColumns"] = text_tabwriter.DiscardEmptyColumns
//# OLD <{tDiscardEmptyColumns}> 0
//# NEW <{tDiscardEmptyColumns}> 1
//? Consts["/text/tabwriter/AlignRight"] = text_tabwriter.AlignRight
//# OLD <{tAlignRight}> 0
//# NEW <{tAlignRight}> 1
//? Consts["/text/tabwriter/Debug"] = text_tabwriter.Debug
//# OLD <{tDebug}> 0
//# NEW <{tDebug}> 1
//? Consts["/text/tabwriter/Escape"] = text_tabwriter.Escape
//# OLD <{tEscape}> 0
//# NEW <{tEscape}> 1


//     func text/template.HTMLEscapeString
//     func text/template.HTMLEscaper
//     func text/template.HTMLEscape
//     func text/template.ParseFiles
//     func text/template.ParseGlob
//     func text/template.New
//     type text/template.FuncMap
//     func text/template.JSEscapeString
//     func text/template.Must
//     func text/template.JSEscape
//     func text/template.URLQueryEscaper
//     func text/template.JSEscaper
//     type text/template.Template

Funcs["/text/template/HTMLEscape"] = text_template.HTMLEscape
//# OLD <{tHTMLEscape}> 1
//# NEW <{tHTMLEscape}> 2
Funcs["/text/template/ParseFiles"] = text_template.ParseFiles
//# OLD <{tParseFiles}> 1
//# NEW <{tParseFiles}> 2
Funcs["/text/template/ParseGlob"] = text_template.ParseGlob
//# OLD <{tParseGlob}> 1
//# NEW <{tParseGlob}> 2
Funcs["/text/template/New"] = text_template.New
//# OLD <{tNew}> 1
//# NEW <{tNew}> 2
Types["/text/template/FuncMap"] = new(*text_template.FuncMap)
//# OLD <{tFuncMap}> 1
//# NEW <{tFuncMap}> 2
Funcs["/text/template/JSEscapeString"] = text_template.JSEscapeString
//# OLD <{tJSEscapeString}> 1
//# NEW <{tJSEscapeString}> 2
Funcs["/text/template/Must"] = text_template.Must
//# OLD <{tMust}> 1
//# NEW <{tMust}> 2
Funcs["/text/template/JSEscape"] = text_template.JSEscape
//# OLD <{tJSEscape}> 1
//# NEW <{tJSEscape}> 2
Funcs["/text/template/URLQueryEscaper"] = text_template.URLQueryEscaper
//# OLD <{tURLQueryEscaper}> 1
//# NEW <{tURLQueryEscaper}> 2
Funcs["/text/template/JSEscaper"] = text_template.JSEscaper
//# OLD <{tJSEscaper}> 1
//# NEW <{tJSEscaper}> 2
Types["/text/template/Template"] = new(*text_template.Template)
//# OLD <{tTemplate}> 1
//# NEW <{tTemplate}> 2
Funcs["/text/template/HTMLEscapeString"] = text_template.HTMLEscapeString
//# OLD <{tHTMLEscapeString}> 1
//# NEW <{tHTMLEscapeString}> 2
Funcs["/text/template/HTMLEscaper"] = text_template.HTMLEscaper
//# OLD <{tHTMLEscaper}> 1
//# NEW <{tHTMLEscaper}> 2


//     type text/template/parse.TemplateNode
//    const text/template/parse.NodeIdentifier
//     type text/template/parse.PipeNode
//     type text/template/parse.StringNode
//     type text/template/parse.ListNode
//     type text/template/parse.VariableNode
//     func text/template/parse.NewIdentifier
//    const text/template/parse.NodeField
//    const text/template/parse.NodeText
//     type text/template/parse.NumberNode
//     type text/template/parse.CommandNode
//    const text/template/parse.NodeTemplate
//     type text/template/parse.BoolNode
//    const text/template/parse.NodeList
//    const text/template/parse.NodeString
//     type text/template/parse.NodeType
//     func text/template/parse.New
//     type text/template/parse.DotNode
//     type text/template/parse.FieldNode
//     type text/template/parse.WithNode
//     type text/template/parse.IfNode
//    const text/template/parse.NodePipe
//     func text/template/parse.IsEmptyTree
//    const text/template/parse.NodeNumber
//     type text/template/parse.ActionNode
//    const text/template/parse.NodeAction
//     type text/template/parse.BranchNode
//     type text/template/parse.Tree
//    const text/template/parse.NodeVariable
//    const text/template/parse.NodeIf
//     type text/template/parse.IdentifierNode
//     type text/template/parse.Node
//     type text/template/parse.RangeNode
//    const text/template/parse.NodeBool
//     type text/template/parse.TextNode
//     func text/template/parse.Parse
//    const text/template/parse.NodeWith
//    const text/template/parse.NodeRange
//    const text/template/parse.NodeCommand
//    const text/template/parse.NodeDot

Types["/text/template/parse/ListNode"] = new(*text_template_parse.ListNode)
//# OLD <{pListNode}> 0
//# NEW <{pListNode}> 1
Types["/text/template/parse/VariableNode"] = new(*text_template_parse.VariableNode)
//# OLD <{pVariableNode}> 0
//# NEW <{pVariableNode}> 1
Funcs["/text/template/parse/NewIdentifier"] = text_template_parse.NewIdentifier
//# OLD <{pNewIdentifier}> 0
//# NEW <{pNewIdentifier}> 1
//? Consts["/text/template/parse/NodeField"] = text_template_parse.NodeField
//# OLD <{pNodeField}> 0
//# NEW <{pNodeField}> 1
//? Consts["/text/template/parse/NodeText"] = text_template_parse.NodeText
//# OLD <{pNodeText}> 0
//# NEW <{pNodeText}> 1
Types["/text/template/parse/NumberNode"] = new(*text_template_parse.NumberNode)
//# OLD <{pNumberNode}> 0
//# NEW <{pNumberNode}> 1
Types["/text/template/parse/CommandNode"] = new(*text_template_parse.CommandNode)
//# OLD <{pCommandNode}> 0
//# NEW <{pCommandNode}> 1
//? Consts["/text/template/parse/NodeTemplate"] = text_template_parse.NodeTemplate
//# OLD <{pNodeTemplate}> 0
//# NEW <{pNodeTemplate}> 1
Types["/text/template/parse/BoolNode"] = new(*text_template_parse.BoolNode)
//# OLD <{pBoolNode}> 0
//# NEW <{pBoolNode}> 1
//? Consts["/text/template/parse/NodeList"] = text_template_parse.NodeList
//# OLD <{pNodeList}> 0
//# NEW <{pNodeList}> 1
//? Consts["/text/template/parse/NodeString"] = text_template_parse.NodeString
//# OLD <{pNodeString}> 0
//# NEW <{pNodeString}> 1
Types["/text/template/parse/NodeType"] = new(*text_template_parse.NodeType)
//# OLD <{pNodeType}> 0
//# NEW <{pNodeType}> 1
Funcs["/text/template/parse/New"] = text_template_parse.New
//# OLD <{pNew}> 0
//# NEW <{pNew}> 1
Types["/text/template/parse/DotNode"] = new(*text_template_parse.DotNode)
//# OLD <{pDotNode}> 0
//# NEW <{pDotNode}> 1
Types["/text/template/parse/FieldNode"] = new(*text_template_parse.FieldNode)
//# OLD <{pFieldNode}> 0
//# NEW <{pFieldNode}> 1
Types["/text/template/parse/WithNode"] = new(*text_template_parse.WithNode)
//# OLD <{pWithNode}> 0
//# NEW <{pWithNode}> 1
Types["/text/template/parse/IfNode"] = new(*text_template_parse.IfNode)
//# OLD <{pIfNode}> 0
//# NEW <{pIfNode}> 1
//? Consts["/text/template/parse/NodePipe"] = text_template_parse.NodePipe
//# OLD <{pNodePipe}> 0
//# NEW <{pNodePipe}> 1
Funcs["/text/template/parse/IsEmptyTree"] = text_template_parse.IsEmptyTree
//# OLD <{pIsEmptyTree}> 0
//# NEW <{pIsEmptyTree}> 1
//? Consts["/text/template/parse/NodeNumber"] = text_template_parse.NodeNumber
//# OLD <{pNodeNumber}> 0
//# NEW <{pNodeNumber}> 1
Types["/text/template/parse/ActionNode"] = new(*text_template_parse.ActionNode)
//# OLD <{pActionNode}> 0
//# NEW <{pActionNode}> 1
//? Consts["/text/template/parse/NodeAction"] = text_template_parse.NodeAction
//# OLD <{pNodeAction}> 0
//# NEW <{pNodeAction}> 1
Types["/text/template/parse/BranchNode"] = new(*text_template_parse.BranchNode)
//# OLD <{pBranchNode}> 0
//# NEW <{pBranchNode}> 1
Types["/text/template/parse/Tree"] = new(*text_template_parse.Tree)
//# OLD <{pTree}> 0
//# NEW <{pTree}> 1
//? Consts["/text/template/parse/NodeVariable"] = text_template_parse.NodeVariable
//# OLD <{pNodeVariable}> 0
//# NEW <{pNodeVariable}> 1
//? Consts["/text/template/parse/NodeIf"] = text_template_parse.NodeIf
//# OLD <{pNodeIf}> 0
//# NEW <{pNodeIf}> 1
Types["/text/template/parse/IdentifierNode"] = new(*text_template_parse.IdentifierNode)
//# OLD <{pIdentifierNode}> 0
//# NEW <{pIdentifierNode}> 1
Types["/text/template/parse/Node"] = new(*text_template_parse.Node)
//# OLD <{pNode}> 0
//# NEW <{pNode}> 1
Types["/text/template/parse/RangeNode"] = new(*text_template_parse.RangeNode)
//# OLD <{pRangeNode}> 0
//# NEW <{pRangeNode}> 1
//? Consts["/text/template/parse/NodeBool"] = text_template_parse.NodeBool
//# OLD <{pNodeBool}> 0
//# NEW <{pNodeBool}> 1
Types["/text/template/parse/TextNode"] = new(*text_template_parse.TextNode)
//# OLD <{pTextNode}> 0
//# NEW <{pTextNode}> 1
Funcs["/text/template/parse/Parse"] = text_template_parse.Parse
//# OLD <{pParse}> 0
//# NEW <{pParse}> 1
//? Consts["/text/template/parse/NodeWith"] = text_template_parse.NodeWith
//# OLD <{pNodeWith}> 0
//# NEW <{pNodeWith}> 1
//? Consts["/text/template/parse/NodeRange"] = text_template_parse.NodeRange
//# OLD <{pNodeRange}> 0
//# NEW <{pNodeRange}> 1
//? Consts["/text/template/parse/NodeCommand"] = text_template_parse.NodeCommand
//# OLD <{pNodeCommand}> 0
//# NEW <{pNodeCommand}> 1
//? Consts["/text/template/parse/NodeDot"] = text_template_parse.NodeDot
//# OLD <{pNodeDot}> 0
//# NEW <{pNodeDot}> 1
Types["/text/template/parse/TemplateNode"] = new(*text_template_parse.TemplateNode)
//# OLD <{pTemplateNode}> 0
//# NEW <{pTemplateNode}> 1
//? Consts["/text/template/parse/NodeIdentifier"] = text_template_parse.NodeIdentifier
//# OLD <{pNodeIdentifier}> 0
//# NEW <{pNodeIdentifier}> 1
Types["/text/template/parse/PipeNode"] = new(*text_template_parse.PipeNode)
//# OLD <{pPipeNode}> 0
//# NEW <{pPipeNode}> 1
Types["/text/template/parse/StringNode"] = new(*text_template_parse.StringNode)
//# OLD <{pStringNode}> 0
//# NEW <{pStringNode}> 1


//    const time.StampNano
//    const time.RFC822Z
//    const time.December
//    const time.UnixDate
//     func time.LoadLocation
//    const time.Friday
//     type time.Month
//    const time.ANSIC
//    const time.Hour
//    const time.July
//    const time.Saturday
//     func time.Since
//     func time.Date
//     type time.Time
//    const time.March
//    const time.RFC1123
//     func time.Tick
//    const time.September
//    const time.RubyDate
//     func time.Parse
//     func time.FixedZone
//     func time.ParseDuration
//     func time.AfterFunc
//      var time.UTC
//     func time.Sleep
//    const time.StampMilli
//    const time.Stamp
//    const time.Sunday
//    const time.June
//    const time.RFC3339Nano
//    const time.Kitchen
//     func time.Now
//    const time.Wednesday
//     type time.Timer
//    const time.January
//      var time.Local
//    const time.Nanosecond
//    const time.RFC1123Z
//    const time.Second
//     func time.NewTimer
//     type time.Weekday
//    const time.February
//     type time.Duration
//    const time.November
//     type time.Location
//    const time.StampMicro
//    const time.Thursday
//     func time.NewTicker
//     func time.After
//     type time.Ticker
//    const time.RFC3339
//    const time.Minute
//    const time.RFC822
//     func time.Unix
//    const time.April
//    const time.Tuesday
//    const time.RFC850
//    const time.Monday
//    const time.August
//    const time.May
//    const time.October
//     type time.ParseError
//    const time.Microsecond
//    const time.Millisecond

Types["/time/Weekday"] = new(*time.Weekday)
//# OLD <{tWeekday}> 0
//# NEW <{tWeekday}> 1
//? Consts["/time/February"] = time.February
//# OLD <{tFebruary}> 0
//# NEW <{tFebruary}> 1
Types["/time/Duration"] = new(*time.Duration)
//# OLD <{tDuration}> 0
//# NEW <{tDuration}> 1
//? Consts["/time/November"] = time.November
//# OLD <{tNovember}> 0
//# NEW <{tNovember}> 1
Types["/time/Location"] = new(*time.Location)
//# OLD <{tLocation}> 0
//# NEW <{tLocation}> 1
//? Consts["/time/StampMicro"] = time.StampMicro
//# OLD <{tStampMicro}> 0
//# NEW <{tStampMicro}> 1
//? Consts["/time/Thursday"] = time.Thursday
//# OLD <{tThursday}> 0
//# NEW <{tThursday}> 1
Funcs["/time/NewTicker"] = time.NewTicker
//# OLD <{tNewTicker}> 0
//# NEW <{tNewTicker}> 1
Funcs["/time/After"] = time.After
//# OLD <{tAfter}> 0
//# NEW <{tAfter}> 1
Types["/time/Ticker"] = new(*time.Ticker)
//# OLD <{tTicker}> 0
//# NEW <{tTicker}> 1
//? Consts["/time/RFC3339"] = time.RFC3339
//# OLD <{tRFC3339}> 0
//# NEW <{tRFC3339}> 1
//? Consts["/time/Minute"] = time.Minute
//# OLD <{tMinute}> 0
//# NEW <{tMinute}> 1
//? Consts["/time/RFC822"] = time.RFC822
//# OLD <{tRFC822}> 0
//# NEW <{tRFC822}> 1
Funcs["/time/Unix"] = time.Unix
//# OLD <{tUnix}> 0
//# NEW <{tUnix}> 1
//? Consts["/time/April"] = time.April
//# OLD <{tApril}> 0
//# NEW <{tApril}> 1
//? Consts["/time/Tuesday"] = time.Tuesday
//# OLD <{tTuesday}> 0
//# NEW <{tTuesday}> 1
//? Consts["/time/RFC850"] = time.RFC850
//# OLD <{tRFC850}> 0
//# NEW <{tRFC850}> 1
//? Consts["/time/Monday"] = time.Monday
//# OLD <{tMonday}> 0
//# NEW <{tMonday}> 1
//? Consts["/time/August"] = time.August
//# OLD <{tAugust}> 0
//# NEW <{tAugust}> 1
//? Consts["/time/May"] = time.May
//# OLD <{tMay}> 0
//# NEW <{tMay}> 1
//? Consts["/time/October"] = time.October
//# OLD <{tOctober}> 0
//# NEW <{tOctober}> 1
Types["/time/ParseError"] = new(*time.ParseError)
//# OLD <{tParseError}> 0
//# NEW <{tParseError}> 1
//? Consts["/time/Microsecond"] = time.Microsecond
//# OLD <{tMicrosecond}> 0
//# NEW <{tMicrosecond}> 1
//? Consts["/time/Millisecond"] = time.Millisecond
//# OLD <{tMillisecond}> 0
//# NEW <{tMillisecond}> 1
//? Consts["/time/StampNano"] = time.StampNano
//# OLD <{tStampNano}> 0
//# NEW <{tStampNano}> 1
//? Consts["/time/RFC822Z"] = time.RFC822Z
//# OLD <{tRFC822Z}> 0
//# NEW <{tRFC822Z}> 1
//? Consts["/time/December"] = time.December
//# OLD <{tDecember}> 0
//# NEW <{tDecember}> 1
//? Consts["/time/UnixDate"] = time.UnixDate
//# OLD <{tUnixDate}> 0
//# NEW <{tUnixDate}> 1
Funcs["/time/LoadLocation"] = time.LoadLocation
//# OLD <{tLoadLocation}> 0
//# NEW <{tLoadLocation}> 1
//? Consts["/time/Friday"] = time.Friday
//# OLD <{tFriday}> 0
//# NEW <{tFriday}> 1
Types["/time/Month"] = new(*time.Month)
//# OLD <{tMonth}> 0
//# NEW <{tMonth}> 1
//? Consts["/time/ANSIC"] = time.ANSIC
//# OLD <{tANSIC}> 0
//# NEW <{tANSIC}> 1
//? Consts["/time/Hour"] = time.Hour
//# OLD <{tHour}> 0
//# NEW <{tHour}> 1
//? Consts["/time/July"] = time.July
//# OLD <{tJuly}> 0
//# NEW <{tJuly}> 1
//? Consts["/time/Saturday"] = time.Saturday
//# OLD <{tSaturday}> 0
//# NEW <{tSaturday}> 1
Funcs["/time/Since"] = time.Since
//# OLD <{tSince}> 0
//# NEW <{tSince}> 1
Funcs["/time/Date"] = time.Date
//# OLD <{tDate}> 0
//# NEW <{tDate}> 1
Types["/time/Time"] = new(*time.Time)
//# OLD <{tTime}> 0
//# NEW <{tTime}> 1
//? Consts["/time/March"] = time.March
//# OLD <{tMarch}> 0
//# NEW <{tMarch}> 1
//? Consts["/time/RFC1123"] = time.RFC1123
//# OLD <{tRFC1123}> 0
//# NEW <{tRFC1123}> 1
Funcs["/time/Tick"] = time.Tick
//# OLD <{tTick}> 0
//# NEW <{tTick}> 1
//? Consts["/time/September"] = time.September
//# OLD <{tSeptember}> 0
//# NEW <{tSeptember}> 1
//? Consts["/time/RubyDate"] = time.RubyDate
//# OLD <{tRubyDate}> 0
//# NEW <{tRubyDate}> 1
Funcs["/time/Parse"] = time.Parse
//# OLD <{tParse}> 0
//# NEW <{tParse}> 1
Funcs["/time/FixedZone"] = time.FixedZone
//# OLD <{tFixedZone}> 0
//# NEW <{tFixedZone}> 1
Funcs["/time/ParseDuration"] = time.ParseDuration
//# OLD <{tParseDuration}> 0
//# NEW <{tParseDuration}> 1
Funcs["/time/AfterFunc"] = time.AfterFunc
//# OLD <{tAfterFunc}> 0
//# NEW <{tAfterFunc}> 1
Vars["/time/UTC"] = &time.UTC
//# OLD <{tUTC}> 0
//# NEW <{tUTC}> 1
Funcs["/time/Sleep"] = time.Sleep
//# OLD <{tSleep}> 0
//# NEW <{tSleep}> 1
//? Consts["/time/StampMilli"] = time.StampMilli
//# OLD <{tStampMilli}> 0
//# NEW <{tStampMilli}> 1
//? Consts["/time/Stamp"] = time.Stamp
//# OLD <{tStamp}> 0
//# NEW <{tStamp}> 1
//? Consts["/time/Sunday"] = time.Sunday
//# OLD <{tSunday}> 0
//# NEW <{tSunday}> 1
//? Consts["/time/June"] = time.June
//# OLD <{tJune}> 0
//# NEW <{tJune}> 1
//? Consts["/time/RFC3339Nano"] = time.RFC3339Nano
//# OLD <{tRFC3339Nano}> 0
//# NEW <{tRFC3339Nano}> 1
//? Consts["/time/Kitchen"] = time.Kitchen
//# OLD <{tKitchen}> 0
//# NEW <{tKitchen}> 1
Funcs["/time/Now"] = time.Now
//# OLD <{tNow}> 0
//# NEW <{tNow}> 1
//? Consts["/time/Wednesday"] = time.Wednesday
//# OLD <{tWednesday}> 0
//# NEW <{tWednesday}> 1
Types["/time/Timer"] = new(*time.Timer)
//# OLD <{tTimer}> 0
//# NEW <{tTimer}> 1
//? Consts["/time/January"] = time.January
//# OLD <{tJanuary}> 0
//# NEW <{tJanuary}> 1
Vars["/time/Local"] = &time.Local
//# OLD <{tLocal}> 0
//# NEW <{tLocal}> 1
//? Consts["/time/Nanosecond"] = time.Nanosecond
//# OLD <{tNanosecond}> 0
//# NEW <{tNanosecond}> 1
//? Consts["/time/RFC1123Z"] = time.RFC1123Z
//# OLD <{tRFC1123Z}> 0
//# NEW <{tRFC1123Z}> 1
//? Consts["/time/Second"] = time.Second
//# OLD <{tSecond}> 0
//# NEW <{tSecond}> 1
Funcs["/time/NewTimer"] = time.NewTimer
//# OLD <{tNewTimer}> 0
//# NEW <{tNewTimer}> 1


//      var unicode.Buhid
//      var unicode.Batak
//      var unicode.Inscriptional_Pahlavi
//      var unicode.TurkishCase
//      var unicode.Brahmi
//    const unicode.MaxASCII
//      var unicode.Canadian_Aboriginal
//      var unicode.Cham
//      var unicode.So
//      var unicode.Punct
//      var unicode.Number
//      var unicode.Bamum
//      var unicode.Other_Grapheme_Extend
//      var unicode.Cc
//      var unicode.Syriac
//      var unicode.Ll
//      var unicode.Katakana
//      var unicode.Other_Alphabetic
//     type unicode.RangeTable
//      var unicode.L
//      var unicode.Tifinagh
//    const unicode.TitleCase
//     func unicode.IsPrint
//     func unicode.Is
//      var unicode.S
//      var unicode.Greek
//      var unicode.Logical_Order_Exception
//      var unicode.P
//      var unicode.Meetei_Mayek
//      var unicode.Old_Italic
//      var unicode.CaseRanges
//      var unicode.Ogham
//     func unicode.IsLetter
//      var unicode.Upper
//      var unicode.Other_Default_Ignorable_Code_Point
//     func unicode.IsNumber
//      var unicode.Sundanese
//      var unicode.Lao
//      var unicode.Soft_Dotted
//      var unicode.Extender
//      var unicode.Scripts
//    const unicode.UpperLower
//      var unicode.Tagbanwa
//      var unicode.Khmer
//      var unicode.Carian
//     func unicode.ToUpper
//      var unicode.White_Space
//      var unicode.Common
//      var unicode.Sc
//      var unicode.FoldScript
//      var unicode.New_Tai_Lue
//      var unicode.Sm
//      var unicode.Tai_Tham
//      var unicode.Sk
//     func unicode.IsLower
//      var unicode.Mark
//      var unicode.Pe
//      var unicode.Oriya
//      var unicode.Ugaritic
//      var unicode.Armenian
//      var unicode.Title
//      var unicode.Me
//      var unicode.Pattern_White_Space
//      var unicode.Hanunoo
//      var unicode.Shavian
//      var unicode.Rejang
//      var unicode.Syloti_Nagri
//      var unicode.No
//      var unicode.Coptic
//    const unicode.MaxRune
//      var unicode.M
//      var unicode.Other_Uppercase
//     func unicode.IsMark
//      var unicode.Bopomofo
//      var unicode.Unified_Ideograph
//      var unicode.Nko
//    const unicode.MaxLatin1
//     type unicode.CaseRange
//      var unicode.Cf
//      var unicode.Phoenician
//     func unicode.IsUpper
//      var unicode.Kaithi
//      var unicode.Mn
//      var unicode.Old_South_Arabian
//      var unicode.Hebrew
//      var unicode.Cherokee
//      var unicode.Diacritic
//      var unicode.Ideographic
//      var unicode.Dash
//      var unicode.Space
//      var unicode.IDS_Binary_Operator
//     func unicode.SimpleFold
//      var unicode.Other_ID_Start
//      var unicode.Arabic
//     func unicode.IsGraphic
//      var unicode.Tagalog
//      var unicode.Mc
//      var unicode.Thai
//    const unicode.LowerCase
//      var unicode.ASCII_Hex_Digit
//      var unicode.Balinese
//     func unicode.IsSymbol
//     func unicode.IsPunct
//      var unicode.Lo
//      var unicode.Cs
//      var unicode.PrintRanges
//      var unicode.Z
//      var unicode.Nl
//      var unicode.Osmanya
//      var unicode.Gothic
//      var unicode.Ps
//      var unicode.Other_ID_Continue
//      var unicode.Lisu
//      var unicode.Co
//      var unicode.Tai_Viet
//      var unicode.Imperial_Aramaic
//      var unicode.Malayalam
//     type unicode.SpecialCase
//      var unicode.Properties
//      var unicode.Variation_Selector
//      var unicode.Zl
//      var unicode.Join_Control
//      var unicode.Quotation_Mark
//      var unicode.Glagolitic
//     type unicode.Range32
//      var unicode.FoldCategory
//     type unicode.Range16
//      var unicode.Ethiopic
//      var unicode.Mandaic
//      var unicode.Other_Lowercase
//      var unicode.Old_Turkic
//      var unicode.Yi
//      var unicode.Vai
//      var unicode.Braille
//     func unicode.IsOneOf
//    const unicode.Version
//      var unicode.Letter
//      var unicode.Other
//      var unicode.N
//      var unicode.Hiragana
//     func unicode.ToTitle
//      var unicode.Zs
//     func unicode.ToLower
//      var unicode.Ol_Chiki
//      var unicode.Linear_B
//      var unicode.Symbol
//    const unicode.MaxCase
//      var unicode.Kharoshthi
//      var unicode.Hex_Digit
//      var unicode.AzeriCase
//      var unicode.Javanese
//      var unicode.Bengali
//      var unicode.STerm
//     func unicode.To
//      var unicode.Bidi_Control
//      var unicode.Hyphen
//      var unicode.Lepcha
//      var unicode.C
//      var unicode.Telugu
//      var unicode.Kannada
//      var unicode.Lt
//      var unicode.Gujarati
//     func unicode.IsTitle
//      var unicode.Tai_Le
//      var unicode.Other_Math
//     func unicode.IsControl
//      var unicode.Thaana
//      var unicode.Radical
//      var unicode.Samaritan
//      var unicode.Gurmukhi
//      var unicode.Categories
//      var unicode.Lm
//      var unicode.Pc
//      var unicode.Egyptian_Hieroglyphs
//     func unicode.IsSpace
//      var unicode.Cyrillic
//      var unicode.Lower
//      var unicode.Mongolian
//      var unicode.Buginese
//      var unicode.Terminal_Punctuation
//      var unicode.Pd
//      var unicode.Noncharacter_Code_Point
//    const unicode.UpperCase
//      var unicode.Inherited
//      var unicode.Hangul
//      var unicode.Tibetan
//      var unicode.Runic
//      var unicode.Devanagari
//      var unicode.Lycian
//      var unicode.Old_Persian
//    const unicode.ReplacementChar
//      var unicode.Han
//      var unicode.Avestan
//      var unicode.Tamil
//      var unicode.Deseret
//      var unicode.Cuneiform
//      var unicode.Latin
//      var unicode.IDS_Trinary_Operator
//      var unicode.Pattern_Syntax
//      var unicode.Lydian
//      var unicode.Pf
//      var unicode.Limbu
//      var unicode.Pi
//      var unicode.Zp
//      var unicode.Kayah_Li
//      var unicode.Sinhala
//      var unicode.Lu
//      var unicode.Phags_Pa
//      var unicode.Po
//      var unicode.Digit
//      var unicode.GraphicRanges
//      var unicode.Georgian
//     func unicode.IsDigit
//      var unicode.Deprecated
//      var unicode.Saurashtra
//      var unicode.Cypriot
//      var unicode.Inscriptional_Parthian
//      var unicode.Myanmar
//      var unicode.Nd

Vars["/unicode/Limbu"] = &unicode.Limbu
//# OLD <{uLimbu}> 0
//# NEW <{uLimbu}> 1
Vars["/unicode/Pi"] = &unicode.Pi
//# OLD <{uPi}> 0
//# NEW <{uPi}> 1
Vars["/unicode/Zp"] = &unicode.Zp
//# OLD <{uZp}> 0
//# NEW <{uZp}> 1
Vars["/unicode/Kayah_Li"] = &unicode.Kayah_Li
//# OLD <{uKayah_Li}> 0
//# NEW <{uKayah_Li}> 1
Vars["/unicode/Sinhala"] = &unicode.Sinhala
//# OLD <{uSinhala}> 0
//# NEW <{uSinhala}> 1
Vars["/unicode/Lu"] = &unicode.Lu
//# OLD <{uLu}> 0
//# NEW <{uLu}> 1
Vars["/unicode/Phags_Pa"] = &unicode.Phags_Pa
//# OLD <{uPhags_Pa}> 0
//# NEW <{uPhags_Pa}> 1
Vars["/unicode/Po"] = &unicode.Po
//# OLD <{uPo}> 0
//# NEW <{uPo}> 1
Vars["/unicode/Digit"] = &unicode.Digit
//# OLD <{uDigit}> 0
//# NEW <{uDigit}> 1
Vars["/unicode/GraphicRanges"] = &unicode.GraphicRanges
//# OLD <{uGraphicRanges}> 0
//# NEW <{uGraphicRanges}> 1
Vars["/unicode/Georgian"] = &unicode.Georgian
//# OLD <{uGeorgian}> 0
//# NEW <{uGeorgian}> 1
Funcs["/unicode/IsDigit"] = unicode.IsDigit
//# OLD <{uIsDigit}> 0
//# NEW <{uIsDigit}> 1
Vars["/unicode/Deprecated"] = &unicode.Deprecated
//# OLD <{uDeprecated}> 0
//# NEW <{uDeprecated}> 1
Vars["/unicode/Saurashtra"] = &unicode.Saurashtra
//# OLD <{uSaurashtra}> 0
//# NEW <{uSaurashtra}> 1
Vars["/unicode/Cypriot"] = &unicode.Cypriot
//# OLD <{uCypriot}> 0
//# NEW <{uCypriot}> 1
Vars["/unicode/Inscriptional_Parthian"] = &unicode.Inscriptional_Parthian
//# OLD <{uInscriptional_Parthian}> 0
//# NEW <{uInscriptional_Parthian}> 1
Vars["/unicode/Myanmar"] = &unicode.Myanmar
//# OLD <{uMyanmar}> 0
//# NEW <{uMyanmar}> 1
Vars["/unicode/Nd"] = &unicode.Nd
//# OLD <{uNd}> 0
//# NEW <{uNd}> 1
Vars["/unicode/Buhid"] = &unicode.Buhid
//# OLD <{uBuhid}> 0
//# NEW <{uBuhid}> 1
Vars["/unicode/Batak"] = &unicode.Batak
//# OLD <{uBatak}> 0
//# NEW <{uBatak}> 1
Vars["/unicode/Inscriptional_Pahlavi"] = &unicode.Inscriptional_Pahlavi
//# OLD <{uInscriptional_Pahlavi}> 0
//# NEW <{uInscriptional_Pahlavi}> 1
Vars["/unicode/TurkishCase"] = &unicode.TurkishCase
//# OLD <{uTurkishCase}> 0
//# NEW <{uTurkishCase}> 1
Vars["/unicode/Brahmi"] = &unicode.Brahmi
//# OLD <{uBrahmi}> 0
//# NEW <{uBrahmi}> 1
//? Consts["/unicode/MaxASCII"] = unicode.MaxASCII
//# OLD <{uMaxASCII}> 0
//# NEW <{uMaxASCII}> 1
Vars["/unicode/Canadian_Aboriginal"] = &unicode.Canadian_Aboriginal
//# OLD <{uCanadian_Aboriginal}> 0
//# NEW <{uCanadian_Aboriginal}> 1
Vars["/unicode/Cham"] = &unicode.Cham
//# OLD <{uCham}> 0
//# NEW <{uCham}> 1
Vars["/unicode/So"] = &unicode.So
//# OLD <{uSo}> 0
//# NEW <{uSo}> 1
Vars["/unicode/Punct"] = &unicode.Punct
//# OLD <{uPunct}> 0
//# NEW <{uPunct}> 1
Vars["/unicode/Number"] = &unicode.Number
//# OLD <{uNumber}> 0
//# NEW <{uNumber}> 1
Vars["/unicode/Bamum"] = &unicode.Bamum
//# OLD <{uBamum}> 0
//# NEW <{uBamum}> 1
Vars["/unicode/Other_Grapheme_Extend"] = &unicode.Other_Grapheme_Extend
//# OLD <{uOther_Grapheme_Extend}> 0
//# NEW <{uOther_Grapheme_Extend}> 1
Vars["/unicode/Cc"] = &unicode.Cc
//# OLD <{uCc}> 0
//# NEW <{uCc}> 1
Vars["/unicode/Syriac"] = &unicode.Syriac
//# OLD <{uSyriac}> 0
//# NEW <{uSyriac}> 1
Vars["/unicode/Ll"] = &unicode.Ll
//# OLD <{uLl}> 0
//# NEW <{uLl}> 1
Vars["/unicode/Katakana"] = &unicode.Katakana
//# OLD <{uKatakana}> 0
//# NEW <{uKatakana}> 1
Vars["/unicode/Other_Alphabetic"] = &unicode.Other_Alphabetic
//# OLD <{uOther_Alphabetic}> 0
//# NEW <{uOther_Alphabetic}> 1
Types["/unicode/RangeTable"] = new(*unicode.RangeTable)
//# OLD <{uRangeTable}> 0
//# NEW <{uRangeTable}> 1
Vars["/unicode/L"] = &unicode.L
//# OLD <{uL}> 0
//# NEW <{uL}> 1
Vars["/unicode/Tifinagh"] = &unicode.Tifinagh
//# OLD <{uTifinagh}> 0
//# NEW <{uTifinagh}> 1
//? Consts["/unicode/TitleCase"] = unicode.TitleCase
//# OLD <{uTitleCase}> 0
//# NEW <{uTitleCase}> 1
Funcs["/unicode/IsPrint"] = unicode.IsPrint
//# OLD <{uIsPrint}> 0
//# NEW <{uIsPrint}> 1
Funcs["/unicode/Is"] = unicode.Is
//# OLD <{uIs}> 0
//# NEW <{uIs}> 1
Vars["/unicode/S"] = &unicode.S
//# OLD <{uS}> 0
//# NEW <{uS}> 1
Vars["/unicode/Greek"] = &unicode.Greek
//# OLD <{uGreek}> 0
//# NEW <{uGreek}> 1
Vars["/unicode/Logical_Order_Exception"] = &unicode.Logical_Order_Exception
//# OLD <{uLogical_Order_Exception}> 0
//# NEW <{uLogical_Order_Exception}> 1
Vars["/unicode/P"] = &unicode.P
//# OLD <{uP}> 0
//# NEW <{uP}> 1
Vars["/unicode/Meetei_Mayek"] = &unicode.Meetei_Mayek
//# OLD <{uMeetei_Mayek}> 0
//# NEW <{uMeetei_Mayek}> 1
Vars["/unicode/Old_Italic"] = &unicode.Old_Italic
//# OLD <{uOld_Italic}> 0
//# NEW <{uOld_Italic}> 1
Vars["/unicode/CaseRanges"] = &unicode.CaseRanges
//# OLD <{uCaseRanges}> 0
//# NEW <{uCaseRanges}> 1
Vars["/unicode/Ogham"] = &unicode.Ogham
//# OLD <{uOgham}> 0
//# NEW <{uOgham}> 1
Funcs["/unicode/IsLetter"] = unicode.IsLetter
//# OLD <{uIsLetter}> 0
//# NEW <{uIsLetter}> 1
Vars["/unicode/Upper"] = &unicode.Upper
//# OLD <{uUpper}> 0
//# NEW <{uUpper}> 1
Vars["/unicode/Other_Default_Ignorable_Code_Point"] = &unicode.Other_Default_Ignorable_Code_Point
//# OLD <{uOther_Default_Ignorable_Code_Point}> 0
//# NEW <{uOther_Default_Ignorable_Code_Point}> 1
Funcs["/unicode/IsNumber"] = unicode.IsNumber
//# OLD <{uIsNumber}> 0
//# NEW <{uIsNumber}> 1
Vars["/unicode/Sundanese"] = &unicode.Sundanese
//# OLD <{uSundanese}> 0
//# NEW <{uSundanese}> 1
Vars["/unicode/Lao"] = &unicode.Lao
//# OLD <{uLao}> 0
//# NEW <{uLao}> 1
Vars["/unicode/Soft_Dotted"] = &unicode.Soft_Dotted
//# OLD <{uSoft_Dotted}> 0
//# NEW <{uSoft_Dotted}> 1
Vars["/unicode/Extender"] = &unicode.Extender
//# OLD <{uExtender}> 0
//# NEW <{uExtender}> 1
Vars["/unicode/Scripts"] = &unicode.Scripts
//# OLD <{uScripts}> 0
//# NEW <{uScripts}> 1
//? Consts["/unicode/UpperLower"] = unicode.UpperLower
//# OLD <{uUpperLower}> 0
//# NEW <{uUpperLower}> 1
Vars["/unicode/Tagbanwa"] = &unicode.Tagbanwa
//# OLD <{uTagbanwa}> 0
//# NEW <{uTagbanwa}> 1
Vars["/unicode/Khmer"] = &unicode.Khmer
//# OLD <{uKhmer}> 0
//# NEW <{uKhmer}> 1
Vars["/unicode/Carian"] = &unicode.Carian
//# OLD <{uCarian}> 0
//# NEW <{uCarian}> 1
Funcs["/unicode/ToUpper"] = unicode.ToUpper
//# OLD <{uToUpper}> 0
//# NEW <{uToUpper}> 1
Vars["/unicode/White_Space"] = &unicode.White_Space
//# OLD <{uWhite_Space}> 0
//# NEW <{uWhite_Space}> 1
Vars["/unicode/Common"] = &unicode.Common
//# OLD <{uCommon}> 0
//# NEW <{uCommon}> 1
Vars["/unicode/Sc"] = &unicode.Sc
//# OLD <{uSc}> 0
//# NEW <{uSc}> 1
Vars["/unicode/FoldScript"] = &unicode.FoldScript
//# OLD <{uFoldScript}> 0
//# NEW <{uFoldScript}> 1
Vars["/unicode/New_Tai_Lue"] = &unicode.New_Tai_Lue
//# OLD <{uNew_Tai_Lue}> 0
//# NEW <{uNew_Tai_Lue}> 1
Vars["/unicode/Sm"] = &unicode.Sm
//# OLD <{uSm}> 0
//# NEW <{uSm}> 1
Vars["/unicode/Tai_Tham"] = &unicode.Tai_Tham
//# OLD <{uTai_Tham}> 0
//# NEW <{uTai_Tham}> 1
Vars["/unicode/Sk"] = &unicode.Sk
//# OLD <{uSk}> 0
//# NEW <{uSk}> 1
Funcs["/unicode/IsLower"] = unicode.IsLower
//# OLD <{uIsLower}> 0
//# NEW <{uIsLower}> 1
Vars["/unicode/Mark"] = &unicode.Mark
//# OLD <{uMark}> 0
//# NEW <{uMark}> 1
Vars["/unicode/Pe"] = &unicode.Pe
//# OLD <{uPe}> 0
//# NEW <{uPe}> 1
Vars["/unicode/Oriya"] = &unicode.Oriya
//# OLD <{uOriya}> 0
//# NEW <{uOriya}> 1
Vars["/unicode/Ugaritic"] = &unicode.Ugaritic
//# OLD <{uUgaritic}> 0
//# NEW <{uUgaritic}> 1
Vars["/unicode/Armenian"] = &unicode.Armenian
//# OLD <{uArmenian}> 0
//# NEW <{uArmenian}> 1
Vars["/unicode/Title"] = &unicode.Title
//# OLD <{uTitle}> 0
//# NEW <{uTitle}> 1
Vars["/unicode/Me"] = &unicode.Me
//# OLD <{uMe}> 0
//# NEW <{uMe}> 1
Vars["/unicode/Pattern_White_Space"] = &unicode.Pattern_White_Space
//# OLD <{uPattern_White_Space}> 0
//# NEW <{uPattern_White_Space}> 1
Vars["/unicode/Hanunoo"] = &unicode.Hanunoo
//# OLD <{uHanunoo}> 0
//# NEW <{uHanunoo}> 1
Vars["/unicode/Shavian"] = &unicode.Shavian
//# OLD <{uShavian}> 0
//# NEW <{uShavian}> 1
Vars["/unicode/Rejang"] = &unicode.Rejang
//# OLD <{uRejang}> 0
//# NEW <{uRejang}> 1
Vars["/unicode/Syloti_Nagri"] = &unicode.Syloti_Nagri
//# OLD <{uSyloti_Nagri}> 0
//# NEW <{uSyloti_Nagri}> 1
Vars["/unicode/No"] = &unicode.No
//# OLD <{uNo}> 0
//# NEW <{uNo}> 1
Vars["/unicode/Coptic"] = &unicode.Coptic
//# OLD <{uCoptic}> 0
//# NEW <{uCoptic}> 1
//? Consts["/unicode/MaxRune"] = unicode.MaxRune
//# OLD <{uMaxRune}> 0
//# NEW <{uMaxRune}> 1
Vars["/unicode/M"] = &unicode.M
//# OLD <{uM}> 0
//# NEW <{uM}> 1
Vars["/unicode/Other_Uppercase"] = &unicode.Other_Uppercase
//# OLD <{uOther_Uppercase}> 0
//# NEW <{uOther_Uppercase}> 1
Funcs["/unicode/IsMark"] = unicode.IsMark
//# OLD <{uIsMark}> 0
//# NEW <{uIsMark}> 1
Vars["/unicode/Bopomofo"] = &unicode.Bopomofo
//# OLD <{uBopomofo}> 0
//# NEW <{uBopomofo}> 1
Vars["/unicode/Unified_Ideograph"] = &unicode.Unified_Ideograph
//# OLD <{uUnified_Ideograph}> 0
//# NEW <{uUnified_Ideograph}> 1
Vars["/unicode/Nko"] = &unicode.Nko
//# OLD <{uNko}> 0
//# NEW <{uNko}> 1
//? Consts["/unicode/MaxLatin1"] = unicode.MaxLatin1
//# OLD <{uMaxLatin1}> 0
//# NEW <{uMaxLatin1}> 1
Types["/unicode/CaseRange"] = new(*unicode.CaseRange)
//# OLD <{uCaseRange}> 0
//# NEW <{uCaseRange}> 1
Vars["/unicode/Cf"] = &unicode.Cf
//# OLD <{uCf}> 0
//# NEW <{uCf}> 1
Vars["/unicode/Phoenician"] = &unicode.Phoenician
//# OLD <{uPhoenician}> 0
//# NEW <{uPhoenician}> 1
Funcs["/unicode/IsUpper"] = unicode.IsUpper
//# OLD <{uIsUpper}> 0
//# NEW <{uIsUpper}> 1
Vars["/unicode/Kaithi"] = &unicode.Kaithi
//# OLD <{uKaithi}> 0
//# NEW <{uKaithi}> 1
Vars["/unicode/Mn"] = &unicode.Mn
//# OLD <{uMn}> 0
//# NEW <{uMn}> 1
Vars["/unicode/Old_South_Arabian"] = &unicode.Old_South_Arabian
//# OLD <{uOld_South_Arabian}> 0
//# NEW <{uOld_South_Arabian}> 1
Vars["/unicode/Hebrew"] = &unicode.Hebrew
//# OLD <{uHebrew}> 0
//# NEW <{uHebrew}> 1
Vars["/unicode/Cherokee"] = &unicode.Cherokee
//# OLD <{uCherokee}> 0
//# NEW <{uCherokee}> 1
Vars["/unicode/Diacritic"] = &unicode.Diacritic
//# OLD <{uDiacritic}> 0
//# NEW <{uDiacritic}> 1
Vars["/unicode/Ideographic"] = &unicode.Ideographic
//# OLD <{uIdeographic}> 0
//# NEW <{uIdeographic}> 1
Vars["/unicode/Dash"] = &unicode.Dash
//# OLD <{uDash}> 0
//# NEW <{uDash}> 1
Vars["/unicode/Space"] = &unicode.Space
//# OLD <{uSpace}> 0
//# NEW <{uSpace}> 1
Vars["/unicode/IDS_Binary_Operator"] = &unicode.IDS_Binary_Operator
//# OLD <{uIDS_Binary_Operator}> 0
//# NEW <{uIDS_Binary_Operator}> 1
Funcs["/unicode/SimpleFold"] = unicode.SimpleFold
//# OLD <{uSimpleFold}> 0
//# NEW <{uSimpleFold}> 1
Vars["/unicode/Other_ID_Start"] = &unicode.Other_ID_Start
//# OLD <{uOther_ID_Start}> 0
//# NEW <{uOther_ID_Start}> 1
Vars["/unicode/Arabic"] = &unicode.Arabic
//# OLD <{uArabic}> 0
//# NEW <{uArabic}> 1
Funcs["/unicode/IsGraphic"] = unicode.IsGraphic
//# OLD <{uIsGraphic}> 0
//# NEW <{uIsGraphic}> 1
Vars["/unicode/Tagalog"] = &unicode.Tagalog
//# OLD <{uTagalog}> 0
//# NEW <{uTagalog}> 1
Vars["/unicode/Mc"] = &unicode.Mc
//# OLD <{uMc}> 0
//# NEW <{uMc}> 1
Vars["/unicode/Thai"] = &unicode.Thai
//# OLD <{uThai}> 0
//# NEW <{uThai}> 1
//? Consts["/unicode/LowerCase"] = unicode.LowerCase
//# OLD <{uLowerCase}> 0
//# NEW <{uLowerCase}> 1
Vars["/unicode/ASCII_Hex_Digit"] = &unicode.ASCII_Hex_Digit
//# OLD <{uASCII_Hex_Digit}> 0
//# NEW <{uASCII_Hex_Digit}> 1
Vars["/unicode/Balinese"] = &unicode.Balinese
//# OLD <{uBalinese}> 0
//# NEW <{uBalinese}> 1
Funcs["/unicode/IsSymbol"] = unicode.IsSymbol
//# OLD <{uIsSymbol}> 0
//# NEW <{uIsSymbol}> 1
Funcs["/unicode/IsPunct"] = unicode.IsPunct
//# OLD <{uIsPunct}> 0
//# NEW <{uIsPunct}> 1
Vars["/unicode/Lo"] = &unicode.Lo
//# OLD <{uLo}> 0
//# NEW <{uLo}> 1
Vars["/unicode/Cs"] = &unicode.Cs
//# OLD <{uCs}> 0
//# NEW <{uCs}> 1
Vars["/unicode/PrintRanges"] = &unicode.PrintRanges
//# OLD <{uPrintRanges}> 0
//# NEW <{uPrintRanges}> 1
Vars["/unicode/Z"] = &unicode.Z
//# OLD <{uZ}> 0
//# NEW <{uZ}> 1
Vars["/unicode/Nl"] = &unicode.Nl
//# OLD <{uNl}> 0
//# NEW <{uNl}> 1
Vars["/unicode/Osmanya"] = &unicode.Osmanya
//# OLD <{uOsmanya}> 0
//# NEW <{uOsmanya}> 1
Vars["/unicode/Gothic"] = &unicode.Gothic
//# OLD <{uGothic}> 0
//# NEW <{uGothic}> 1
Vars["/unicode/Ps"] = &unicode.Ps
//# OLD <{uPs}> 0
//# NEW <{uPs}> 1
Vars["/unicode/Other_ID_Continue"] = &unicode.Other_ID_Continue
//# OLD <{uOther_ID_Continue}> 0
//# NEW <{uOther_ID_Continue}> 1
Vars["/unicode/Lisu"] = &unicode.Lisu
//# OLD <{uLisu}> 0
//# NEW <{uLisu}> 1
Vars["/unicode/Co"] = &unicode.Co
//# OLD <{uCo}> 0
//# NEW <{uCo}> 1
Vars["/unicode/Tai_Viet"] = &unicode.Tai_Viet
//# OLD <{uTai_Viet}> 0
//# NEW <{uTai_Viet}> 1
Vars["/unicode/Imperial_Aramaic"] = &unicode.Imperial_Aramaic
//# OLD <{uImperial_Aramaic}> 0
//# NEW <{uImperial_Aramaic}> 1
Vars["/unicode/Malayalam"] = &unicode.Malayalam
//# OLD <{uMalayalam}> 0
//# NEW <{uMalayalam}> 1
Types["/unicode/SpecialCase"] = new(*unicode.SpecialCase)
//# OLD <{uSpecialCase}> 0
//# NEW <{uSpecialCase}> 1
Vars["/unicode/Properties"] = &unicode.Properties
//# OLD <{uProperties}> 0
//# NEW <{uProperties}> 1
Vars["/unicode/Variation_Selector"] = &unicode.Variation_Selector
//# OLD <{uVariation_Selector}> 0
//# NEW <{uVariation_Selector}> 1
Vars["/unicode/Zl"] = &unicode.Zl
//# OLD <{uZl}> 0
//# NEW <{uZl}> 1
Vars["/unicode/Join_Control"] = &unicode.Join_Control
//# OLD <{uJoin_Control}> 0
//# NEW <{uJoin_Control}> 1
Vars["/unicode/Quotation_Mark"] = &unicode.Quotation_Mark
//# OLD <{uQuotation_Mark}> 0
//# NEW <{uQuotation_Mark}> 1
Vars["/unicode/Glagolitic"] = &unicode.Glagolitic
//# OLD <{uGlagolitic}> 0
//# NEW <{uGlagolitic}> 1
Types["/unicode/Range32"] = new(*unicode.Range32)
//# OLD <{uRange32}> 0
//# NEW <{uRange32}> 1
Vars["/unicode/FoldCategory"] = &unicode.FoldCategory
//# OLD <{uFoldCategory}> 0
//# NEW <{uFoldCategory}> 1
Types["/unicode/Range16"] = new(*unicode.Range16)
//# OLD <{uRange16}> 0
//# NEW <{uRange16}> 1
Vars["/unicode/Ethiopic"] = &unicode.Ethiopic
//# OLD <{uEthiopic}> 0
//# NEW <{uEthiopic}> 1
Vars["/unicode/Mandaic"] = &unicode.Mandaic
//# OLD <{uMandaic}> 0
//# NEW <{uMandaic}> 1
Vars["/unicode/Other_Lowercase"] = &unicode.Other_Lowercase
//# OLD <{uOther_Lowercase}> 0
//# NEW <{uOther_Lowercase}> 1
Vars["/unicode/Old_Turkic"] = &unicode.Old_Turkic
//# OLD <{uOld_Turkic}> 0
//# NEW <{uOld_Turkic}> 1
Vars["/unicode/Yi"] = &unicode.Yi
//# OLD <{uYi}> 0
//# NEW <{uYi}> 1
Vars["/unicode/Vai"] = &unicode.Vai
//# OLD <{uVai}> 0
//# NEW <{uVai}> 1
Vars["/unicode/Braille"] = &unicode.Braille
//# OLD <{uBraille}> 0
//# NEW <{uBraille}> 1
Funcs["/unicode/IsOneOf"] = unicode.IsOneOf
//# OLD <{uIsOneOf}> 0
//# NEW <{uIsOneOf}> 1
//? Consts["/unicode/Version"] = unicode.Version
//# OLD <{uVersion}> 0
//# NEW <{uVersion}> 1
Vars["/unicode/Letter"] = &unicode.Letter
//# OLD <{uLetter}> 0
//# NEW <{uLetter}> 1
Vars["/unicode/Other"] = &unicode.Other
//# OLD <{uOther}> 0
//# NEW <{uOther}> 1
Vars["/unicode/N"] = &unicode.N
//# OLD <{uN}> 0
//# NEW <{uN}> 1
Vars["/unicode/Hiragana"] = &unicode.Hiragana
//# OLD <{uHiragana}> 0
//# NEW <{uHiragana}> 1
Funcs["/unicode/ToTitle"] = unicode.ToTitle
//# OLD <{uToTitle}> 0
//# NEW <{uToTitle}> 1
Vars["/unicode/Zs"] = &unicode.Zs
//# OLD <{uZs}> 0
//# NEW <{uZs}> 1
Funcs["/unicode/ToLower"] = unicode.ToLower
//# OLD <{uToLower}> 0
//# NEW <{uToLower}> 1
Vars["/unicode/Ol_Chiki"] = &unicode.Ol_Chiki
//# OLD <{uOl_Chiki}> 0
//# NEW <{uOl_Chiki}> 1
Vars["/unicode/Linear_B"] = &unicode.Linear_B
//# OLD <{uLinear_B}> 0
//# NEW <{uLinear_B}> 1
Vars["/unicode/Symbol"] = &unicode.Symbol
//# OLD <{uSymbol}> 0
//# NEW <{uSymbol}> 1
//? Consts["/unicode/MaxCase"] = unicode.MaxCase
//# OLD <{uMaxCase}> 0
//# NEW <{uMaxCase}> 1
Vars["/unicode/Kharoshthi"] = &unicode.Kharoshthi
//# OLD <{uKharoshthi}> 0
//# NEW <{uKharoshthi}> 1
Vars["/unicode/Hex_Digit"] = &unicode.Hex_Digit
//# OLD <{uHex_Digit}> 0
//# NEW <{uHex_Digit}> 1
Vars["/unicode/AzeriCase"] = &unicode.AzeriCase
//# OLD <{uAzeriCase}> 0
//# NEW <{uAzeriCase}> 1
Vars["/unicode/Javanese"] = &unicode.Javanese
//# OLD <{uJavanese}> 0
//# NEW <{uJavanese}> 1
Vars["/unicode/Bengali"] = &unicode.Bengali
//# OLD <{uBengali}> 0
//# NEW <{uBengali}> 1
Vars["/unicode/STerm"] = &unicode.STerm
//# OLD <{uSTerm}> 0
//# NEW <{uSTerm}> 1
Funcs["/unicode/To"] = unicode.To
//# OLD <{uTo}> 0
//# NEW <{uTo}> 1
Vars["/unicode/Bidi_Control"] = &unicode.Bidi_Control
//# OLD <{uBidi_Control}> 0
//# NEW <{uBidi_Control}> 1
Vars["/unicode/Hyphen"] = &unicode.Hyphen
//# OLD <{uHyphen}> 0
//# NEW <{uHyphen}> 1
Vars["/unicode/Lepcha"] = &unicode.Lepcha
//# OLD <{uLepcha}> 0
//# NEW <{uLepcha}> 1
Vars["/unicode/C"] = &unicode.C
//# OLD <{uC}> 0
//# NEW <{uC}> 1
Vars["/unicode/Telugu"] = &unicode.Telugu
//# OLD <{uTelugu}> 0
//# NEW <{uTelugu}> 1
Vars["/unicode/Kannada"] = &unicode.Kannada
//# OLD <{uKannada}> 0
//# NEW <{uKannada}> 1
Vars["/unicode/Lt"] = &unicode.Lt
//# OLD <{uLt}> 0
//# NEW <{uLt}> 1
Vars["/unicode/Gujarati"] = &unicode.Gujarati
//# OLD <{uGujarati}> 0
//# NEW <{uGujarati}> 1
Funcs["/unicode/IsTitle"] = unicode.IsTitle
//# OLD <{uIsTitle}> 0
//# NEW <{uIsTitle}> 1
Vars["/unicode/Tai_Le"] = &unicode.Tai_Le
//# OLD <{uTai_Le}> 0
//# NEW <{uTai_Le}> 1
Vars["/unicode/Other_Math"] = &unicode.Other_Math
//# OLD <{uOther_Math}> 0
//# NEW <{uOther_Math}> 1
Funcs["/unicode/IsControl"] = unicode.IsControl
//# OLD <{uIsControl}> 0
//# NEW <{uIsControl}> 1
Vars["/unicode/Thaana"] = &unicode.Thaana
//# OLD <{uThaana}> 0
//# NEW <{uThaana}> 1
Vars["/unicode/Radical"] = &unicode.Radical
//# OLD <{uRadical}> 0
//# NEW <{uRadical}> 1
Vars["/unicode/Samaritan"] = &unicode.Samaritan
//# OLD <{uSamaritan}> 0
//# NEW <{uSamaritan}> 1
Vars["/unicode/Gurmukhi"] = &unicode.Gurmukhi
//# OLD <{uGurmukhi}> 0
//# NEW <{uGurmukhi}> 1
Vars["/unicode/Categories"] = &unicode.Categories
//# OLD <{uCategories}> 0
//# NEW <{uCategories}> 1
Vars["/unicode/Lm"] = &unicode.Lm
//# OLD <{uLm}> 0
//# NEW <{uLm}> 1
Vars["/unicode/Pc"] = &unicode.Pc
//# OLD <{uPc}> 0
//# NEW <{uPc}> 1
Vars["/unicode/Egyptian_Hieroglyphs"] = &unicode.Egyptian_Hieroglyphs
//# OLD <{uEgyptian_Hieroglyphs}> 0
//# NEW <{uEgyptian_Hieroglyphs}> 1
Funcs["/unicode/IsSpace"] = unicode.IsSpace
//# OLD <{uIsSpace}> 0
//# NEW <{uIsSpace}> 1
Vars["/unicode/Cyrillic"] = &unicode.Cyrillic
//# OLD <{uCyrillic}> 0
//# NEW <{uCyrillic}> 1
Vars["/unicode/Lower"] = &unicode.Lower
//# OLD <{uLower}> 0
//# NEW <{uLower}> 1
Vars["/unicode/Mongolian"] = &unicode.Mongolian
//# OLD <{uMongolian}> 0
//# NEW <{uMongolian}> 1
Vars["/unicode/Buginese"] = &unicode.Buginese
//# OLD <{uBuginese}> 0
//# NEW <{uBuginese}> 1
Vars["/unicode/Terminal_Punctuation"] = &unicode.Terminal_Punctuation
//# OLD <{uTerminal_Punctuation}> 0
//# NEW <{uTerminal_Punctuation}> 1
Vars["/unicode/Pd"] = &unicode.Pd
//# OLD <{uPd}> 0
//# NEW <{uPd}> 1
Vars["/unicode/Noncharacter_Code_Point"] = &unicode.Noncharacter_Code_Point
//# OLD <{uNoncharacter_Code_Point}> 0
//# NEW <{uNoncharacter_Code_Point}> 1
//? Consts["/unicode/UpperCase"] = unicode.UpperCase
//# OLD <{uUpperCase}> 0
//# NEW <{uUpperCase}> 1
Vars["/unicode/Inherited"] = &unicode.Inherited
//# OLD <{uInherited}> 0
//# NEW <{uInherited}> 1
Vars["/unicode/Hangul"] = &unicode.Hangul
//# OLD <{uHangul}> 0
//# NEW <{uHangul}> 1
Vars["/unicode/Tibetan"] = &unicode.Tibetan
//# OLD <{uTibetan}> 0
//# NEW <{uTibetan}> 1
Vars["/unicode/Runic"] = &unicode.Runic
//# OLD <{uRunic}> 0
//# NEW <{uRunic}> 1
Vars["/unicode/Devanagari"] = &unicode.Devanagari
//# OLD <{uDevanagari}> 0
//# NEW <{uDevanagari}> 1
Vars["/unicode/Lycian"] = &unicode.Lycian
//# OLD <{uLycian}> 0
//# NEW <{uLycian}> 1
Vars["/unicode/Old_Persian"] = &unicode.Old_Persian
//# OLD <{uOld_Persian}> 0
//# NEW <{uOld_Persian}> 1
//? Consts["/unicode/ReplacementChar"] = unicode.ReplacementChar
//# OLD <{uReplacementChar}> 0
//# NEW <{uReplacementChar}> 1
Vars["/unicode/Han"] = &unicode.Han
//# OLD <{uHan}> 0
//# NEW <{uHan}> 1
Vars["/unicode/Avestan"] = &unicode.Avestan
//# OLD <{uAvestan}> 0
//# NEW <{uAvestan}> 1
Vars["/unicode/Tamil"] = &unicode.Tamil
//# OLD <{uTamil}> 0
//# NEW <{uTamil}> 1
Vars["/unicode/Deseret"] = &unicode.Deseret
//# OLD <{uDeseret}> 0
//# NEW <{uDeseret}> 1
Vars["/unicode/Cuneiform"] = &unicode.Cuneiform
//# OLD <{uCuneiform}> 0
//# NEW <{uCuneiform}> 1
Vars["/unicode/Latin"] = &unicode.Latin
//# OLD <{uLatin}> 0
//# NEW <{uLatin}> 1
Vars["/unicode/IDS_Trinary_Operator"] = &unicode.IDS_Trinary_Operator
//# OLD <{uIDS_Trinary_Operator}> 0
//# NEW <{uIDS_Trinary_Operator}> 1
Vars["/unicode/Pattern_Syntax"] = &unicode.Pattern_Syntax
//# OLD <{uPattern_Syntax}> 0
//# NEW <{uPattern_Syntax}> 1
Vars["/unicode/Lydian"] = &unicode.Lydian
//# OLD <{uLydian}> 0
//# NEW <{uLydian}> 1
Vars["/unicode/Pf"] = &unicode.Pf
//# OLD <{uPf}> 0
//# NEW <{uPf}> 1


//     func unicode/utf16.Encode
//     func unicode/utf16.IsSurrogate
//     func unicode/utf16.EncodeRune
//     func unicode/utf16.Decode
//     func unicode/utf16.DecodeRune

Funcs["/unicode/utf16/Encode"] = unicode_utf16.Encode
//# OLD <{uEncode}> 0
//# NEW <{uEncode}> 1
Funcs["/unicode/utf16/IsSurrogate"] = unicode_utf16.IsSurrogate
//# OLD <{uIsSurrogate}> 0
//# NEW <{uIsSurrogate}> 1
Funcs["/unicode/utf16/EncodeRune"] = unicode_utf16.EncodeRune
//# OLD <{uEncodeRune}> 0
//# NEW <{uEncodeRune}> 1
Funcs["/unicode/utf16/Decode"] = unicode_utf16.Decode
//# OLD <{uDecode}> 0
//# NEW <{uDecode}> 1
Funcs["/unicode/utf16/DecodeRune"] = unicode_utf16.DecodeRune
//# OLD <{uDecodeRune}> 0
//# NEW <{uDecodeRune}> 1


//     func unicode/utf8.ValidString
//    const unicode/utf8.RuneSelf
//     func unicode/utf8.DecodeRune
//     func unicode/utf8.FullRune
//     func unicode/utf8.EncodeRune
//     func unicode/utf8.RuneCount
//     func unicode/utf8.Valid
//     func unicode/utf8.RuneCountInString
//    const unicode/utf8.MaxRune
//     func unicode/utf8.FullRuneInString
//     func unicode/utf8.DecodeLastRune
//    const unicode/utf8.RuneError
//     func unicode/utf8.DecodeLastRuneInString
//     func unicode/utf8.RuneStart
//     func unicode/utf8.DecodeRuneInString
//    const unicode/utf8.UTFMax
//     func unicode/utf8.RuneLen

//? Consts["/unicode/utf8/MaxRune"] = unicode_utf8.MaxRune
//# OLD <{uMaxRune}> 1
//# NEW <{uMaxRune}> 2
Funcs["/unicode/utf8/FullRuneInString"] = unicode_utf8.FullRuneInString
//# OLD <{uFullRuneInString}> 0
//# NEW <{uFullRuneInString}> 1
Funcs["/unicode/utf8/DecodeLastRune"] = unicode_utf8.DecodeLastRune
//# OLD <{uDecodeLastRune}> 0
//# NEW <{uDecodeLastRune}> 1
//? Consts["/unicode/utf8/RuneError"] = unicode_utf8.RuneError
//# OLD <{uRuneError}> 0
//# NEW <{uRuneError}> 1
Funcs["/unicode/utf8/DecodeLastRuneInString"] = unicode_utf8.DecodeLastRuneInString
//# OLD <{uDecodeLastRuneInString}> 0
//# NEW <{uDecodeLastRuneInString}> 1
Funcs["/unicode/utf8/RuneStart"] = unicode_utf8.RuneStart
//# OLD <{uRuneStart}> 0
//# NEW <{uRuneStart}> 1
Funcs["/unicode/utf8/DecodeRuneInString"] = unicode_utf8.DecodeRuneInString
//# OLD <{uDecodeRuneInString}> 0
//# NEW <{uDecodeRuneInString}> 1
//? Consts["/unicode/utf8/UTFMax"] = unicode_utf8.UTFMax
//# OLD <{uUTFMax}> 0
//# NEW <{uUTFMax}> 1
Funcs["/unicode/utf8/RuneLen"] = unicode_utf8.RuneLen
//# OLD <{uRuneLen}> 0
//# NEW <{uRuneLen}> 1
Funcs["/unicode/utf8/ValidString"] = unicode_utf8.ValidString
//# OLD <{uValidString}> 0
//# NEW <{uValidString}> 1
//? Consts["/unicode/utf8/RuneSelf"] = unicode_utf8.RuneSelf
//# OLD <{uRuneSelf}> 0
//# NEW <{uRuneSelf}> 1
Funcs["/unicode/utf8/DecodeRune"] = unicode_utf8.DecodeRune
//# OLD <{uDecodeRune}> 1
//# NEW <{uDecodeRune}> 2
Funcs["/unicode/utf8/FullRune"] = unicode_utf8.FullRune
//# OLD <{uFullRune}> 0
//# NEW <{uFullRune}> 1
Funcs["/unicode/utf8/EncodeRune"] = unicode_utf8.EncodeRune
//# OLD <{uEncodeRune}> 1
//# NEW <{uEncodeRune}> 2
Funcs["/unicode/utf8/RuneCount"] = unicode_utf8.RuneCount
//# OLD <{uRuneCount}> 0
//# NEW <{uRuneCount}> 1
Funcs["/unicode/utf8/Valid"] = unicode_utf8.Valid
//# OLD <{uValid}> 0
//# NEW <{uValid}> 1
Funcs["/unicode/utf8/RuneCountInString"] = unicode_utf8.RuneCountInString
//# OLD <{uRuneCountInString}> 0
//# NEW <{uRuneCountInString}> 1

} // END
//# ! Uniq <{tTemplate}> 2
//# ! Uniq <{rFunc}> 2
//# ! Uniq <{eGenerateKey}> 2
//# ! Uniq <{rFloat32}> 2
//# ! Uniq <{tMust}> 2
//# ! Uniq <{tHTMLEscapeString}> 2
//# ! Uniq <{tDial}> 2
//# ! Uniq <{bCorruptInputError}> 2
//# ! Uniq <{mFileHeader}> 2
//# ! Uniq <{cUpdate}> 2
//# ! Uniq <{tConn}> 2
//# ! Uniq <{mFile}> 2
//# ! Uniq <{hErrLineTooLong}> 2
//# ! Uniq <{sScanComments}> 2
//# ! Uniq <{lNew}> 2
//# ! Uniq <{uMaxRune}> 2
//# ! Uniq <{sError}> 2
//# ! Uniq <{sDial}> 2
//# ! Uniq <{sBlockSize}> 3
//# ! Uniq <{zNewReader}> 2
//# ! Uniq <{pDecode}> 2
//# ! Uniq <{dType}> 2
//# ! Uniq <{tNewWriter}> 3
//# ! Uniq <{bEncoding}> 2
//# ! Uniq <{sIndex}> 2
//# ! Uniq <{bNewReader}> 3
//# ! Uniq <{tFuncMap}> 2
//# ! Uniq <{sNew}> 5
//# ! Uniq <{pFormatError}> 2
//# ! Uniq <{zErrChecksum}> 2
//# ! Uniq <{bNewEncoding}> 2
//# ! Uniq <{sSize}> 3
//# ! Uniq <{uUser}> 2
//# ! Uniq <{bReader}> 2
//# ! Uniq <{bNewDecoder}> 2
//# ! Uniq <{uEncodeRune}> 2
//# ! Uniq <{tHTMLEscaper}> 2
//# ! Uniq <{cSize}> 2
//# ! Uniq <{cNew}> 2
//# ! Uniq <{zNewWriter}> 2
//# ! Uniq <{tJSEscapeString}> 2
//# ! Uniq <{tJSEscape}> 2
//# ! Uniq <{cTable}> 2
//# ! Uniq <{hServer}> 2
//# ! Uniq <{tJSEscaper}> 2
//# ! Uniq <{sScanner}> 3
//# ! Uniq <{tNew}> 2
//# ! Uniq <{tNewReader}> 2
//# ! Uniq <{sOpen}> 2
//# ! Uniq <{rInt}> 3
//# ! Uniq <{uDecodeRune}> 2
//# ! Uniq <{cChecksum}> 2
//# ! Uniq <{bStdEncoding}> 2
//# ! Uniq <{tParseFiles}> 2
//# ! Uniq <{pEncode}> 2
//# ! Uniq <{zWriter}> 2
//# ! Uniq <{rFloat64}> 2
//# ! Uniq <{tError}> 2
//# ! Uniq <{pMode}> 2
//# ! Uniq <{dNew}> 2
//# ! Uniq <{rUint32}> 2
//# ! Uniq <{cMakeTable}> 2
//# ! Uniq <{pProfile}> 2
//# ! Uniq <{tReader}> 2
//# ! Uniq <{rNew}> 3
//# ! Uniq <{dValue}> 2
//# ! Uniq <{tURLQueryEscaper}> 2
//# ! Uniq <{bNewEncoder}> 2
//# ! Uniq <{tParseGlob}> 2
//# ! Uniq <{tHTMLEscape}> 2
//# ! Uniq <{tWriter}> 3
